(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[2792],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(n),f=o,k=m["".concat(c,".").concat(f)]||m[f]||s[f]||i;return n?r.createElement(k,a(a({ref:t},u),{},{components:n})):r.createElement(k,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9768:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var r=n(22122),o=n(19756),i=(n(67294),n(3905)),a=["components"],p={id:"B98.\u5b57\u7b26\u4e32",title:"B98.\u5b57\u7b26\u4e32","typora-root-url":"../"},c={unversionedId:"Algorithm/B98.\u5b57\u7b26\u4e32",id:"Algorithm/B98.\u5b57\u7b26\u4e32",isDocsHomePage:!1,title:"B98.\u5b57\u7b26\u4e32",description:"\u5b57\u7b26\u4e32",source:"@site/docs/2.Algorithm/B98.\u5b57\u7b26\u4e32.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/B98.\u5b57\u7b26\u4e32",permalink:"/Algorithm/B98.\u5b57\u7b26\u4e32",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/B98.\u5b57\u7b26\u4e32.md",version:"current",frontMatter:{id:"B98.\u5b57\u7b26\u4e32",title:"B98.\u5b57\u7b26\u4e32","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u6570\u5b66",permalink:"/Algorithm/B9.\u6570\u5b66"},next:{title:"\u56de\u6587",permalink:"/Algorithm/B99.\u4e13\u9898"}},l=[{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",children:[]}],u={toc:l};function s(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,i.kt)("p",null,"\u540e\u7f00\u6570\u7ec4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u540e\u7f00\u6570\u7ec4\u662f\u4e00\u4e2a\u5f88\u96be\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u5f88\u6709\u7528\uff0c\u5728\u6b64\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u3002\u5982\u679c\u60f3\u6df1\u5165\u4e86\u89e3\u5b83\uff0c\u8bf7\u53c2\u8003\u7f57\u7a57\u9a9e\u7684\u7b97\u6cd5\u5408\u96c6\u4e4b\u300a\u540e\u7f00\u6570\u7ec4\u2014\u2014\u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b\u5de5\u5177\u300b\u548c\u7b97\u6cd5\u5408\u96c6\u3002\u540e\u7f00\u6570\u7ec4\u80fd\u5904\u7406\u5f88\u591a\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u5047\u8bbe\u5df2\u7ecf\u8ba1\u7b97\u597d\u5b57\u7b26\u4e32S\u7684\u540e\u7f00\u6570\u7ec4\uff0c\u73b0\u5728\u8981\u6c42\u5b57\u7b26\u4e32T\u5728S\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u53ea\u8981\u901a\u8fc7\u4e8c\u5206\u641c\u7d22\u5c31\u53ef\u4ee5\u5728O(|T|log|S|)\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002\u5982\u679c\u914d\u5408\u4f7f\u7528\u6700\u957f\u516c\u5171\u524d\u7f00\u6570\u7ec4\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u5e94\u7528\u3002\u53ef\u4ee5\u7528\u6765\u5bfb\u627e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u548c\u5b57\u7b26\u4e32\u662f\u6700\u957f\u56de\u6587\u5b50\u4e32\u3002\n")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"205\u540c\u6784\u5b57\u7b26\u4e32"},(0,i.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/isomorphic-strings/description/"},"205.\u540c\u6784\u5b57\u7b26\u4e32")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"s"))," \u548c ",(0,i.kt)("strong",{parentName:"p"},"*t","*"),"\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002"),(0,i.kt)("p",{parentName:"blockquote"},"\u5982\u679c ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"s"))," \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 ",(0,i.kt)("strong",{parentName:"p"},"*t","*")," \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002"),(0,i.kt)("p",{parentName:"blockquote"},"\u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002"),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1:")),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\u8f93\u5165\uff1as = "egg", t = "add"\n\u8f93\u51fa\uff1atrue\n'))),(0,i.kt)("p",null,"\u95ee\u9898\u8f6c\u5316\u4e00\u4e0b\uff1a\u8bb0\u5f55\u4e24\u4e2a\u5b57\u7b26\u4e32\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u76f8\u540c\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e\u5b83\u4eec\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u540c\u6784\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isIsomorphic(string s, string t) {\n        if (s.length() != t.length()) return false;\n        vector<int> s_first(256, 0), t_first(256, 0);\n        for (int i = 0; i < s.length(); ++i) {\n            if (s_first[s[i]] != t_first[t[i]]) return false;\n            s_first[s[i]] = t_first[t[i]] = i + 1;\n        }\n        return true;\n    }\n};\n")),(0,i.kt)("h4",{id:"696\u8ba1\u6570\u4e8c\u8fdb\u5236\u5b50\u4e32"},(0,i.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/count-binary-substrings/description/"},"696.\u8ba1\u6570\u4e8c\u8fdb\u5236\u5b50\u4e32")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),"\uff0c\u8ba1\u7b97\u5177\u6709\u76f8\u540c\u6570\u91cf 0 \u548c 1 \u7684\u975e\u7a7a\uff08\u8fde\u7eed\uff09\u5b50\u5b57\u7b26\u4e32\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5b50\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709 0 \u548c\u6240\u6709 1 \u90fd\u662f\u8fde\u7eed\u7684\u3002"),(0,i.kt)("p",{parentName:"blockquote"},"\u91cd\u590d\u51fa\u73b0\u7684\u5b50\u4e32\u8981\u8ba1\u7b97\u5b83\u4eec\u51fa\u73b0\u7684\u6b21\u6570\u3002"),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1 :")),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\u8f93\u5165: "00110011"\n\u8f93\u51fa: 6\n\u89e3\u91ca: \u67096\u4e2a\u5b50\u4e32\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8fde\u7eed1\u548c0\uff1a\u201c0011\u201d\uff0c\u201c01\u201d\uff0c\u201c1100\u201d\uff0c\u201c10\u201d\uff0c\u201c0011\u201d \u548c \u201c01\u201d\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u4e00\u4e9b\u91cd\u590d\u51fa\u73b0\u7684\u5b50\u4e32\u8981\u8ba1\u7b97\u5b83\u4eec\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u53e6\u5916\uff0c\u201c00110011\u201d\u4e0d\u662f\u6709\u6548\u7684\u5b50\u4e32\uff0c\u56e0\u4e3a\u6240\u6709\u76840\uff08\u548c1\uff09\u6ca1\u6709\u7ec4\u5408\u5728\u4e00\u8d77\u3002\n'))),(0,i.kt)("p",null,"\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u8bb0\u5f55\u548c\u5f53\u524d\u4f4d\u7f6e\u6570\u5b57\u76f8\u540c\u4e14\u8fde\u7eed\u7684\u957f\u5ea6\uff0c\u4ee5\u53ca\u5176\u4e4b\u524d\u8fde\u7eed\u7684\u4e0d\u540c\u6570\u5b57\u7684\u957f\u5ea6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int countBinarySubstrings(string s) {\n        if (s.empty()) return 0;\n        int pre = 0, cur = 1, count = 0;\n        for (int i = 1; i < s.length(); i++) {\n            if (s[i] == s[i - 1]) ++cur;\n            else pre = cur, cur = 1;\n            if (pre >= cur) count++;\n        }\n        return count;\n    }\n};\n")))}s.isMDXComponent=!0}}]);