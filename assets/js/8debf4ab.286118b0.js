(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[1221],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=d(t),f=i,h=p["".concat(s,".").concat(f)]||p[f]||l[f]||o;return t?r.createElement(h,c(c({ref:n},u),{},{components:t})):r.createElement(h,c({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=p;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var d=2;d<o;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},68774:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d},default:function(){return l}});var r=t(22122),i=t(19756),o=(t(67294),t(3905)),c=["components"],a={id:"B8.\u641c\u7d22",title:"B8.\u641c\u7d22","typora-root-url":"../"},s={unversionedId:"Algorithm/B8.\u641c\u7d22",id:"Algorithm/B8.\u641c\u7d22",isDocsHomePage:!1,title:"B8.\u641c\u7d22",description:"\u6df1\u641c\uff08depth-first seach\uff0cDFS\uff09",source:"@site/docs/2.Algorithm/B8.\u641c\u7d22.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/B8.\u641c\u7d22",permalink:"/Algorithm/B8.\u641c\u7d22",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/B8.\u641c\u7d22.md",version:"current",frontMatter:{id:"B8.\u641c\u7d22",title:"B8.\u641c\u7d22","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u56de\u6eaf\u6cd5\uff08backtracking\uff09",permalink:"/Algorithm/B7.\u56de\u6eaf"},next:{title:"\u6570\u5b66",permalink:"/Algorithm/B9.\u6570\u5b66"}},d=[{value:"\u6df1\u641c\uff08depth-first seach\uff0cDFS\uff09",id:"\u6df1\u641c\uff08depth-first-seach\uff0cdfs\uff09",children:[]},{value:"\u5355\u8bcd\u63a5\u9f99",id:"\u5355\u8bcd\u63a5\u9f99",children:[{value:"\u53cc\u5411BFS",id:"\u53cc\u5411bfs",children:[]}]}],u={toc:d};function l(e){var n=e.components,a=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"\u6df1\u641c\uff08depth-first-seach\uff0cdfs\uff09"},"\u6df1\u641c\uff08depth-first seach\uff0cDFS\uff09"),(0,o.kt)("p",null,"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u4e5f\u53ef\u4ee5\u7528\u6765\u68c0\u6d4b\u73af\u8def\uff1a\u8bb0\u5f55\u6bcf\u4e2a\u904d\u5386\u8fc7\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u82e5\u4e00\u4e2a\u8282\u70b9\u88ab\u518d\u6b21\u904d\u5386\u4e14\u7236\u8282\u70b9\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u6709\u73af\u3002"),(0,o.kt)("p",null,"\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u662f\u5426\u6709\u73af\u8def\uff0c\u82e5\u6700\u540e\u5b58\u5728\u5165\u5ea6\u4e0d\u4e3a\u96f6\u7684\u70b9\uff0c\u5219\u8bf4\u660e\u6709\u73af\u3002"),(0,o.kt)("p",null,"\u5bf9\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u8fdb\u884c\u6807\u8bb0\uff0c\u4ee5\u9632\u6b62\u5728\u904d\u5386\u65f6\u91cd\u590d\u641c\u7d22\u67d0\u4e2a\u8282\u70b9\uff0c\u8fd9\u79cd\u505a\u6cd5\u53eb\u505a",(0,o.kt)("strong",{parentName:"p"},"\u72b6\u6001\u8bb0\u5f55"),"\u6216",(0,o.kt)("strong",{parentName:"p"},"\u8bb0\u5fc6\u5316"),"\uff08memoization\uff09\u3002"),(0,o.kt)("h4",{id:"695\u5c9b\u5c7f\u7684\u6700\u5927\u9762\u79ef"},(0,o.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/max-area-of-island/description/"},"695.\u5c9b\u5c7f\u7684\u6700\u5927\u9762\u79ef")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684 0-1 \u77e9\u9635,\u5176\u4e2d 0 \u8868\u793a\u6d77\u6d0b,1 \u8868\u793a\u9646\u5730\u3002\u5355\u72ec\u7684\u6216\u76f8\u90bb\u7684\u9646\u5730\u53ef\u4ee5\u5f62\u6210\u5c9b\n\u5c7f,\u6bcf\u4e2a\u683c\u5b50\u53ea\u4e0e\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u76f8\u90bb\u3002\u6c42\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u3002")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8fb9\u754c\u5224\u5b9a"),"\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u4e00\u79cd\u662f\u5148\u5224\u5b9a\u662f\u5426\u8d8a\u754c,\u53ea\u6709\u5728\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u624d\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22(\u5373\u5224\u65ad\u653e\u5728\u8c03\u7528\u9012\u5f52\u51fd\u6570\u524d);"),(0,o.kt)("li",{parentName:"ol"},"\u53e6\u4e00\u79cd\u662f\u5148\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22,\u5f85\u4e0b\u4e00\u6b65\u641c\u7d22\u5f00\u59cb\u65f6\u518d\u5224\u65ad\u662f\u5426\u5408\u6cd5(\u5373\u5224\u65ad\u653e\u5728\u8f85\u51fd\u6570\u7b2c\u4e00\u884c)\u3002\u6211")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u5148\u5224\u5b9a\u662f\u5426\u8d8a\u754c\nint dfs(vector<vector<int>>& grid, int r, int c) {\n  if (grid[r][c] == 0) return 0;\n  grid[r][c] = 0;\n  int x, y, area = 1;\n  for (int i = 0; i < 4; ++i) {\n    x = r + direction[i], y = c + direction[i + 1];\n    if (x >= 0 && x < grid.size() && y >= 0 && y < grid[0].size()) {\n      area += dfs(grid, x, y);\n    }\n  }\n  return area;\n}\n\n// \u5148\u8fdb\u884c\u4e0b\u4e00\u6b65\u641c\u7d22\nint dfs(vector<vector<int>>& grid, int r, int c) {\n  if (r < 0 || r >= grid.size() || c < 0 || c >= grid[0].size() ||\n      grid[r][c] == 0) {\n    return 0;\n  }\n  grid[r][c] = 0;\n  return 1 + dfs(grid, r + 1, c) + dfs(grid, r - 1, c) + dfs(grid, r, c + 1) +\n         dfs(grid, r, c - 1);\n}\n")),(0,o.kt)("h4",{id:"417\u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898"},(0,o.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/pacific-atlantic-water-flow/description/"},"417.\u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"m x n")," \u7684\u975e\u8d1f\u6574\u6570\u77e9\u9635\u6765\u8868\u793a\u4e00\u7247\u5927\u9646\u4e0a\u5404\u4e2a\u5355\u5143\u683c\u7684\u9ad8\u5ea6\u3002\u201c\u592a\u5e73\u6d0b\u201d\u5904\u4e8e\u5927\u9646\u7684\u5de6\u8fb9\u754c\u548c\u4e0a\u8fb9\u754c\uff0c\u800c\u201c\u5927\u897f\u6d0b\u201d\u5904\u4e8e\u5927\u9646\u7684\u53f3\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u3002"),(0,o.kt)("p",{parentName:"blockquote"},"\u89c4\u5b9a\u6c34\u6d41\u53ea\u80fd\u6309\u7167\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u6d41\u52a8\uff0c\u4e14\u53ea\u80fd\u4ece\u9ad8\u5230\u4f4e\u6216\u8005\u5728\u540c\u7b49\u9ad8\u5ea6\u4e0a\u6d41\u52a8\u3002"),(0,o.kt)("p",{parentName:"blockquote"},"\u8bf7\u627e\u51fa\u90a3\u4e9b\u6c34\u6d41\u65e2\u53ef\u4ee5\u6d41\u52a8\u5230\u201c\u592a\u5e73\u6d0b\u201d\uff0c\u53c8\u80fd\u6d41\u52a8\u5230\u201c\u5927\u897f\u6d0b\u201d\u7684\u9646\u5730\u5355\u5143\u7684\u5750\u6807\u3002 "),(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre"},"\u7ed9\u5b9a\u4e0b\u9762\u7684 5x5 \u77e9\u9635:\n\n\u592a\u5e73\u6d0b ~   ~   ~   ~   ~ \n    ~  1   2   2   3  (5) *\n    ~  3   2   3  (4) (4) *\n    ~  2   4  (5)  3   1  *\n    ~ (6) (7)  1   4   5  *\n    ~ (5)  1   1   2   4  *\n          *   *   *   *   * \u5927\u897f\u6d0b\n\n\u8fd4\u56de:\n\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (\u4e0a\u56fe\u4e2d\u5e26\u62ec\u53f7\u7684\u5355\u5143).\n"))),(0,o.kt)("p",null,"\u53cd\u8fc7\u6765\u60f3,\u4ece\u4e24\u4e2a\u5927\u6d0b\u5f00\u59cb\u5411\u4e0a\u6d41,\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u77e9\u5f62\u56db\u6761\u8fb9\u8fdb\u884c\u641c\u7d22"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n        if (heights.empty() || heights[0].empty()) {\n            return {};\n        }\n        vector<vector<int>> ans;\n        int n = heights.size(), m = (n ? heights[0].size() : 0);\n        vector<vector<bool>> can_reach_p(n, vector<bool>(m, false));\n        vector<vector<bool>> can_reach_a(n, vector<bool>(m, false));\n        for (int i = 0; i < n; i++) {\n            dfs(heights, can_reach_p, i, 0);\n            dfs(heights, can_reach_a, i, m - 1);\n        }\n        for (int i = 0; i < m; i++) {\n            dfs(heights, can_reach_p, 0, i);\n            dfs(heights, can_reach_a, n - 1, i);\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (can_reach_a[i][j] && can_reach_p[i][j]) {\n                    ans.push_back(vector<int>{i, j});\n                }\n            }\n        }\n        return ans;\n    }\n\n    int dir[4][2] = {0, 1, 1, 0, 0, -1, -1, 0};\n    void dfs(const vector<vector<int>>& heights, vector<vector<bool>> &can_reach,int r, int c) {\n        if (can_reach[r][c]) return ;\n        can_reach[r][c] = true;\n        for (int i = 0; i < 4; i++) {\n            int x = r + dir[i][0];\n            int y = c + dir[i][1];\n            if (x < 0 || x >= heights.size()) continue;\n            if (y < 0 || y >= heights[0].size()) continue;\n            if (heights[x][y] < heights[r][c]) continue;\n            dfs(heights, can_reach, x, y);\n        }\n        return ;\n    }\n};\n")),(0,o.kt)("h1",{id:"bfs"},"BFS"),(0,o.kt)("h2",{id:"\u5355\u8bcd\u63a5\u9f99"},(0,o.kt)("a",{parentName:"h2",href:"https://leetcode-cn.com/problems/word-ladder/"},"\u5355\u8bcd\u63a5\u9f99")),(0,o.kt)("h3",{id:"\u53cc\u5411bfs"},"\u53cc\u5411BFS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'beginWord = "hit",\nendWord = "cog",\nwordList = ["hot","dot","dog","lot","log","cog"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4e00\u7aef\u4ece ",(0,o.kt)("inlineCode",{parentName:"li"},"hit"),"\u5f00\u59cb\u641c\u7d22\uff0c\u627e\u5230\u6240\u6709\u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"hit"),"\u76f8\u90bb\u7684\u5355\u8bcd\uff0c\u5373\u53ea\u5dee\u4e00\u4e2a\u5b57\u7b26\u7684\u5355\u8bcd\uff0c\u5e76\u4e14\u90fd\u5b58\u5165\u961f\u5217 ",(0,o.kt)("inlineCode",{parentName:"li"},"queue_"),"\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u4e00\u7aef\u4ece ",(0,o.kt)("inlineCode",{parentName:"li"},"cog"),"\u5f00\u59cb\u641c\u7d22\uff0c\u627e\u5230\u6240\u6709\u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"cog"),"\u76f8\u90bb\u7684\u5355\u8bcd\uff0c\u5e76\u4e14\u90fd\u5b58\u5165\u961f\u5217 ",(0,o.kt)("inlineCode",{parentName:"li"},"queue2_"),"\u3002")),(0,o.kt)("p",null,"\u5f53\u67d0\u4e2a\u5355\u8bcd\uff0c\u540c\u65f6\u88ab\u4e24\u4e2a\u961f\u5217\u90fd\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u8def\u5f84\u3002\u540c\u65f6\u4e5f\u662f\u6700\u77ed\u7684\u8def\u5f84\u3002\u4e3a\u4ec0\u4e48\uff1f"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u53cc\u7aefBFS",src:t(25154).Z})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int ladderLength(std::string beginWord, std::string endWord, std::vector<std::string>& wordList) {\n\n        wordList.push_back(beginWord);\n\n        std::queue<std::string> queue1_;    queue1_.push(beginWord);\n        std::queue<std::string> queue2_;    queue2_.push(endWord);\n\n        std::unordered_set<std::string> visited1_;  visited1_.insert(beginWord);\n        std::unordered_set<std::string> visited2_;  visited2_.insert(endWord);\n\n        std::unordered_set<std::string> wordListSet_(wordList.begin(), wordList.end(), wordList.size());\n\n        int count =0; \n        \n        if(wordListSet_.find(endWord) == wordListSet_.end())\n            return count;\n\n        while(! queue1_.empty() && !queue2_.empty()) {  \n\n            ++count; // \u6bcf\u589e\u52a0\u4e00\u5c42\u5c31\u589e\u52a0\u4e00\u4e2a\n            \n            // \u603b\u662f\u4fdd\u8bc1queue\u5c0f\uff0c\u4ece\u5c0f\u7684\u4e00\u7aef\u904d\u5386\n            if(queue1_.size() > queue2_.size()) { \n                queue1_.swap(queue2_);\n                visited1_.swap(visited2_);\n            }\n            \n            int length = queue1_.size();\n\n            while(length--) { \n\n                std::string str(queue1_.front());  queue1_.pop();\n\n                for(int i=0; i < str.length(); ++i) { \n\n                    char Ch = str[i]; \n                    // \u627e\u5230\u6240\u6709\u548c\u4ed6\u76f8\u90bb\u7684\u5355\u8bcd\n                    for(char c='a'; c <= 'z'; ++c) { \n                        str[i] = c; \n\n                        if(visited1_.find(str) != visited1_.end()) { \n                            continue;\n                        }\n\n                        if(visited2_.find(str) != visited2_.end()) { \n                            return count +1;\n                        }\n\n                        if(wordListSet_.find(str) != wordListSet_.end()) { \n                            queue1_.push(str);\n                            visited1_.insert(str);\n                        }\n                    }\n\n                    str[i] = Ch;\n                }\n            }\n        }\n\n        return 0; \n    }\n};\n\n")))}l.isMDXComponent=!0},25154:function(e,n,t){"use strict";n.Z=t.p+"assets/images/\u5355\u8bcd\u63a5\u9f99_\u53cc\u7aefbfs-5f23bc4bdcfd430c7390a2101f50dfb9.png"}}]);