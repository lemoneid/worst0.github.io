"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[1916],{3905:function(n,a,t){t.d(a,{Zo:function(){return o},kt:function(){return N}});var e=t(67294);function s(n,a,t){return a in n?Object.defineProperty(n,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[a]=t,n}function r(n,a){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);a&&(e=e.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),t.push.apply(t,e)}return t}function m(n){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(n,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(t,a))}))}return n}function p(n,a){if(null==n)return{};var t,e,s=function(n,a){if(null==n)return{};var t,e,s={},r=Object.keys(n);for(e=0;e<r.length;e++)t=r[e],a.indexOf(t)>=0||(s[t]=n[t]);return s}(n,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(e=0;e<r.length;e++)t=r[e],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var i=e.createContext({}),l=function(n){var a=e.useContext(i),t=a;return n&&(t="function"==typeof n?n(a):m(m({},a),n)),t},o=function(n){var a=l(n.components);return e.createElement(i.Provider,{value:a},n.children)},c={inlineCode:"code",wrapper:function(n){var a=n.children;return e.createElement(e.Fragment,{},a)}},k=e.forwardRef((function(n,a){var t=n.components,s=n.mdxType,r=n.originalType,i=n.parentName,o=p(n,["components","mdxType","originalType","parentName"]),k=l(t),N=s,u=k["".concat(i,".").concat(N)]||k[N]||c[N]||r;return t?e.createElement(u,m(m({ref:a},o),{},{components:t})):e.createElement(u,m({ref:a},o))}));function N(n,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof n||s){var r=t.length,m=new Array(r);m[0]=k;var p={};for(var i in a)hasOwnProperty.call(a,i)&&(p[i]=a[i]);p.originalType=n,p.mdxType="string"==typeof n?n:s,m[1]=p;for(var l=2;l<r;l++)m[l]=t[l];return e.createElement.apply(null,m)}return e.createElement.apply(null,t)}k.displayName="MDXCreateElement"},9695:function(n,a,t){t.r(a),t.d(a,{frontMatter:function(){return p},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return o},default:function(){return k}});var e=t(87462),s=t(63366),r=(t(67294),t(3905)),m=["components"],p={id:"A7.\u6392\u5e8f",title:"A7.\u6392\u5e8f","typora-root-url":"../"},i="\u6392\u5e8f",l={unversionedId:"Algorithm/A7.\u6392\u5e8f",id:"Algorithm/A7.\u6392\u5e8f",isDocsHomePage:!1,title:"A7.\u6392\u5e8f",description:"849589-20180402133438219-1946132192",source:"@site/docs/2.Algorithm/A7.\u6392\u5e8f.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/A7.\u6392\u5e8f",permalink:"/Algorithm/A7.\u6392\u5e8f",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/A7.\u6392\u5e8f.md",version:"current",lastUpdatedAt:1633869865,formattedLastUpdatedAt:"10/10/2021",frontMatter:{id:"A7.\u6392\u5e8f",title:"A7.\u6392\u5e8f","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"A6.\u54c8\u5e0c\u8868",permalink:"/Algorithm/A6.\u54c8\u5e0c\u8868"},next:{title:"A7.\u6811",permalink:"/Algorithm/A7.\u6811"}},o=[{value:"\u672f\u8bed",id:"\u672f\u8bed",children:[]},{value:"\u7a33\u5b9a\u6392\u5e8f",id:"\u7a33\u5b9a\u6392\u5e8f",children:[{value:"\u63d2\u5165\u6392\u5e8f",id:"\u63d2\u5165\u6392\u5e8f",children:[]},{value:"\u5192\u6ce1\u6392\u5e8f",id:"\u5192\u6ce1\u6392\u5e8f",children:[]},{value:"\u5f52\u5e76\u6392\u5e8f",id:"\u5f52\u5e76\u6392\u5e8f",children:[]},{value:"\u8ba1\u6570\u6392\u5e8f",id:"\u8ba1\u6570\u6392\u5e8f",children:[]},{value:"\u6876\u6392\u5e8f",id:"\u6876\u6392\u5e8f",children:[]},{value:"\u57fa\u6570\u6392\u5e8f",id:"\u57fa\u6570\u6392\u5e8f",children:[]}]},{value:"\u975e\u7a33\u5b9a\u6392\u5e8f",id:"\u975e\u7a33\u5b9a\u6392\u5e8f",children:[{value:"\u9009\u62e9\u6392\u5e8f",id:"\u9009\u62e9\u6392\u5e8f",children:[]},{value:"\u5e0c\u5c14\u6392\u5e8f",id:"\u5e0c\u5c14\u6392\u5e8f",children:[]},{value:"\u5806\u6392\u5e8f",id:"\u5806\u6392\u5e8f",children:[]},{value:"\u5feb\u901f\u6392\u5e8f",id:"\u5feb\u901f\u6392\u5e8f",children:[]}]},{value:"Code",id:"code",children:[]},{value:"\u6876\u6392\u5e8f",id:"\u6876\u6392\u5e8f-1",children:[{value:"\u4e60\u9898",id:"\u4e60\u9898",children:[]}]}],c={toc:o};function k(n){var a=n.components,p=(0,s.Z)(n,m);return(0,r.kt)("wrapper",(0,e.Z)({},c,p,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"849589-20180402133438219-1946132192",src:t(688).Z})),(0,r.kt)("h2",{id:"\u672f\u8bed"},"\u672f\u8bed"),(0,r.kt)("p",null,"1\u3001\u7a33\u5b9a\u6392\u5e8f\uff1a\u5982\u679c a \u539f\u672c\u5728 b \u7684\u524d\u9762\uff0c\u4e14 a  b\uff0c\u6392\u5e8f\u4e4b\u540e a \u4ecd\u7136\u5728 b \u7684\u524d\u9762\uff0c\u5219\u4e3a\u7a33\u5b9a\u6392\u5e8f\u3002"),(0,r.kt)("p",null,"2\u3001\u975e\u7a33\u5b9a\u6392\u5e8f\uff1a\u5982\u679c a \u539f\u672c\u5728 b \u7684\u524d\u9762\uff0c\u4e14 a  b\uff0c\u6392\u5e8f\u4e4b\u540e a \u53ef\u80fd\u4e0d\u5728 b \u7684\u524d\u9762\uff0c\u5219\u4e3a\u975e\u7a33\u5b9a\u6392\u5e8f\u3002"),(0,r.kt)("p",null,"3\u3001\u539f\u5730\u6392\u5e8f\uff1a\u539f\u5730\u6392\u5e8f\u5c31\u662f\u6307\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u4e0d\u7533\u8bf7\u591a\u4f59\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u53ea\u5229\u7528\u539f\u6765\u5b58\u50a8\u5f85\u6392\u6570\u636e\u7684\u5b58\u50a8\u7a7a\u95f4\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\u7684\u6570\u636e\u6392\u5e8f\u3002"),(0,r.kt)("p",null,"4\u3001\u975e\u539f\u5730\u6392\u5e8f\uff1a\u9700\u8981\u5229\u7528\u989d\u5916\u7684\u6570\u7ec4\u6765\u8f85\u52a9\u6392\u5e8f\u3002"),(0,r.kt)("h2",{id:"\u7a33\u5b9a\u6392\u5e8f"},"\u7a33\u5b9a\u6392\u5e8f"),(0,r.kt)("h3",{id:"\u63d2\u5165\u6392\u5e8f"},"\u63d2\u5165\u6392\u5e8f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4ece\u6570\u7ec4\u7b2c2\u4e2a\u5143\u7d20\u5f00\u59cb\u62bd\u53d6\u5143\u7d20\u3002"),(0,r.kt)("li",{parentName:"ol"},"2\u628a\u5b83\u4e0e\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u5143\u7d20\u6bd4\u8f83\uff0c\u5982\u679c\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u5143\u7d20\u6bd4\u5b83\u5927\uff0c\u5219\u7ee7\u7eed\u4e0e\u5de6\u8fb9\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6bd4\u8f83\u4e0b\u53bb\uff0c\u76f4\u5230\u9047\u5230\u4e0d\u6bd4\u5b83\u5927\u7684\u5143\u7d20\uff0c\u7136\u540e\u63d2\u5230\u8fd9\u4e2a\u5143\u7d20\u7684\u53f3\u8fb9\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u7ee7\u7eed\u9009\u53d6\u7b2c3\uff0c4\uff0c\u2026.n\u4e2a\u5143\u7d20,\u91cd\u590d\u6b65\u9aa4 2 \uff0c\u9009\u62e9\u9002\u5f53\u7684\u4f4d\u7f6e\u63d2\u5165")),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(92862).Z})),(0,r.kt)("h3",{id:"\u5192\u6ce1\u6392\u5e8f"},"\u5192\u6ce1\u6392\u5e8f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u628a\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6bd4\u8f83\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6bd4\u7b2c\u4e8c\u4e2a\u5927\uff0c\u5219\u4ea4\u6362\u4ed6\u4eec\u7684\u4f4d\u7f6e\u3002\u63a5\u7740\u7ee7\u7eed\u6bd4\u8f83\u7b2c\u4e8c\u4e2a\u4e0e\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u6bd4\u7b2c\u4e09\u4e2a\u5927\uff0c\u5219\u4ea4\u6362\u4ed6\u4eec\u7684\u4f4d\u7f6e\u2026."),(0,r.kt)("li",{parentName:"ol"},"\u5bf9\u6bcf\u4e00\u5bf9\u76f8\u90bb\u5143\u7d20\u4f5c\u540c\u6837\u7684\u5de5\u4f5c\uff0c\u4ece\u5f00\u59cb\u7b2c\u4e00\u5bf9\u5230\u7ed3\u5c3e\u7684\u6700\u540e\u4e00\u5bf9\uff0c\u8fd9\u6837\u4e00\u8d9f\u6bd4\u8f83\u4ea4\u6362\u4e0b\u6765\u4e4b\u540e\uff0c\u6392\u5728\u6700\u53f3\u7684\u5143\u7d20\u5c31\u4f1a\u662f\u6700\u5927\u7684\u6570\u3002")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYxMGExYTlhMTVkNDc?x-oss-process=image/format,png",alt:null})),(0,r.kt)("h3",{id:"\u5f52\u5e76\u6392\u5e8f"},"\u5f52\u5e76\u6392\u5e8f"),(0,r.kt)("p",null,"\u628a\u5927\u7684\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\uff0c\u7136\u540e\u5bf9\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8fdb\u884c\u6392\u5e8f\uff0c\u4e4b\u540e\u5728\u628a\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u3002"),(0,r.kt)("h3",{id:"\u8ba1\u6570\u6392\u5e8f"},"\u8ba1\u6570\u6392\u5e8f"),(0,r.kt)("p",null,"\u8ba1\u6570\u6392\u5e8f\u662f\u4e00\u79cd\u9002\u5408\u4e8e\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u4e0d\u662f\u4e0d\u662f\u5f88\u5927\u7684\u6392\u5e8f\u3002"),(0,r.kt)("p",null,"\u57fa\u672c\u601d\u60f3\uff1a\u5c31\u662f\u628a\u6570\u7ec4\u5143\u7d20\u4f5c\u4e3a\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u7edf\u8ba1\u8be5\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4f8b\u5982 temp","[i]"," = m, \u8868\u793a\u5143\u7d20 i \u4e00\u5171\u51fa\u73b0\u4e86 m \u6b21\u3002\u6700\u540e\u518d\u628a\u4e34\u65f6\u6570\u7ec4\u7edf\u8ba1\u7684\u6570\u636e\u4ece\u5c0f\u5230\u5927\u6c47\u603b\u8d77\u6765\uff0c\u6b64\u65f6\u6c47\u603b\u8d77\u6765\u662f\u6570\u636e\u662f\u6709\u5e8f\u7684\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYwZWVkM2E2NDE4ZjU?x-oss-process=image/format,png",alt:null})),(0,r.kt)("h3",{id:"\u6876\u6392\u5e8f"},"\u6876\u6392\u5e8f"),(0,r.kt)("p",null,"\u6876\u6392\u5e8f\u5c31\u662f\u628a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u6570\u8fdb\u884c\u74dc\u5206\u3002\u5206\u6210\u82e5\u5e72\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u5bf9\u5e94\u4e00\u4e2a\u6876\uff0c\u6211\u4eec\u628a\u5404\u5143\u7d20\u653e\u5230\u5bf9\u5e94\u533a\u95f4\u7684\u6876\u4e2d\u53bb\uff0c\u518d\u5bf9\u6bcf\u4e2a\u6876\u4e2d\u7684\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u91c7\u7528\u5f52\u5e76\u6392\u5e8f\u7b49\u7b49\u3002\u5728\u8fdb\u884c\u5408\u5e76\u6c47\u603b\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(75267).Z})),(0,r.kt)("h3",{id:"\u57fa\u6570\u6392\u5e8f"},"\u57fa\u6570\u6392\u5e8f"),(0,r.kt)("p",null,"\u4ee5\u4e2a\u4f4d\u6570\u7684\u5927\u5c0f\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u63a5\u7740\u4ee5\u5341\u4f4d\u6570\u7684\u5927\u5c0f\u6765\u591a\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u63a5\u7740\u4ee5\u767e\u4f4d\u6570\u7684\u5927\u5c0f\u2026\u2026"),(0,r.kt)("p",null,"\u6392\u5230\u6700\u540e\uff0c\u5c31\u662f\u4e00\u7ec4\u6709\u5e8f\u7684\u5143\u7d20\u4e86\u3002\u4e0d\u8fc7\uff0c\u4ed6\u5728\u4ee5\u67d0\u4f4d\u6570\u8fdb\u884c\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u662f\u7528\u201c\u6876\u201d\u6765\u6392\u5e8f\u7684\u3002"),(0,r.kt)("p",null,"\u7531\u4e8e\u67d0\u4f4d\u6570\uff08\u4e2a\u4f4d/\u5341\u4f4d\u2026.\uff0c\u4e0d\u662f\u4e00\u6574\u4e2a\u6570\uff09\u7684\u5927\u5c0f\u8303\u56f4\u4e3a0-9\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u898110\u4e2a\u6876\uff0c\u7136\u540e\u628a\u5177\u6709\u76f8\u540c\u6570\u503c\u7684\u6570\u653e\u8fdb\u540c\u4e00\u4e2a\u6876\u91cc\uff0c\u4e4b\u540e\u518d\u628a\u6876\u91cc\u7684\u6570\u6309\u71670\u53f7\u6876\u52309\u53f7\u6876\u7684\u987a\u5e8f\u53d6\u51fa\u6765\uff0c\u8fd9\u6837\u4e00\u8d9f\u4e0b\u6765\uff0c\u6309\u7167\u67d0\u4f4d\u6570\u7684\u6392\u5e8f\u5c31\u5b8c\u6210\u4e86"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(8856).Z})),(0,r.kt)("h2",{id:"\u975e\u7a33\u5b9a\u6392\u5e8f"},"\u975e\u7a33\u5b9a\u6392\u5e8f"),(0,r.kt)("h3",{id:"\u9009\u62e9\u6392\u5e8f"},"\u9009\u62e9\u6392\u5e8f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u627e\u5230\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u5143\u7d20"),(0,r.kt)("li",{parentName:"ol"},"\u5c06\u5b83\u548c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ol"},"\u5728\u5269\u4e0b\u7684\u5143\u7d20\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5c06\u5b83\u4e0e\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4ea4\u6362\u4f4d\u7f6e\u3002")),(0,r.kt)("h3",{id:"\u5e0c\u5c14\u6392\u5e8f"},"\u5e0c\u5c14\u6392\u5e8f"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u63d2\u5165\u6392\u5e8f"),"\u7684\u4e00\u79cd\u53d8\u79cd\u3002\u65e0\u8bba\u662f\u63d2\u5165\u6392\u5e8f\u8fd8\u662f\u5192\u6ce1\u6392\u5e8f\uff0c\u5982\u679c\u6570\u7ec4\u7684\u6700\u5927\u503c\u521a\u597d\u662f\u5728\u7b2c\u4e00\u4f4d\uff0c\u8981\u5c06\u5b83\u632a\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u5c31\u9700\u8981 n \u2013 1 \u6b21\u79fb\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u539f\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\u5982\u679c\u8ddd\u79bb\u5b83\u6b63\u786e\u7684\u4f4d\u7f6e\u5f88\u8fdc\u7684\u8bdd\uff0c\u5219\u9700\u8981\u4e0e\u76f8\u90bb\u5143\u7d20\u4ea4\u6362\u5f88\u591a\u6b21\u624d\u80fd\u5230\u8fbe\u6b63\u786e\u7684\u4f4d\u7f6e")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6570\u7ec4\u4e2d\u4efb\u610f\u95f4\u9694\u4e3a h \u7684\u5143\u7d20\u6709\u5e8f\uff0c\u521a\u5f00\u59cb h \u7684\u5927\u5c0f\u53ef\u4ee5\u662f h = n / 2,\u63a5\u7740\u8ba9 h = n / 4\uff0c\u8ba9 h \u4e00\u76f4\u7f29\u5c0f"),(0,r.kt)("li",{parentName:"ol"},"\u5f53 h = 1 \u65f6\uff0c\u4e5f\u5c31\u662f\u6b64\u65f6\u6570\u7ec4\u4e2d\u4efb\u610f\u95f4\u9694\u4e3a1\u7684\u5143\u7d20\u6709\u5e8f\uff0c\u6b64\u65f6\u7684\u6570\u7ec4\u5c31\u662f\u6709\u5e8f\u7684\u4e86\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u5404\u4e2a\u5206\u7ec4\u8fdb\u884c\u63d2\u5165\u7684\u65f6\u5019\u5e76\u4e0d\u662f\u5148\u5bf9\u4e00\u4e2a\u7ec4\u6392\u5e8f\u5b8c\u4e86\u518d\u6765\u5bf9\u53e6\u4e00\u4e2a\u7ec4\u6392\u5e8f\uff0c\u800c\u662f\u8f6e\u6d41\u5bf9\u6bcf\u4e2a\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYwYTY4YzYxYTlkODc?x-oss-process=image/format,png",alt:null})),(0,r.kt)("h3",{id:"\u5806\u6392\u5e8f"},"\u5806\u6392\u5e8f"),(0,r.kt)("p",null,"\u5806\u7684\u7279\u70b9\u5c31\u662f\u5806\u9876\u7684\u5143\u7d20\u662f\u4e00\u4e2a",(0,r.kt)("strong",{parentName:"p"},"\u6700\u503c"),"\uff0c\u5927\u9876\u5806\u7684\u5806\u9876\u662f\u6700\u5927\u503c\uff0c\u5c0f\u9876\u5806\u5219\u662f\u6700\u5c0f\u503c\u3002"),(0,r.kt)("p",null,"\u5806\u6392\u5e8f\u5c31\u662f\u628a\u5806\u9876\u7684\u5143\u7d20\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u4ea4\u6362\u4e4b\u540e\u7834\u574f\u4e86\u5806\u7684\u7279\u6027\uff0c\u628a\u5806\u4e2d\u5269\u4f59\u7684\u5143\u7d20\u518d\u6b21\u6784\u6210\u4e00\u4e2a\u5927\u9876\u5806\u3002"),(0,r.kt)("h3",{id:"\u5feb\u901f\u6392\u5e8f"},"\u5feb\u901f\u6392\u5e8f"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5feb\u901f\u6392\u5e8f"),"(Quick Sort)\u662f\u5bf9\u5192\u6ce1\u6392\u5e8f\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u57fa\u672c\u601d\u60f3\u662f\u9009\u53d6\u4e00\u4e2a\u8bb0\u5f55\u4f5c\u4e3a\u67a2\u8f74\uff0c\u7ecf\u8fc7\u4e00\u8d9f\u6392\u5e8f\uff0c\u5c06\u6574\u6bb5\u5e8f\u5217\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u7684\u503c\u90fd\u5c0f\u4e8e\u67a2\u8f74\uff0c\u53e6\u4e00\u90e8\u5206\u90fd\u5927\u4e8e\u67a2\u8f74\u3002\u7136\u540e\u7ee7\u7eed\u5bf9\u8fd9\u4e24\u90e8\u5206\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\uff0c\u4ece\u800c\u4f7f\u6574\u4e2a\u5e8f\u5217\u8fbe\u5230\u6709\u5e8f\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYwZTY5NzE1OGE0Yjk?x-oss-process=image/format,png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void QuickSort(int* array,int left,int right)\n{\n    assert(array);\n    if(left >= right)//\u8868\u793a\u5df2\u7ecf\u5b8c\u6210\u4e00\u4e2a\u7ec4\n    {\n        return;\n    }\n    int index = PartSort(array,left,right);//\u67a2\u8f74\u7684\u4f4d\u7f6e\n    QuickSort(array,left,index - 1);\n    QuickSort(array,index + 1,right);\n}\n")),(0,r.kt)("h4",{id:"\u5de6\u53f3\u6307\u9488\u6cd5"},"\u5de6\u53f3\u6307\u9488\u6cd5"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u8bbe\u7f6e\u4e24\u4e2a\u53d8\u91cfleft = 0;right = N - 1;"),(0,r.kt)("li",{parentName:"ol"},"\u4eceleft\u4e00\u76f4\u5411\u540e\u8d70\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5927\u4e8ekey\u7684\u503c\uff0cright\u4ece\u540e\u81f3\u524d\uff0c\u76f4\u81f3\u627e\u5230\u4e00\u4e2a\u5c0f\u4e8ekey\u7684\u503c\uff0c\u7136\u540e\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u91cd\u590d\u7b2c\u4e09\u6b65\uff0c\u4e00\u76f4\u5f80\u540e\u627e\uff0c\u76f4\u5230left\u548cright\u76f8\u9047\uff0c\u8fd9\u65f6\u5c06key\u653e\u7f6eleft\u7684\u4f4d\u7f6e\u5373\u53ef\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int PartSort(int* array,int left,int right)\n{\n    int& key = array[right];\n    while(left < right)\n    {\n        while(left < right && array[left] <= key)\n        {\n            ++left;\n        }\n        while(left < right && array[right] >= key)\n        {\n            --right;\n        }\n        swap(array[left],array[right]);\n    }\n    swap(array[left],key);\n    return left;\n}\n\n")),(0,r.kt)("h4",{id:"\u6316\u5751\u6cd5"},"\u6316\u5751\u6cd5"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u9009\u53d6\u4e00\u4e2a\u5173\u952e\u5b57(key)\u4f5c\u4e3a\u67a2\u8f74\uff0c\u4e00\u822c\u53d6\u6574\u7ec4\u8bb0\u5f55\u7684\u7b2c\u4e00\u4e2a\u6570/\u6700\u540e\u4e00\u4e2a\uff0c\u8fd9\u91cc\u91c7\u7528\u9009\u53d6\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u6570\u4e3a\u67a2\u8f74"),(0,r.kt)("li",{parentName:"ol"},"\u8bbe\u7f6e\u4e24\u4e2a\u53d8\u91cfleft = 0;right = N - 1;"),(0,r.kt)("li",{parentName:"ol"},"\u4eceleft\u4e00\u76f4\u5411\u540e\u8d70\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5927\u4e8ekey\u7684\u503c\uff0c\u7136\u540e\u5c06\u8be5\u6570\u653e\u5165\u5751\u4e2d\uff0c\u5751\u4f4d\u53d8\u6210\u4e86array","[left]","\u3002"),(0,r.kt)("li",{parentName:"ol"},"right\u4e00\u76f4\u5411\u524d\u8d70\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5c0f\u4e8ekey\u7684\u503c\uff0c\u7136\u540e\u5c06\u8be5\u6570\u653e\u5165\u5751\u4e2d\uff0c\u5751\u4f4d\u53d8\u6210\u4e86array","[right]","\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u91cd\u590d3\u548c4\u7684\u6b65\u9aa4\uff0c\u76f4\u5230left\u548cright\u76f8\u9047\uff0c\u7136\u540e\u5c06key\u653e\u5165\u6700\u540e\u4e00\u4e2a\u5751\u4f4d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"    while (x  < y) {\n        while (x < y && arr[y] > z) --y;\n        if (x < y) arr[x++] = arr[y];\n        while (x < y && arr[x] < z) ++x;\n        if (x < y) arr[y--] = arr[x];\n    }\n    arr[x] = z;\n")),(0,r.kt)("h4",{id:"\u524d\u540e\u6307\u9488\u6cd5"},"\u524d\u540e\u6307\u9488\u6cd5"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u53d8\u91cfcur\u6307\u5411\u5e8f\u5217\u7684\u5f00\u5934\uff0c\u5b9a\u4e49\u53d8\u91cfpre\u6307\u5411cur\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5f53array","[cur]"," < key\u65f6\uff0ccur\u548cpre\u540c\u65f6\u5f80\u540e\u8d70\uff0c\u5982\u679carray","[cur]",">key\uff0ccur\u5f80\u540e\u8d70\uff0cpre\u7559\u5728\u5927\u4e8ekey\u7684\u6570\u503c\u524d\u4e00\u4e2a\u4f4d\u7f6e\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5f53array","[cur]","\u518d\u6b21 < key\u65f6\uff0c\u4ea4\u6362array","[cur]","\u548carray","[pre]","\u3002")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\u901a\u4fd7\u4e00\u70b9\u5c31\u662f\uff0c\u5728\u6ca1\u627e\u5230\u5927\u4e8ekey\u503c\u524d\uff0cpre\u6c38\u8fdc\u7d27\u8ddfcur\uff0c\u9047\u5230\u5927\u7684\u4e24\u8005\u4e4b\u95f4\u673a\u4f1a\u62c9\u5f00\u5dee\u8ddd\uff0c\u4e2d\u95f4\u5dee\u7684\u80af\u5b9a\u662f\u8fde\u7eed\u7684\u5927\u4e8ekey\u7684\u503c\uff0c\u5f53\u518d\u6b21\u9047\u5230\u5c0f\u4e8ekey\u7684\u503c\u65f6\uff0c\u4ea4\u6362\u4e24\u4e2a\u4e0b\u6807\u5bf9\u5e94\u7684\u503c\u5c31\u597d\u4e86\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int PartSort(int* array,int left,int right)\n{\n    if(left < right){\n        int key = array[right];\n        int cur = left;\n        int pre = cur - 1;\n        while(cur < right)\n        {\n            while(array[cur] < key && ++pre != cur)//\u5982\u679c\u627e\u5230\u5c0f\u4e8ekey\u7684\u503c\uff0c\u5e76\u4e14cur\u548cpre\u4e4b\u95f4\u6709\u8ddd\u79bb\u65f6\u5219\u8fdb\u884c\u4ea4\u6362\u3002\u6ce8\u610f\u4e24\u4e2a\u6761\u4ef6\u7684\u5148\u540e\u4f4d\u7f6e\u4e0d\u80fd\u66f4\u6362\n            {\n                swap(array[cur],array[pre]);\n            }\n            ++cur;\n        }\n        swap(array[++pre],array[right]);\n        return pre;\n    }\n    return -1;\n}\n")),(0,r.kt)("h4",{id:"\u5feb\u901f\u6392\u5e8f\u7684\u4f18\u5316"},"\u5feb\u901f\u6392\u5e8f\u7684\u4f18\u5316"),(0,r.kt)("p",null,"1\u3001\u4e09\u6570\u53d6\u4e2d\u6cd5\n\u4e0a\u9762\u7684\u4ee3\u7801\u601d\u60f3\u90fd\u662f\u76f4\u63a5\u62ff\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u503c\u4f5c\u4e3a\u67a2\u8f74\uff0c\u5982\u679c\u6700\u540e\u8fd9\u4e2a\u503c\u521a\u597d\u662f\u6574\u6bb5\u5e8f\u5217\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u6b21\u5212\u5206\u5c31\u662f\u6ca1\u610f\u4e49\u7684\u3002\n\u6240\u4ee5\u5f53\u5e8f\u5217\u662f\u6b63\u5e8f\u6216\u8005\u9006\u5e8f\u65f6\uff0c\u6bcf\u6b21\u9009\u5230\u7684\u67a2\u8f74\u90fd\u662f\u6ca1\u6709\u8d77\u5230\u5212\u5206\u7684\u4f5c\u7528\u3002\u5feb\u6392\u7684\u6548\u7387\u4f1a\u6781\u901f\u9000\u5316\u3002"),(0,r.kt)("p",null,"\u6240\u4ee5\u53ef\u4ee5\u6bcf\u6b21\u5728\u9009\u67a2\u8f74\u65f6\uff0c\u5728\u5e8f\u5217\u7684\u7b2c\u4e00\uff0c\u4e2d\u95f4\uff0c\u6700\u540e\u4e09\u4e2a\u503c\u91cc\u9762\u9009\u4e00\u4e2a\u4e2d\u95f4\u503c\u51fa\u6765\u4f5c\u4e3a\u67a2\u8f74\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u5212\u5206\u63a5\u8fd1\u5747\u7b49\u3002"),(0,r.kt)("p",null,"2\u3001\u76f4\u63a5\u63d2\u5165\n\u7531\u4e8e\u662f\u9012\u5f52\u7a0b\u5e8f\uff0c\u6bcf\u4e00\u6b21\u9012\u5f52\u90fd\u8981\u5f00\u8f9f\u6808\u5e27\uff0c\u5f53\u9012\u5f52\u5230\u5e8f\u5217\u91cc\u7684\u503c\u4e0d\u662f\u5f88\u591a\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u6765\u5b8c\u6210\uff0c\u4ece\u800c\u907f\u514d\u8fd9\u4e9b\u6808\u5e27\u7684\u6d88\u8017"),(0,r.kt)("h4",{id:"\u975e\u9012\u5f52\u5b9e\u73b0"},"\u975e\u9012\u5f52\u5b9e\u73b0"),(0,r.kt)("p",null,"\u9012\u5f52\u7684\u7b97\u6cd5\u4e3b\u8981\u662f\u5728\u5212\u5206\u5b50\u533a\u95f4\uff0c\u4f7f\u7528\u4e00\u4e2a\u6808\u6765\u4fdd\u5b58\u533a\u95f4\u3002\n\u4e00\u822c\u5c06\u9012\u5f52\u7a0b\u5e8f\u6539\u6210\u975e\u9012\u5f52\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u4f7f\u7528\u6808\uff0c\u56e0\u4e3a\u9012\u5f52\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u538b\u6808\u7684\u8fc7\u7a0b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void QuickSortNotR(int* array,int left,int right)\n{\n    assert(array);\n    stack<int> s;\n    s.push(left);\n    s.push(right);//\u540e\u5165\u7684right\uff0c\u6240\u4ee5\u8981\u5148\u62ffright\n    while(!s.empty)//\u6808\u4e0d\u4e3a\u7a7a\n    {\n        int right = s.top();\n        s.pop();\n        int left = s.top();\n        s.pop();\n        \n        int index = PartSort(array,left,right);\n        if((index - 1) > left)//\u5de6\u5b50\u5e8f\u5217\n        {\n            s.push(left);\n            s.push(index - 1);\n        }\n        if((index + 1) < right)//\u53f3\u5b50\u5e8f\u5217\n        {\n            s.push(index + 1);\n            s.push(right);\n        }\n    }\n}\n")),(0,r.kt)("h2",{id:"code"},"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#define swap(a, b) {\\\n    __typeof(a) __temp = a;\\\n    a = b; b = __temp; \\\n}\n\n#define TEST(arr, n, func, args...) {\\\n    int *num = (int *)malloc(sizeof(int) * n);\\\n    memcpy(num, arr, sizeof(int) * n);\\\n    output(num, n);\\\n    printf("%s\\t= ", #func);\\\n    func(num, args);\\\n    output(num, n);\\\n    free(num);\\\n}\n\n\nint insert_sort(int *arr, int n) {\n    for (int i = 1; i < n; ++i) {\n        for (int j = i; j > 0 && arr[j] < arr[j - 1]; --j) {\n            swap(arr[j], arr[j - 1]);\n        }\n    }\n    return 1;\n}\n\nint bubble_sort(int *arr, int n) {\n    int times = 1;\n    for (int i = 1; times && i < n; ++i) {\n        times = 0;\n        for (int j = 0; j < n - i; ++j) {\n            if (arr[j] <= arr[j + 1]) continue;\n            swap(arr[j], arr[j + 1]);\n            times++;\n        }\n    }\n    return 1;\n}\n\nint merge_sort(int *arr, int l , int r) {\n    if (r - l <= 1) {\n        if (r - l == 1 && arr[r] < arr[l]) {\n            swap(arr[r], arr[l]);\n        }\n        return 1;\n    }\n    int mid =  (l + r) >> 1;\n    merge_sort(arr, l, mid);\n    merge_sort(arr, mid + 1, r);\n    int p1 = l, p2 = mid + 1, ind = 0;\n    int *tmp =  (int *)malloc(sizeof(int) * (r - l + 1));\n    while (p1 <= mid || p2 <= r) {\n        if (p2 > r || p1 <= mid && arr[p1] < arr[p2]) tmp[ind++] = arr[p1++];\n        else tmp[ind++] = arr[p2++];\n    }\n    memcpy(arr + l, tmp, sizeof(int) * (r - l + 1));\n    free(tmp);\n    return 1;\n}\n\nint select_sort(int *arr, int n) {\n    for (int i = 0; i < n - 1; ++i) {\n        int ind = i;\n        for (int j = i + 1; j < n; ++j) {\n            if (arr[ind] <= arr[j]) continue;\n            ind = j;\n        }\n        swap(arr[ind], arr[i]);\n    }\n    return 1;\n}\n\nint quick_sort(int *arr, int l, int r) {\n    if (l >= r) return 0;\n    int x = l, y = r, z = arr[l];\n    while (x  < y) {\n        while (x < y && arr[y] > z) --y;\n        if (x < y) arr[x++] = arr[y];\n        while (x < y && arr[x] < z) ++x;\n        if (x < y) arr[y--] = arr[x];\n    }\n    arr[x] = z;\n    quick_sort(arr, l, x - 1);\n    quick_sort(arr, x + 1, r);\n    return 1;\n}\n\nvoid output(int *arr, int n) {\n    for (int i = 0; i < n; ++i) {\n        printf(" %d", arr[i]);\n    }\n    printf("\\n");\n}\n\nint *init(int n) {\n    int *arr = (int *)malloc(sizeof(int) * n);\n    while (n--) arr[n] = rand() % 100;\n    return arr;\n}\n\nvoid downUpdate(int *arr, int ind, int n) {\n    while ((ind << 1) <= n) {\n        int temp = ind, l = ind << 1, r = ind << 1 | 1;\n        if (arr[l] > arr[temp]) temp = l;\n        if (r <= n && arr[r] > arr[temp]) temp = r;\n        if (temp == ind ) break;\n        swap(arr[temp], arr[ind]);\n        ind = temp;\n    }\n    return ;\n}\n\nint heap_sort(int *arr, int n) {\n    arr -= 1;\n    for (int i = n >> 1; i > 0; --i) {\n        downUpdate(arr, i, n);\n    }\n    for (int i = n; i > 1; --i) {\n        swap(arr[i], arr[1]);\n        downUpdate(arr, 1, i - 1);\n    }\n    return 1;\n}\n\n\nint main() {\n    srand(time(0));\n    #define max_op 20\n    int *arr = init(max_op);\n    TEST(arr, max_op, insert_sort, max_op);\n    TEST(arr, max_op, bubble_sort, max_op);\n    TEST(arr, max_op, merge_sort, 0, max_op - 1);\n    TEST(arr, max_op, select_sort, max_op);\n    TEST(arr, max_op, quick_sort, 0, max_op - 1);\n    TEST(arr, max_op, heap_sort, max_op);\n    #undef max_op\n    return 0;\n}\n\n')),(0,r.kt)("h2",{id:"\u6876\u6392\u5e8f-1"},"\u6876\u6392\u5e8f"),(0,r.kt)("h4",{id:"\u5b58\u5728\u91cd\u590d\u7684\u5143\u7d20iii"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate-iii/"},"\u5b58\u5728\u91cd\u590d\u7684\u5143\u7d20III")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-CPP"},"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(std::vector<int>& nums, int k, int t) {\n        if(t <0) return false;\n\n        std::unordered_map<int64_t, int64_t> bucket; // id - \u5143\u7d20\n\n        int64_t width = static_cast<int64_t>(t) +1;\n        for(int i=0; i < nums.size(); ++i) {\n            int64_t num = nums[i];\n            int64_t id = getId(num, width);\n\n            if(bucket.count(id)                                          ||\n               bucket.count(id-1) && std::abs(num - bucket[id-1]) <width || \n               bucket.count(id+1) && std::abs(num - bucket[id+1]) <width )\n               return true;\n\n            // \u6876\u7684\u7f16\u53f7 - \u6570\n            bucket.emplace(id, num);\n            \n            // \u8ba9bucket\u4e2d\u53ea\u6709k\u4e2a\u6876\uff0ci==k\u65f6\u8bf4\u660e\uff0c\u5df2\u7ecf\u6709k+1\u4e2a\u6876\n            if(i >=k) \n            {\n                bucket.erase(getId(nums[i-k], width));\n            }\n        }\n\n        return false;\n    }\nprivate:\n    inline int64_t getId(int64_t x, int64_t width) { \n        return x < 0 ? (x+1)/width-1 : x / width;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u4e60\u9898"},"\u4e60\u9898"),(0,r.kt)("h4",{id:"\u5feb\u901f\u9009\u62e9"},"\u5feb\u901f\u9009\u62e9"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\u4e2d\uff0c\u627e\u5230\u7b2c k \u5927\u7684\u6570\u5b57\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n * @lc app=leetcode.cn id=215 lang=cpp\n *\n * [215] \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20\n */\n\n// @lc code=start\nclass Solution {\npublic:\n    int findKthLargest(vector<int>& nums, int k) {\n        return getKth(nums, 0, nums.size() - 1, nums.size() - k);\n    }\n    int getKth(vector<int> &arr, int l, int r, int idx) {\n        int x = partition(arr, l, r);\n        if (x == idx) return arr[x];\n        return x < idx ? getKth(arr, x + 1, r, idx) : getKth(arr, l, x - 1, idx);\n    }\n\n    int partition(vector<int> &arr, int l, int r) {\n        int ind = rand() % (r - l + 1) + l;\n        swap(arr[ind], arr[l]);\n        int val = arr[l];\n        int x = l, y = r;\n        while (x < y) {\n            while (x < y && arr[y] >= val) y--;\n            if (x < y) arr[x++] = arr[y];\n            while (x < y && arr[x] <= val) x++;\n            if (x < y) arr[y--] = arr[x];\n        }\n        arr[x] = val;\n        return x;\n    }\n};\n// @lc code=end\n\n")),(0,r.kt)("p",null,"k-th Element \u95ee\u9898"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int findKthLargest(vector<int>& nums, int k) {\n  int l = 0, r = nums.size() - 1, target = nums.size() - k;\n  while (l < r) {\n    int mid = quickSelection(nums, l, r);\n    if (mid == target) {\n        return nums[mid];\n    }\n    if (mid < target) {\n      l = mid + 1;\n    } else {\n      r = mid - 1;\n    }\n  }\n  return nums[l];\n}\n// \u8f85\u51fd\u6570 - \u5feb\u901f\u9009\u62e9\nint quickSelection(vector<int>& nums, int l, int r) {\n  int i = l + 1, j = r;\n  while (true) {\n    while (i < r && nums[i] <= nums[l]) {\n      ++i;\n    }\n    while (l < j && nums[j] >= nums[l]) {\n      --j;\n    }\n    if (i >= j) {\n      break;\n    }\n    swap(nums[i], nums[j]);\n  }\n  swap(nums[l], nums[j]);\n  return j;\n}\n5\n")),(0,r.kt)("h4",{id:"\u6876\u6392\u5e8f-2"},"\u6876\u6392\u5e8f"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u6c42\u524d k \u4e2a\u6700\u9891\u7e41\u7684\u6570\u5b57\u3002")),(0,r.kt)("p",null,"\u6876\u6392\u5e8f\u7684\u610f\u601d\u662f\u4e3a\u6bcf\u4e2a\u503c\u8bbe\u7acb\u4e00\u4e2a\u6876\uff0c\u6876\u5185\u8bb0\u5f55\u8fd9\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff08\u6216\u5176\u5b83\u5c5e\u6027\uff09\uff0c\u7136\u540e\u5bf9\u6876\u8fdb\u884c\u6392\u5e8f\u3002\u9488\u5bf9\u6837\u4f8b\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u6876\u6392\u5e8f\u5f97\u5230\u4e09\u4e2a\u6876 ","[1,2,3,4]","\uff0c\u5b83\u4eec\u7684\u503c\u5206\u522b\u4e3a ","[4,2,1,1]","\uff0c\u8868\u793a\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u3002"),(0,r.kt)("p",null,"\u7d27\u63a5\u7740\uff0c\u6211\u4eec\u5bf9\u6876\u7684\u9891\u6b21\u8fdb\u884c\u6392\u5e8f\uff0c\u524d k \u5927\u4e2a\u6876\u5373\u662f\u524d k \u4e2a\u9891\u7e41\u7684\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\uff0c\u751a\u81f3\u53ef\u4ee5\u518d\u8fdb\u884c\u4e00\u6b21\u6876\u6392\u5e8f\uff0c\u628a\u6bcf\u4e2a\u65e7\u6876\u6839\u636e\u9891\u6b21\u653e\u5728\u4e0d\u540c\u7684\u65b0\u6876\u5185\u3002\u9488\u5bf9\u6837\u4f8b\u6765\u8bf4\uff0c\u56e0\u4e3a\u76ee\u524d\u6700\u5927\u7684\u9891\u6b21\u662f 4\uff0c\u6211\u4eec\u5efa\u7acb ","[1,2,3,4]"," \u56db\u4e2a\u65b0\u6876\uff0c\u5b83\u4eec\u5206\u522b\u653e\u5165\u7684\u65e7\u6876\u4e3a [","[3,4]",",","[2]",",[],","[1]","]\uff0c\u8868\u793a\u4e0d\u540c\u6570\u5b57\u51fa\u73b0\u7684\u9891\u7387\u3002\u6700\u540e\uff0c\u6211\u4eec\u4ece\u540e\u5f80\u524d\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 k \u4e2a\u65e7\u6876\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n * @lc app=leetcode.cn id=347 lang=cpp\n *\n * [347] \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20\n */\n\n// @lc code=start\nclass Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        unordered_map<int, int> counts;\n        int max_count = 0;\n        for (const int &num : nums) {\n            max_count = max(max_count, ++counts[num]);\n        }\n        vector<vector<int>> buckets(max_count + 1);\n        for (const auto &p : counts) {\n            buckets[p.second].push_back(p.first);\n        }\n        vector<int> ans;\n        for (int i = max_count; i >= 0 && ans.size() < k; --i) {\n            for (const int &num : buckets[i]) {\n                ans.push_back(num);\n                if (ans.size() == k) {\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n};\n// @lc code=end\n\n")),(0,r.kt)("h2",{id:""}),(0,r.kt)("h4",{id:"lc-2\u5bfb\u627e\u6307\u5b9a\u548c"},"lc-2\u5bfb\u627e\u6307\u5b9a\u548c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    typedef pair<int, int> PII;\n    vector<int> twoSum(vector<int>& nums, int target) {\n        vector<int> ret;\n        vector<PII> nums2;\n        for (int i = 0; i < nums.size(); i++) {\n            nums2.push_back(PII(nums[i], i));\n        }\n        sort(nums2.begin(), nums2.end());\n        int i = 0, j = nums2.size() - 1;\n        while (nums2[i].first + nums2[j].first - target) {\n            if (nums2[i].first + nums2[j].first > target) --j;\n            if (nums2[i].first + nums2[j].first < target) ++i;\n        }\n        if (nums2[i].second > nums2[j].second) swap(i, j);\n        ret.push_back(nums2[i].second);\n        ret.push_back(nums2[j].second);\n        return ret;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-11\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668"},"lc-11",(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/container-with-most-water/description/"},"\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668")),(0,r.kt)("h4",{id:"3-\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/"},"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        int *map = (int *)malloc(sizeof(int) * 256);\n        for (int i = 0 ; i < 256; ++i) {\n            map[i] =  -1;\n        }\n        int ans = 0, cur = 0, pre  = -1;\n        for (int i = 0; i < s.size(); ++i) {\n            pre = max(pre, map[s[i]]);\n            cur = i - pre;\n            ans = max(ans, cur);\n            map[s[i]] = i;\n        }\n        return ans;\n    }\n};\n\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic: \n    int check(string &s, int l) {\n        unordered_map<char, int> m;\n        int cnt = 0;\n        for (int i = 0; s[i]; i++) {\n            m[s[i]] += 1;\n            if (m[s[i]] == 1) cnt += 1;\n            if (i >= l) {\n                m[s[i - l]] -= 1;\n                if (m[s[i - l]] == 0) cnt -= 1;\n            }\n            if (cnt == l) return 1;\n        }\n        return 0;\n    }\n    \n    int lengthOfLongestSubstring(string s) {\n        int head = 0, tail = s.length(), mid;\n        while (head < tail) {\n            mid = (head + tail + 1) >> 1;\n            if (check(s, mid)) head = mid;\n            else tail = mid - 1;\n        }\n        return head;\n    }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        unordered_map<char, int> m;\n        int pre_l = 0, ans = 0;\n        for (int i = 0; s[i]; i++) {\n            if (m.find(s[i]) == m.end()) pre_l += 1;\n            else pre_l = min(pre_l + 1, i - m[s[i]]);\n            ans = max(ans, pre_l);\n            m[s[i]] = i;\n        }\n        return ans;\n    }\n};\n")),(0,r.kt)("h4",{id:"4-\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/median-of-two-sorted-arrays/"},"4. \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570")),(0,r.kt)("p",null,"\u65b9\u6cd5\u4e00\uff1a\u4e8c\u5206\u67e5\u627e\n\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u8981\u6c42\u627e\u5230\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u6700\u76f4\u89c2\u7684\u601d\u8def\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a"),(0,r.kt)("p",null,"\u4f7f\u7528\u5f52\u5e76\u7684\u65b9\u5f0f\uff0c\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u5f97\u5230\u4e00\u4e2a\u5927\u7684\u6709\u5e8f\u6570\u7ec4\u3002\u5927\u7684\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u95f4\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5373\u4e3a\u4e2d\u4f4d\u6570\u3002"),(0,r.kt)("p",null,"\u4e0d\u9700\u8981\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u53ea\u8981\u627e\u5230\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\u7531\u4e8e\u4e24\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u5df2\u77e5\uff0c\u56e0\u6b64\u4e2d\u4f4d\u6570\u5bf9\u5e94\u7684\u4e24\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u4e4b\u548c\u4e5f\u662f\u5df2\u77e5\u7684\u3002\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u521d\u59cb\u65f6\u5206\u522b\u6307\u5411\u4e24\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807 00 \u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u5c06\u6307\u5411\u8f83\u5c0f\u503c\u7684\u6307\u9488\u540e\u79fb\u4e00\u4f4d\uff08\u5982\u679c\u4e00\u4e2a\u6307\u9488\u5df2\u7ecf\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\uff0c\u5219\u53ea\u9700\u8981\u79fb\u52a8\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u6307\u9488\uff09\uff0c\u76f4\u5230\u5230\u8fbe\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e\u3002",(0,r.kt)("img",{alt:"fig1",src:t(15051).Z})),(0,r.kt)("p",null,"\u5982\u679c",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,r.kt)("mo",{parentName:"mrow"},"<"),(0,r.kt)("mi",{parentName:"mrow"},"B"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]<B[k/2\u22121]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"<"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]"))))),"\uff0c\u5219\u6bd4",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u5c0f\u7684\u6570\u6700\u591a\u53ea\u6709 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A")))))," \u7684\u524d$ k/2-1",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Can't use function '$' in math mode at position 8: \u4e2a\u6570\u548cB\u7684\u524d $\u0332k/2-1",style:{color:"#cc0000"}},(0,r.kt)("span",{parentName:"span",className:"cjk_fallback"},"\u4e2a\u6570\u548cB\u7684\u524d $k/2-1"))),"\u4e2a\u6570\uff0c\u5373\u6bd4 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]"))))),"\u5c0f\u7684\u6570\u6700\u591a\u53ea\u6709",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"2")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k\u22122")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.77777em",verticalAlign:"-0.08333em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2")))))," \u4e2a\uff0c\u56e0\u6b64 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u4e0d\u53ef\u80fd\u662f\u7b2c ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"k")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"))))),"\u4e2a\u6570\uff0c",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mn",{parentName:"mrow"},"0"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[0]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u5230 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Can't use function '$' in math mode at position 10: A[k/2\u22121] $\u0332\u4e5f\u90fd\u4e0d\u53ef\u80fd\u662f\u7b2c",style:{color:"#cc0000"}},"A[k/2\u22121] $\u4e5f\u90fd\u4e0d\u53ef\u80fd\u662f\u7b2c")),"k$\u4e2a\u6570\uff0c\u53ef\u4ee5\u5168\u90e8\u6392\u9664"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u9700\u8981\u7279\u6b8a\u5904\u7406\uff1a"),(0,r.kt)("p",null,"\u5982\u679c ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{A}[k/2-1]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A")),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u6216\u8005 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"B"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,r.kt)("mi",{parentName:"mrow"},"k"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"B[k/2\u22121]")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"["),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"mord"},"/"),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u8d8a\u754c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u53d6\u5bf9\u5e94\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002",(0,r.kt)("strong",{parentName:"p"},"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u6839\u636e\u6392\u9664\u6570\u7684\u4e2a\u6570\u51cf\u5c11 k \u7684\u503c\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u5c06 k \u51cf\u53bb k/2"),"\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e3a\u7a7a\uff0c\u8bf4\u660e\u8be5\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u6392\u9664\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7b2c k \u5c0f\u7684\u5143\u7d20\u3002"),(0,r.kt)("p",null,"\u5982\u679c k=1\uff0c\u6211\u4eec\u53ea\u8981\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u9996\u5143\u7d20\u7684\u6700\u5c0f\u503c\u5373\u53ef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    double kth(vector<int> &n1, vector<int> &n2, int k) {\n        int len1 = n1.size(), len2 = n2.size();\n        int t1 = 0, t2 = 0, res = 0;\n        while (true) {\n            if (t1 == len1) {\n                res = n2[t2 + k - 1];\n                break;\n            }\n            if (t2 == len2) {\n                res = n1[t1 + k - 1];\n                break;\n            }\n            if (k == 1) {\n                res = min(n1[t1], n2[t2]);\n                break;\n            }\n            int idx1 = min(t1 + k / 2 - 1, len1 - 1);\n            int idx2 = min(t2 + k / 2 - 1, len2 - 1);\n            if (n1[idx1] <= n2[idx2]) {\n                k -= idx1 - t1 + 1;\n                t1 = idx1 + 1;\n            } else {\n                k -= idx2 - t2 + 1;\n                t2 = idx2 + 1;\n            }\n        }\n        return res;\n    }\n\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        int len1 = nums1.size(), len2 = nums2.size();\n        int k = (len1 + len2) >> 1;\n        double m1 = kth(nums1, nums2, k + 1);\n        if ((len1 + len2) & 1 == 1) {\n            return m1;\n        }\n        double m2 = kth(nums1, nums2, k);\n        return (m1 + m2) / 2.0;\n    }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    double bs(vector<int> &n1, vector<int> &n2, int i, int j, int k) {\n        if (i == n1.size()) return n2[k - 1];\n        if (j == n2.size()) return n1[k - 1];\n        if (k == 1) return min(n1[i], n2[j]);\n        int a, b;\n        a = k / 2 > n1.size() - i ? n1.size() - i : k / 2;\n        b = k - a > n2.size() - j ? n2.size() - j : k - a;\n        a = k - b;\n        if (n1[i + a - 1] < n2[j + b - 1]) {\n            return bs(n1, n2, i + a, j, k - a);\n        }\n        return bs(n1, n2, i, j + b, k - b);\n    }\n\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        int n = nums1.size(), m = nums2.size();\n        double val1 = bs(nums1, nums2, 0, 0, (n + m + 1) / 2);\n        if ((n + m) % 2 == 0) {\n            double val2 = bs(nums1, nums2, 0, 0, (n + m) / 2 + 1);\n            return (val1 + val2) / 2;\n        }\n        return val1;\n    }\n};\n")),(0,r.kt)("p",null,"\u65b9\u6cd5\u4e8c\uff1a\u5212\u5206\u6570\u7ec4\n\u8bf4\u660e"),(0,r.kt)("p",null,"\u65b9\u6cd5\u4e00\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u5f88\u4f18\u79c0\u4e86\uff0c\u4f46\u672c\u9898\u5b58\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u8fd9\u91cc\u7ed9\u51fa\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u52c7\u4e8e\u6311\u6218\u81ea\u5df1\u7684\u8bfb\u8005\u53ef\u4ee5\u8fdb\u884c\u5c1d\u8bd5\u3002"),(0,r.kt)("p",null,"\u601d\u8def\u4e0e\u7b97\u6cd5"),(0,r.kt)("p",null,"\u4e3a\u4e86\u4f7f\u7528\u5212\u5206\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u7406\u89e3\u300c\u4e2d\u4f4d\u6570\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\u300d\u3002\u5728\u7edf\u8ba1\u4e2d\uff0c\u4e2d\u4f4d\u6570\u88ab\u7528\u6765\uff1a"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5c06\u4e00\u4e2a\u96c6\u5408\u5212\u5206\u4e3a\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u5b50\u96c6\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u5143\u7d20\u603b\u662f\u5927\u4e8e\u53e6\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u5143\u7d20")),(0,r.kt)("h4",{id:"38-\u5916\u89c2\u6570\u5217"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/count-and-say/"},"38. \u5916\u89c2\u6570\u5217")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    string countAndSay(int n) {\n        if (n == 1) return "1";\n        string ret = "", str = countAndSay(n - 1);\n        char tmp[10];\n        int cnt = 1;\n        for (int i = 1, j = 0; str[i]; i++) {\n            if (str[i] == str[j]) cnt += 1;\n            else {\n                sprintf(tmp, "%d%c", cnt, str[j]);\n                ret += tmp;\n                cnt = 1, j = i;\n            }\n        }\n        sprintf(tmp, "%d%c", cnt, str[str.size() - 1]);\n        ret += tmp;\n        return ret;\n    }\n};\n')),(0,r.kt)("h4",{id:"217\u5b58\u5728\u91cd\u590d\u5143\u7d20"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate/description/"},"217\u5b58\u5728\u91cd\u590d\u5143\u7d20")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n        return nums.size() > set<int>(nums.begin(), nums.end()).size();        \n    }\n};\n\n")),(0,r.kt)("h4",{id:"219-\u5b58\u5728\u91cd\u590d\u5143\u7d20-ii"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate-ii/"},"219. \u5b58\u5728\u91cd\u590d\u5143\u7d20 II")),(0,r.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570 ",(0,r.kt)("em",{parentName:"p"},"k"),"\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 ",(0,r.kt)("em",{parentName:"p"},"i")," \u548c ",(0,r.kt)("em",{parentName:"p"},"j"),"\uff0c\u4f7f\u5f97 ",(0,r.kt)("strong",{parentName:"p"},"nums ","[i]"," = nums ","[j]"),"\uff0c\u5e76\u4e14 ",(0,r.kt)("em",{parentName:"p"},"i")," \u548c ",(0,r.kt)("em",{parentName:"p"},"j")," \u7684\u5dee\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u7edd\u5bf9\u503c")," \u81f3\u591a\u4e3a ",(0,r.kt)("em",{parentName:"p"},"k"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\n        k += 1;\n        unordered_map<int, int> s;\n        for (int i = 0; i < nums.size(); i++) {\n            s[nums[i]] += 1;\n            if (i >= k) s[nums[i - k]] -= 1;\n            if (s[nums[i]] == 2) return true;\n        }\n        return false;\n    }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\n        int n = nums.size();\n        int l = 0,  r = -1;\n        while (l < n) {\n            if (r + 1 < n && r + 1 <= l + k) {\n                ++r;\n            } else {\n                ++l;\n            }\n            if (r <= l) continue;\n            if (nums[r] == nums[l]) return true;\n        }\n        return false;\n    }\n};\n")),(0,r.kt)("h4",{id:"349-\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/intersection-of-two-arrays/"},"349. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> intersection(vector<int> &nums1, vector<int> &nums2) {\n        set<int> record;\n        for (int i = 0; i < nums1.size(); i++) {\n            record.insert(nums1[i]);\n        }\n\n        set<int> resultSet;\n        for (int i = 0; i < nums2.size(); ++i) {\n            if (record.find(nums2[i]) != record.end()) {\n                resultSet.insert(nums2[i]);\n            }\n        }\n\n        vector<int> res;\n        for (set<int>::iterator iter = resultSet.begin(); iter != resultSet.end(); iter++) {\n            res.push_back(*iter);\n        }\n        return res;\n    }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e00\u81f4\u3002\nclass Solution {\npublic:\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        if (nums1.size() > nums2.size()) return intersect(nums2,nums1);\n        unordered_map<int,int> mp;\n        for (int i:nums1)\n        {\n            mp[i]++;\n        }\n        vector<int> nums;\n        for (int j:nums2)\n        {\n            if (mp[j] > 0)\n            {\n                nums.push_back(j);\n                mp[j]--;\n            }\n        }\n        return nums;\n\n\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-375\u731c\u6570\u5b57\u5927\u5c0f-ii"},"LC-375",(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/description/"},"\u731c\u6570\u5b57\u5927\u5c0f II")),(0,r.kt)("p",null,"\u6211\u4eec\u6b63\u5728\u73a9\u4e00\u4e2a\u731c\u6570\u6e38\u620f\uff0c\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a"),(0,r.kt)("p",null,"\u6211\u4ece ",(0,r.kt)("strong",{parentName:"p"},"1")," \u5230 ",(0,r.kt)("strong",{parentName:"p"},"n")," \u4e4b\u95f4\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u4f60\u6765\u731c\u6211\u9009\u4e86\u54ea\u4e2a\u6570\u5b57\u3002"),(0,r.kt)("p",null,"\u6bcf\u6b21\u4f60\u731c\u9519\u4e86\uff0c\u6211\u90fd\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u9009\u7684\u6570\u5b57\u6bd4\u4f60\u7684\u5927\u4e86\u6216\u8005\u5c0f\u4e86\u3002"),(0,r.kt)("p",null,"\u7136\u800c\uff0c\u5f53\u4f60\u731c\u4e86\u6570\u5b57 x \u5e76\u4e14\u731c\u9519\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u652f\u4ed8\u91d1\u989d\u4e3a x \u7684\u73b0\u91d1\u3002\u76f4\u5230\u4f60\u731c\u5230\u6211\u9009\u7684\u6570\u5b57\uff0c\u4f60\u624d\u7b97\u8d62\u5f97\u4e86\u8fd9\u4e2a\u6e38\u620f\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"n = 10, \u6211\u9009\u62e9\u4e868.\n\n\u7b2c\u4e00\u8f6e: \u4f60\u731c\u6211\u9009\u62e9\u7684\u6570\u5b57\u662f5\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u7136\u540e\u4f60\u9700\u8981\u652f\u4ed85\u5757\u3002\n\u7b2c\u4e8c\u8f6e: \u4f60\u731c\u662f7\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed87\u5757\u3002\n\u7b2c\u4e09\u8f6e: \u4f60\u731c\u662f9\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5c0f\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed89\u5757\u3002\n\n\u6e38\u620f\u7ed3\u675f\u30028 \u5c31\u662f\u6211\u9009\u7684\u6570\u5b57\u3002\n\n\u4f60\u6700\u7ec8\u8981\u652f\u4ed8 5 + 7 + 9 = 21 \u5757\u94b1\u3002\n")),(0,r.kt)("p",null,"\u7ed9\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"n \u2265 1\uff0c"),"\u8ba1\u7b97\u4f60\u81f3\u5c11\u9700\u8981\u62e5\u6709\u591a\u5c11\u73b0\u91d1\u624d\u80fd\u786e\u4fdd\u4f60\u80fd\u8d62\u5f97\u8fd9\u4e2a\u6e38\u620f\u3002"),(0,r.kt)("p",null,"\u52a8\u6001\u89c4\u5212 \u6781\u5c0f\u6781\u5927\u5316\u601d\u8def\uff1a\u8fd9\u662f\u4e00\u9053Minimax\u7b97\u6cd5 \u53c8\u540d\u6781\u5c0f\u5316\u6781\u5927\u7b97\u6cd5\u95ee\u9898\u3002\u5c40\u90e8\u6700\u5927\u503c\uff0c\u5168\u5c40\u6700\u5c0f\u503c\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u597d\u5904\u5728\u4e8e\u6211\u53ef\u4ee5\u7a77\u4e3e\u6240\u6709\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u6765\u8bf4\uff0c\u5c31\u662f\u6307\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u5f53\u4f5c\u5206\u5272\u70b9\uff0c\u800c\u4e8c\u5206\u53ea\u80fd\u628a\u4e2d\u95f4\u7684\u6570\u5b57\u5f53\u4f5c\u5206\u5272\u70b9\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u52a8\u6001\u89c4\u5212\u6765\u8bf4\uff0c\u9700\u8981\u660e\u767ddp","[i][j]","\u7684\u542b\u4e49\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u5c1d\u8bd5\u89e3\u91cadp","[","i]","[j]","\u7684\u542b\u4e49:\ndp","[","i]","[j]","\u662f\u8bf4\u4f9d\u6b21\u4ee5\u4ecei\u5230j\u7684\u6570\u5b57\u4f5c\u4e3a\u5206\u5272\u70b9(\u731c\u7684\u6570)\uff0c\u5fc5\u5b9a\u8d62\u7684\u6e38\u620f\u6240\u7528\u94b1\u7684\u6700\u5c0f\u503c\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u5272\u70b9\uff0c\u6211\u4eec\u53d6\u5b83\u5de6\u53f3\u4e24\u8fb9\u533a\u95f4\u7684\u6700\u5927\u503c\u52a0\u4e0a\u5206\u5272\u70b9\u672c\u8eab\u4f5c\u4e3a\u53d6\u6b64\u5206\u5272\u70b9\u7684dp","[i][j]","\u503c\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53d6\u6240\u6709\u5206\u5272\u70b9\u7684dp","[i][j]","\u7684\u6700\u5c0f\u503c\u4f5c\u4e3adp","[i][j]","\u7684\u771f\u6b63\u7684\u503c\n\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u4ee5i\u4f5c\u4e3a\u5206\u5272\u70b9\u7684dp","[i][j]","\uff0c\u53ea\u53d6i\u53f3\u8fb9\u7684\u533a\u95f4\uff1b\u5bf9\u4e8e\u4ee5j\u4f5c\u4e3a\u5206\u5272\u70b9\u7684dp","[i][j]","\uff0c\u53ea\u53d6j\u5de6\u8fb9\u7684\u533a\u95f4"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"i i+1 i+2 ... ... j-2 j-1 j\n\u4ee5i+1\u4e3a\u5206\u5272\u70b9\u5bf9\u5e94\u7684\uff1adp1=max(dp","[","i]","[i]",",dp","[","i+2]","[j]",")+i+1\n\u4ee5j-1\u4e3a\u5206\u5272\u70b9\u5bf9\u5e94\u7684: dp2=max(dp","[","i]","[j-2]",",dp","[","j]","[j]",")+j-1\n\u7279\u522b\u5730,\u4ee5i\u4e3a\u5206\u5272\u70b9\uff1adp0=i+dp","[","i+1]","[j]",";\u4ee5j\u4e3a\u5206\u5272\u70b9: dp3=j+dp","[i][j-1]","\ndp","[","i]","[j]","=min(dp0,dp1,dp2,dp3)")),(0,r.kt)("p",null,"\u7ed9\u51fa\u4e00\u4e2adp\u4e8c\u7ef4\u6570\u7ec4\u6765\u7528\u4ee3\u7801\u586b\u5145\u5b83\uff0c\u201c\\\u201d\u8868\u793a\u6b63\u65e0\u7a77"),(0,r.kt)("p",null,"(1)\u521d\u59cb\u5316\uff1a         (2)\u6613\u77e5dp","[","i]","[i]","=0   "),(0,r.kt)("p",null,"| \\ \\ \\ \\ |         | 0 \\ \\ \\ |\n| \\ \\ \\ \\ |         | \\ 0 \\ \\ |\n| \\ \\ \\ \\ |         | \\ \\ 0 \\ |\n| \\ \\ \\ \\ |         | \\ \\ \\ 0 |\n\u63a5\u4e0b\u6765\u8981\u8003\u8651\u600e\u4e48\u586b\u5145\u77e9\u9635\u4ee5\u5f97\u5230dp","[","1]","[n]",":\n\u5f88\u5bb9\u6613\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u548c\u4e0b\u8fb9\u5730\u6570\u636e\u6765\u8ba1\u7b97\u5b83\u672c\u8eab\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fd9\u6837\u586b\u5145"),(0,r.kt)("p",null,"(3)\u586b\u51451\u5217\uff1a\n| 0 1 \\ \\ |  dp","[","1]","[2]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b\n| \\ 0 \\ \\ |\n| \\ \\ 0 \\ |\n| \\ \\ \\ 0 |\n(4)\u518d\u586b\u51451\u5217\uff1a\n| 0 1 x \\ |  dp","[","1]","[3]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b\n| \\ 0 2 \\ |  dp","[","2]","[3]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b(\u5148\u586b\u5145)\n| \\ \\ 0 \\ |\n| \\ \\ \\ 0 |"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int getMoneyAmount(int n) {\n        if (n == 1) return 0;\n        int dp[n + 1][n + 1];\n        for (int i = 0; i <= n; ++i) {\n            for (int j = 0; j <= n; ++j) {\n                dp[i][j] = INT_MAX;\n            }\n        }\n        for (int i = 0; i <= n; ++i) dp[i][i] = 0;\n        for (int j = 2; j <= n; j++) {\n            for (int i = j - 1; i >= 1; i--) {\n                for (int k = i + 1; k <= j - 1; k++) {\n                    dp[i][j] = min(dp[i][j], k + max(dp[i][k - 1], dp[k + 1][j]));\n\n                }\n                dp[i][j] = min(dp[i][j], i + dp[i + 1][j]);\n                dp[i][j] = min(dp[i][j], j + dp[i][j - 1]);\n\n            }\n        }\n\n        return dp[1][n];\n    }\nprivate :\n    int calculate(int low, int high) {\n        if (low >= high) return 0;\n        int minres = 0x7fffffff;\n        for (int i = (low + high) / 2; i <= high; ++i) {\n            int res = max(calculate(low, i - 1), calculate(i + 1, high)) + i;\n            minres = min(minres, res);\n        }\n        return minres;\n    }\n};\n")),(0,r.kt)("h4",{id:"378-\u6709\u5e8f\u77e9\u9635\u4e2d\u7b2ck\u5c0f\u7684\u5143\u7d20"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/"},"378. \u6709\u5e8f\u77e9\u9635\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20")),(0,r.kt)("p",null,"\u96be\u5ea6\u4e2d\u7b49443"),(0,r.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"n x n"))," \u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u884c\u548c\u6bcf\u5217\u5143\u7d20\u5747\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u627e\u5230\u77e9\u9635\u4e2d\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," \u5c0f\u7684\u5143\u7d20\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u6392\u5e8f\u540e\u7684\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," \u5c0f\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n   bool check(vector<vector<int>>& matrix,int k,int mid,int n){\n       int i=n-1,j=0;\n       int num=0;\n       while(i>=0 && j<n){\n           if(matrix[i][j]<=mid){\n               num+=i+1;\n               j++;\n           }\n           else    i--;\n       }\n       return num>=k;\n   }\n   int kthSmallest(vector<vector<int>>& matrix, int k) {\n       int n=matrix.size();\n       int left=matrix[0][0],right=matrix[n-1][n-1];\n       while(left<right){\n           int mid=left+(right-left)/2;\n           if(check(matrix,k,mid,n)) right=mid;\n           else left=mid+1;\n       }\n       return left;\n   }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int bs_max(vector<vector<int>> &g, int val) {\n        int cnt = 0, i = g.size();\n        while (i > 0 && g[i - 1][0] > val) i -= 1;\n        cnt += g.size() - i;\n        for (int j = 1; j < g.size(); j++) {\n            while (i > 0 && g[i - 1][j] > val) --i;\n            cnt += g.size() - i;\n        }\n        return cnt;\n    }\n    int bs_min(vector<vector<int>> &g, int val) {\n        int cnt = 0, i = -1;\n        while (i + 1 < g.size() && g[i + 1][0] < val) i += 1;\n        cnt += i + 1;\n        for (int j = 1; j < g.size(); j++) {\n            while (i >= 0 && g[i][j] >= val) --i;\n            cnt += i + 1;\n        }\n        return cnt;\n    }\n    int kthSmallest(vector<vector<int>>& matrix, int k) {\n        int n = matrix.size();\n        int head = matrix[0][0], tail = matrix[n - 1][n - 1], mid;\n        while (head <= tail) {\n            mid = ((head ^ tail) >> 1) + (head & tail);\n            int a = bs_min(matrix, mid);\n            int b = bs_max(matrix, mid);\n            int c = n * n - a - b;\n            if (k <= a + c && k > a) return mid;\n            if (a + c < k) head = mid + 1;\n            else tail = mid - 1;\n        }\n        return -1;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-88-\u5408\u5e76\u6570\u7ec4"},"LC-88 \u5408\u5e76\u6570\u7ec4"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u4f60\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"nums2"),"\uff0c\u8bf7\u4f60\u5c06 ",(0,r.kt)("inlineCode",{parentName:"p"},"nums2")," \u5408\u5e76\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"nums1")," \u4e2d",(0,r.kt)("em",{parentName:"p"},"\uff0c"),"\u4f7f ",(0,r.kt)("inlineCode",{parentName:"p"},"nums1")," \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u521d\u59cb\u5316 ",(0,r.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"nums2")," \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"m")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," \u3002\u4f60\u53ef\u4ee5\u5047\u8bbe ",(0,r.kt)("inlineCode",{parentName:"p"},"nums1")," \u7684\u7a7a\u95f4\u5927\u5c0f\u7b49\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"m + n"),"\uff0c\u8fd9\u6837\u5b83\u5c31\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u4fdd\u5b58\u6765\u81ea ",(0,r.kt)("inlineCode",{parentName:"p"},"nums2")," \u7684\u5143\u7d20\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        int i = m - 1, j = n - 1, tar = m + n - 1;\n        while (j >= 0) {\n            nums1[tar--] = i >= 0 && nums1[i] > nums2[j] ? nums1[i--] : nums2[j--];\n        }\n    }\n};\n")),(0,r.kt)("h4",{id:"\u6700\u5927\u5e73\u5747\u503c"},"\u6700\u5927\u5e73\u5747\u503c"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u9898\u76ee\u63cf\u8ff0")),(0,r.kt)("p",null," \u7ed9\u5b9a\u4e00\u4e2a\u6709 N\u4e2a\u5143\u7d20\u7684\u975e\u8d1f\u5e8f\u5217\uff0c\u6c42\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e M \u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u6700\u5927\u5e73\u5747\u503c\u3002"),(0,r.kt)("p",null,"\u6700\u5927\u5e73\u5747\u503c\u4ecb\u4e8e\u5143\u7d20\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e4b\u95f4->\u4e8c\u5206\u6cd5"),(0,r.kt)("p",null,"\u533a\u95f4\u548c->\u524d\u7f00\u548c->\u6c42\u89e3\u5224\u65ad\u662f\u5426\u5b58\u5728\u957f\u5ea6>=M\u7684\u8fde\u7eed\u5b50\u5e8f\u5217 >= LA(\u7ed9\u5b9a\u503c)"),(0,r.kt)("p",null,"\u65b9\u6cd5:\u5728\u524d\u7f00\u548c\u6570\u7ec4\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c->\u5224\u5b58\u5728\u6027"),(0,r.kt)("p",null,(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"a"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mn",{parentName:"mrow"},"1"))),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mo",{parentName:"mrow"},"\u22ef"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"a"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow"},"L"))),(0,r.kt)("mo",{parentName:"mrow"},">"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mi",{parentName:"mrow"},"L"),(0,r.kt)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"b"),(0,r.kt)("mi",{parentName:"msub"},"i")),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"a"),(0,r.kt)("mi",{parentName:"msub"},"i")),(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mi",{parentName:"mrow"},"L"),(0,r.kt)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"b"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mn",{parentName:"mrow"},"1"))),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mo",{parentName:"mrow"},"\u22ef"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"a"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow"},"L"))),(0,r.kt)("mo",{parentName:"mrow"},">"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a_{i+1} + \\cdots + a_{i + L} >= AL \\\\ b_i = a_i - L \\\\ b_{i + 1} + \\cdots + a_{i + L} >= 0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.791661em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,r.kt)("span",{parentName:"span",className:"minner"},"\u22ef"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.747431em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.328331em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"L"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},">")),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"L")),(0,r.kt)("span",{parentName:"span",className:"mspace newline"}),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.84444em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"L")),(0,r.kt)("span",{parentName:"span",className:"mspace newline"}),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.902771em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,r.kt)("span",{parentName:"span",className:"minner"},"\u22ef"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.747431em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.328331em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"L"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},">")),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 100000\nlong long arr[MAX_N + 5];\nlong long b[MAX_N + 5];\nbool check(long long n, long long m, long long val) {\n    for (long long i = 1; i <= n; ++i) b[i] = arr[i] - val;\n    for (long long i = 1; i <= n; ++i) b[i] += b[i - 1];\n    long long pre = 0;\n    for (long long i = m; i <= n; ++i) {\n        pre = min(pre, b[i - m]);\n        if (b[i] - pre >= 0) return true;\n    }\n    return false;\n}\n\nlong long bs(long long l, long long r, long long n, long long m) {\n    if (l == r) return l;\n    long long mid = (l + r + 1) >> 1;\n    if (check(n, m, mid)) return bs(mid, r, n, m);\n    return bs(l, mid - 1, n, m);\n\n}\n\nint main() {\n    long long n, m, s, t;\n    cin >> n >> m;\n    for (long long i = 1; i <= n; ++i) {\n        cin >> arr[i];\n        arr[i] *= 1000;\n        if (i == 1) s = t = arr[i];\n        s = min(s, arr[i]);\n        t = max(t, arr[i]);\n    }\n    cout << bs(s, t, n, m) << endl;\n    return 0;\n}\n\n")),(0,r.kt)("h4",{id:"\u79e6\u817e\u4e0e\u6559\u5b66\u8bc4\u4f30cpp"},"\u79e6\u817e\u4e0e\u6559\u5b66\u8bc4\u4f30.cpp"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u4e2a\u6574\u6570S,E,D \u6765\u63cf\u8ff0\u8bc4\u4f30\u56e2\u7684\u5c0f\u7ec4: \u65e2\u8be5\u5c0f\u7ec4\u7684\u6210\u5458\u5728\u4ece\u5bbf\u820d\u5230\u6559\u5b66\u697c\u7684\u8def\u4e0a\u7684:S,S+D,S+2D,\u2026,S+KD(K\u2208Z,S+KD\u2264E,S+(K+1)D>E) \u4f4d\u7f6e\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u627e\u51fa\u5947\u6570\u4eba\u6570\u7684\u4f4d\u7f6e\u6700\u591a\u6709\u4e00\u4e2a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("img",{alt:"image-20210125213921849",src:t(40626).Z}))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N  200000\n\nstruct Node {\n    long long s, e, d;\n} data[MAX_N + 5];\n\nlong long count(long long n, long long pos) {\n    long long sum = 0;\n    for (long long i = 0; i < n; ++i) {\n        if (data[i].s > pos) continue;\n        if (data[i].e <= pos) {\n            sum += (data[i].e - data[i].s) / data[i].d + 1;\n            continue;\n        }\n        sum += (pos - data[i].s) / data[i].d + 1;\n    }\n    return sum;\n}\n\nlong long check(long long n, long long pos) {\n   return count(n, pos) % 2; \n}\n\nlong long bs(long long l, long long r, long long n) {\n    if (l == r) return l;\n    long long mid = (l + r) >> 1;\n    if (check(n, mid)) return bs(l, mid, n);\n    else bs(mid + 1, r, n);\n}\n\nlong long calc(long long n) {\n    long long l, r, mid;\n    for (long long i = 0; i < n; ++i) {\n        cin >> data[i].s >> data[i].e >> data[i].d;\n        if (i == 0) l = data[i].s, r = data[i].e;\n        l = min(l, data[i].s);\n        r = max(r, data[i].e);\n    }\n    long long pos = bs(l, r, n);\n    long long cnt = count(n, pos) - count(n, pos - 1);\n    if (cnt & 1) {\n        cout << pos << " " << cnt << endl;\n    } else {\n        cout << "Poor QIN Teng:(" << endl;\n    }\n    return 0;\n}\n\n\nint main() {\n    long long t, n;\n    cin >> t;\n    for (long long i = 0; i < t; ++i) {\n        cin >> n;\n        calc(n);\n    }\n    return 0;\n}\n\n')),(0,r.kt)("h4",{id:"hzoj-244-\u5976\u725b\u56f4\u680f"},"HZOJ-244-\u5976\u725b\u56f4\u680f"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20210125233324739",src:t(86070).Z})),(0,r.kt)("p",null,"10000->\u4e8c\u7ef4\u6570\u7ec4,\u79bb\u6563\u5316\u5747\u4e0d\u53ef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 500\n\nstruct Data {\n    int x, y;\n} arr[MAX_N + 5];\nint tmp[MAX_N + 5];\n\nbool check_y(int l, int r, int c, int len) {\n    int cnt = 0;\n    for (int i = l; i <= r; ++i) {\n        tmp[cnt++] = arr[i].y;\n    }\n    sort(tmp, tmp + cnt);\n    for (int i = c - 1; i < cnt; ++i) {\n        if (tmp[i] - tmp[i - c + 1] < len)  return true;\n    }\n    return false;\n}\n\nbool check(int n, int len, int c) {\n    int j = 0;\n    for (int i = 0; i < n; ++i) {\n        while (arr[i].x - arr[j].x >= len) j++;\n        if (arr[i].x - arr[j].x + 1 < c) continue;\n        if (check_y(j, i, c, len)) return true;\n    }\n    return false;\n}\n\nbool cmp(const Data &a, const Data &b) {\n    return a.x < b.x;\n}\n\nint main() {\n    int c, n;\n    cin >> c >> n;\n    for (int i = 0; i < n; ++i) cin >> arr[i].x >> arr[i].y;\n    sort(arr, arr + n, cmp);\n    int l = 1, r = 10000;\n    while (l < r) {\n        int mid = (l + r) >> 1;\n        if (check(n, mid, c)) r = mid;\n        else l = mid + 1;\n    }\n    cout << l << endl;\n    return 0;\n}\n\n")))}k.isMDXComponent=!0},15051:function(n,a,t){a.Z=t.p+"assets/images/4_fig1-3787e682b75c7e163ca123a74370c355.png"},688:function(n,a,t){a.Z=t.p+"assets/images/849589-20180402133438219-1946132192-650c82c2b5cce8c1d3dde9aa493862a5.png"},75267:function(n,a,t){a.Z=t.p+"assets/images/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYxMDA1ZDE1YzA4YmE-852562a2a0555663faf165b0837d17cd.bin"},8856:function(n,a,t){a.Z=t.p+"assets/images/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYxMDNjN2MwYWQ5MTc-1126c8f0a729a458bd3f9f235473ec11.bin"},92862:function(n,a,t){a.Z=t.p+"assets/images/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE1LzE2OGYxMDk3ZjhjMzUxNTI-f87849b1bea087d8afbf937c88769e9b.bin"},40626:function(n,a,t){a.Z=t.p+"assets/images/image-20210125213921849-fb9b95a291d43e9a12469b4f409c2465.png"},86070:function(n,a,t){a.Z=t.p+"assets/images/image-20210125233324739-bd4a549c1eed282c4c101fad97613d84.png"}}]);