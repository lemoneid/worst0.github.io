(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[3444],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return o},kt:function(){return f}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=r.createContext({}),p=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},o=function(n){var e=p(n.components);return r.createElement(c.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,o=u(n,["components","mdxType","originalType","parentName"]),m=p(t),f=i,d=m["".concat(c,".").concat(f)]||m[f]||s[f]||a;return t?r.createElement(d,l(l({ref:e},o),{},{components:t})):r.createElement(d,l({ref:e},o))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,l=new Array(a);l[0]=m;var u={};for(var c in e)hasOwnProperty.call(e,c)&&(u[c]=e[c]);u.originalType=n,u.mdxType="string"==typeof n?n:i,l[1]=u;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},88270:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return s}});var r=t(22122),i=t(19756),a=(t(67294),t(3905)),l=["components"],u={id:"B3.\u591a\u8fdb\u7a0b",title:"B3.\u591a\u8fdb\u7a0b","typora-root-url":"../"},c={unversionedId:"Operating_system/B3.\u591a\u8fdb\u7a0b",id:"Operating_system/B3.\u591a\u8fdb\u7a0b",isDocsHomePage:!1,title:"\u591a\u8fdb\u7a0b",description:"image-20200806161620688",source:"@site/docs/5.Operating_system/B3.\u591a\u8fdb\u7a0b.md",sourceDirName:"5.Operating_system",slug:"/Operating_system/B3.\u591a\u8fdb\u7a0b",permalink:"/Operating_system/B3.\u591a\u8fdb\u7a0b",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/5.Operating_system/B3.\u591a\u8fdb\u7a0b.md",version:"current",lastUpdatedAt:1624240624,formattedLastUpdatedAt:"6/21/2021",frontMatter:{id:"B3.\u591a\u8fdb\u7a0b",title:"B3.\u591a\u8fdb\u7a0b","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"Linux\u547d\u4ee4\u884c\u89e3\u6790",permalink:"/Operating_system/B2.Linux\u547d\u4ee4\u884c\u89e3\u6790"},next:{title:"\u591a\u7ebf\u7a0b\u7ebf\u7a0b",permalink:"/Operating_system/B4.\u591a\u7ebf\u7a0b"}},p=[{value:"\u8fdb\u7a0b\u7684\u521b\u5efa",id:"\u8fdb\u7a0b\u7684\u521b\u5efa",children:[]},{value:"\u8fdb\u7a0b\u7684\u53d8\u8eab",id:"\u8fdb\u7a0b\u7684\u53d8\u8eab",children:[]},{value:"\u8fdb\u7a0b\u7684\u9000\u51fa",id:"\u8fdb\u7a0b\u7684\u9000\u51fa",children:[]},{value:"\u5b64\u513f\u8fdb\u7a0b",id:"\u5b64\u513f\u8fdb\u7a0b",children:[]},{value:"\u50f5\u5c38\u8fdb\u7a0b",id:"\u50f5\u5c38\u8fdb\u7a0b",children:[{value:"git\u8fdb\u7a0b\u7684\u534f\u540c\u8c03\u7528",id:"git\u8fdb\u7a0b\u7684\u534f\u540c\u8c03\u7528",children:[]}]},{value:"\u8fdb\u7a0b\u72b6\u6001",id:"\u8fdb\u7a0b\u72b6\u6001",children:[]},{value:"\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b",id:"\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b",children:[]},{value:"\u901a\u8fc7\u6587\u4ef6\u9501\u5199\u5165\u6587\u4ef6\uff0c\u591a\u8fdb\u7a0b\u7d2f\u52a0",id:"\u901a\u8fc7\u6587\u4ef6\u9501\u5199\u5165\u6587\u4ef6\uff0c\u591a\u8fdb\u7a0b\u7d2f\u52a0",children:[{value:"1.struct\u7ed3\u6784\u4f53",id:"1struct\u7ed3\u6784\u4f53",children:[]},{value:"2.\u53d8\u91cf",id:"2\u53d8\u91cf",children:[]}]}],o={toc:p};function s(n){var e=n.components,u=(0,i.Z)(n,l);return(0,a.kt)("wrapper",(0,r.Z)({},o,u,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806161620688",src:t(55540).Z})),(0,a.kt)("p",null,"\u5185\u6838kernel\u5c06\u4e0a\u5c42\u5e94\u7528\u4e0e\u786c\u4ef6\u8fde\u63a5\u8d77\u6765,\u9a71\u52a8\u786c\u4ef6;"),(0,a.kt)("p",null,"\u6211\u4eec\u4e00\u76f4\u5728zsh\u4e2d,which\u662f\u5426\u5185\u7f6e\u4e0eshell,",(0,a.kt)("inlineCode",{parentName:"p"},"echo $0")),(0,a.kt)("p",null,"\u7a0b\u5e8f:\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6"),(0,a.kt)("p",null,"systemd\u8fdb\u7a0b:1\u53f7\u8fdb\u7a0b,\u800c\u975einit(\u6dd8\u6c70)"),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u7684\u521b\u5efa"},"\u8fdb\u7a0b\u7684\u521b\u5efa"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806161904786",src:t(2958).Z})),(0,a.kt)("p",null,"ppid:parent process id"),(0,a.kt)("p",null,"\u8d44\u6e90\u7edf\u8ba1\u4fe1\u606f:time \u547d\u4ee4"),(0,a.kt)("p",null,"\u4fe1\u53f7:\u4fe1\u53f7\u662f\u660e\u786e\u7ed9\u67d0\u4e00\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u5185\u5b58\u6e05\u9664:\u5c31\u662f\u91cd\u5199"),(0,a.kt)("p",null,"==\u5199\u62f7\u8d1d== :\n\u5728exec\u4e4b\u524d \u4e24\u4e2a\u8fdb\u7a0b\u7528\u7684\u662f \u76f8\u540c\u7684\u7269\u7406\u7a7a\u95f4\uff08\u5185\u5b58\u533a\uff09\uff08\u6240\u8c13\u7528\u662f\u53ea\u8bfb\uff0c\u4e0d\u80fd\u5199\u7684\uff09\uff0c\u5b50\u8fdb\u7a0b\u7684\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u3001\u5806\u6808\u90fd\u662f\u6307\u5411\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u7a7a\u95f4 \u3002\u5f53\u7236\u5b50\u8fdb\u7a0b\u4e2d\u6709 \u66f4\u6539\u76f8\u5e94\u6bb5\u7684\u884c\u4e3a\u53d1\u751f \u65f6\uff0c\u518d \u4e3a\u5b50\u8fdb\u7a0b\u76f8\u5e94\u7684\u6bb5\u5206\u914d\u7269\u7406\u7a7a\u95f4\uff08\u8fd9\u65f6\u521b\u5efa\u62f7\u8d1d\u7684\u8fdb\u7a0b\u7684\u9875\u8868\u6761\u76ee\u4f1a\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7269\u7406\u9875\u9762\uff08\u62f7\u8d1d\uff09\uff0c\u7136\u540e\u6062\u590d\u8fd9\u4e2a\u9875\u9762\u7684\u53ef\u5199\u6743\u9650\uff09 \uff0c\u5982\u679c\u4e0d\u662f\u56e0\u4e3aexec\uff0c\u5185\u6838\u4f1a\u7ed9 \u5b50\u8fdb\u7a0b\u7684\u6570\u636e\u6bb5\u3001\u5806\u6808\u6bb5\u5206\u914d\u76f8\u5e94\u7684\u7269\u7406\u7a7a\u95f4 \uff08\u81f3\u6b64\u4e24\u8005\u6709\u5404\u81ea\u7684\u8fdb\u7a0b\u7a7a\u95f4\uff0c\u4e92\u4e0d\u5f71\u54cd\uff09\uff0c\u800c\u4ee3\u7801\u6bb5\u7ee7\u7eed\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u7a7a\u95f4\uff08\u4e24\u8005\u7684\u4ee3\u7801\u5b8c\u5168\u76f8\u540c\uff09\u3002\u800c\u5982\u679c\u662f\u56e0\u4e3aexec\uff0c\u7531\u4e8e\u4e24\u8005\u6267\u884c\u7684\u4ee3\u7801\u4e0d\u540c\uff0c \u5b50\u8fdb\u7a0b\u7684\u4ee3\u7801\u6bb5\u4e5f\u4f1a\u5206\u914d\u5355\u72ec\u7684\u7269\u7406\u7a7a\u95f4 \u3002\n\u901a\u5e38\u6765\u8bf4\uff0cfork\u51fd\u6570\u7684\u4ee3\u7801\u6bb5\u57fa\u672c\u662f\u53ea\u8bfb\u7c7b\u578b\u7684\uff0c\u800c\u4e14\u5728\u8fd0\u884c\u9636\u6bb5\u4e5f\u53ea\u662f\u590d\u5236\uff0c\u5e76\u4e0d\u4f1a\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\uff0c\u56e0\u6b64\u7236\u5b50\u8fdb\u7a0b\u662f\u5171\u4eab\u4ee3\u7801\u6bb5\uff0c\u800c\u6570\u636e\u6bb5\u3001Bss\u6bb5\u3001\u5806\u6808\u6bb5\u7b49\u4f1a\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u5199\u8fc7\u7a0b\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u4e86\u4e0d\u540c\u7684\u6bb5\u53d1\u751f\u76f8\u5e94\u7684\u5199\u65f6\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u5b9e\u73b0\u4e86\u4e0d\u540c\u8fdb\u7a0b\u7684\u72ec\u7acb\u7a7a\u95f4"),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u7684\u53d8\u8eab"},"\u8fdb\u7a0b\u7684\u53d8\u8eab"),(0,a.kt)("p",null,"\u5f62\u5f0f\uff1aexec","[","lv]","[pe]"),(0,a.kt)("p",null,"list\uff0cpath\uff0cvector"),(0,a.kt)("p",null,"vector:\u4e8c\u7ef4\u6570\u7ec4,main\u4e3b\u51fd\u6570"),(0,a.kt)("p",null,"list:\u6570\u7ec4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"l\u548cv\u5206\u522b\u8868\u793a\u5217\u8868\u8fd8\u662f\u6570\u7ec4(\u5411\u91cf)\u7684\u65b9\u5f0f\u63d0\u4f9b\u53c2\u6570")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"p\u8868\u793a\u5728\u7528\u6237\u7684==path==\u8def\u5f84\u4e0b\u67e5\u627e\u53ef\u6267\u884c\u6587\u4ef6")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"e\u8868\u793a\u4e3a\u65b0\u8fdb\u7a0b\u63d0\u4f9b\u65b0\u7684\u73af\u5883\u53d8\u91cf"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"        #include <unistd.h>\n\n       extern char **environ;\n\n       int execl(const char *path, const char *arg, ...\n                       /* (char  *) NULL */); //NULL\u8868\u793a\u5217\u8868\u7ed3\u675f\n       int execlp(const char *file, const char *arg, ...\n                       /* (char  *) NULL */);\n       int execle(const char *path, const char *arg, ...\n                       /*, (char *) NULL, char * const envp[] */);\n       int execv(const char *path, char *const argv[]);\n       int execvp(const char *file, char *const argv[]);\n       int execvpe(const char *file, char *const argv[], char *const envp[]);\n\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806162318945",src:t(97739).Z})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8fdb\u7a0b\u6539\u53d8\u4e3a\u6267\u884c\u7684\u8fdb\u7a0b"),(0,a.kt)("li",{parentName:"ol"},"\u4fe1\u53f7\u63a5\u6536\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f:\u4e00\u79cd\u662f\u4ec0\u4e48\u4e5f\u4e0d\u505a,\u4e00\u79cd\u662f\u76f4\u63a5\u6740\u6b7b")),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u7684\u9000\u51fa"},"\u8fdb\u7a0b\u7684\u9000\u51fa"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806162352639",src:t(33063).Z})),(0,a.kt)("p",null,"0-255\u6ca1\u6709\u8fd4\u56de-1"),(0,a.kt)("p",null,"_exit:\u5185\u6838\u51fd\u6570"),(0,a.kt)("p",null,"\u8fdb\u7a0b\u6700\u591a:1024\u4e2aid"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806162411050",src:t(21960).Z})),(0,a.kt)("p",null,"\u4e00\u822c\u7236\u8fdb\u7a0b\u4e0e\u5b50\u8fdb\u7a0b\u7ec4id\u76f8\u540c"),(0,a.kt)("p",null,"fork()\u51fd\u6570;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'//\u5fc5\u987b\u5199    \nif ((pid = fork()) < 0) {\n        perror("fork()");\n        exit(1);\n    }\n')),(0,a.kt)("h3",{id:"\u5b64\u513f\u8fdb\u7a0b"},"\u5b64\u513f\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u4e00\u4e2a\u7236\u8fdb\u7a0b\u9000\u51fa\uff0c\u800c\u5b83\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b50\u8fdb\u7a0b\u5c06\u6210\u4e3a\u5b64\u513f\u8fdb\u7a0b\u3002"),(0,a.kt)("p",null,"\u5b64\u513f\u8fdb\u7a0b\u5c06\u88ab init \u8fdb\u7a0b\uff08\u8fdb\u7a0b\u53f7\u4e3a 1\uff09\u6240\u6536\u517b\uff0c\u5e76\u7531 init \u8fdb\u7a0b\u5bf9\u5b83\u4eec\u5b8c\u6210\u72b6\u6001\u6536\u96c6\u5de5\u4f5c\u3002"),(0,a.kt)("p",null,"\u7531\u4e8e\u5b64\u513f\u8fdb\u7a0b\u4f1a\u88ab init \u8fdb\u7a0b\u6536\u517b\uff0c\u6240\u4ee5\u5b64\u513f\u8fdb\u7a0b\u4e0d\u4f1a\u5bf9\u7cfb\u7edf\u9020\u6210\u5371\u5bb3\u3002"),(0,a.kt)("h2",{id:"\u50f5\u5c38\u8fdb\u7a0b"},"\u50f5\u5c38\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u5728\u5b50\u8fdb\u7a0b\u9000\u51fa\u65f6\u4e0d\u4f1a\u91ca\u653e\uff0c\u53ea\u6709\u5f53\u7236\u8fdb\u7a0b\u901a\u8fc7 wait() \u6216 waitpid()  \u83b7\u53d6\u4e86\u5b50\u8fdb\u7a0b\u4fe1\u606f\u540e\u624d\u4f1a\u91ca\u653e\u3002\u5982\u679c\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u800c\u7236\u8fdb\u7a0b\u5e76\u6ca1\u6709\u8c03\u7528 wait() \u6216  waitpid()\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4ecd\u7136\u4fdd\u5b58\u5728\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u79cd\u8fdb\u7a0b\u79f0\u4e4b\u4e3a\u50f5\u5c38\u8fdb\u7a0b\u3002"),(0,a.kt)("p",null,"\u50f5\u5c38\u8fdb\u7a0b\u901a\u8fc7 ps \u547d\u4ee4\u663e\u793a\u51fa\u6765\u7684\u72b6\u6001\u4e3a Z\uff08zombie\uff09\u3002"),(0,a.kt)("p",null,"\u7cfb\u7edf\u6240\u80fd\u4f7f\u7528\u7684\u8fdb\u7a0b\u53f7\u662f\u6709\u9650\u7684\uff0c\u5982\u679c\u4ea7\u751f\u5927\u91cf\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5c06\u56e0\u4e3a\u6ca1\u6709\u53ef\u7528\u7684\u8fdb\u7a0b\u53f7\u800c\u5bfc\u81f4\u7cfb\u7edf\u4e0d\u80fd\u4ea7\u751f\u65b0\u7684\u8fdb\u7a0b\u3002"),(0,a.kt)("p",null,"\u8981\u6d88\u706d\u7cfb\u7edf\u4e2d\u5927\u91cf\u7684\u50f5\u5c38\u8fdb\u7a0b\uff0c\u53ea\u9700\u8981\u5c06\u5176\u7236\u8fdb\u7a0b\u6740\u6b7b\uff0c\u6b64\u65f6\u50f5\u5c38\u8fdb\u7a0b\u5c31\u4f1a\u53d8\u6210\u5b64\u513f\u8fdb\u7a0b\uff0c\u4ece\u800c\u88ab init \u8fdb\u7a0b\u6240\u6536\u517b\uff0c\u8fd9\u6837 init \u8fdb\u7a0b\u5c31\u4f1a\u91ca\u653e\u6240\u6709\u7684\u50f5\u5c38\u8fdb\u7a0b\u6240\u5360\u6709\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u7ed3\u675f\u50f5\u5c38\u8fdb\u7a0b\u3002"),(0,a.kt)("h3",{id:"git\u8fdb\u7a0b\u7684\u534f\u540c\u8c03\u7528"},"git\u8fdb\u7a0b\u7684\u534f\u540c\u8c03\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "head.h" \n#define filename "temp"\n\nint m_flag = 0;\nint main(int argc, char **argv) {\n    int opt;\n    pid_t pid;\n    char *msg = NULL;\n    while ((opt = getopt(argc, argv, "m:")) != -1) {\n        switch (opt) {\n            case \'m\':\n                m_flag = 1;\n                msg = strdup(optarg);\n                break;\n            default:\n                fprintf(stderr,"Usage: %s [-m message]\\n", argv[0]);\n                exit(1);\n        }\n    }\n    if (m_flag) {\n        if (msg) {\n            printf("%s\\n", msg);\n            free(msg);\n        }\n        return 0;\n    }\n    \n    if ((pid = fork()) < 0) {\n        perror("fork error");\n        exit(1);\n    }\n    if (pid == 0) {\n        execlp("vim", "vim", filename, NULL);\n    } else {\n            wait(NULL);\n            if (access(filename, R_OK) != 0) {\n                perror("access error");\n                exit(1);\n            }\n            if((pid = fork()) < 0) {\n                perror("fork error");\n                exit(1);\n            }\n            if (pid == 0) {\n                //printf("cat!\\n");\n                execlp("cat", "cat", filename, NULL);\n            } else {\n                wait(NULL);\n                //printf("rm\\n");\n                execlp("rm", "rm", filename, NULL);\n            }\n    }\n    return 0;\n}\n\n')),(0,a.kt)("h1",{id:"\u8fdb\u7a0b\u7ba1\u7406"},"\u8fdb\u7a0b\u7ba1\u7406"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(85772).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20200806183724200",src:t(49649).Z})),(0,a.kt)("p",null,"\u5c31\u7eea:\u5df2\u7ecf\u83b7\u5f97\u8d44\u6e90"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(81228).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(96836).Z})),(0,a.kt)("p",null,"\u865a\u62df\u5185\u5b58:"),(0,a.kt)("p",null,"==\u5199\u62f7\u8d1d==:"),(0,a.kt)("p",null,"\u5e76\u53d1:\u4e00\u6bb5\u65f6\u95f4\u5185,\u90fd\u6267\u884c;"),(0,a.kt)("p",null,"\u5e76\u884c:\u771f\u6b63\u7684\u540c\u65f6\u6267\u884c;"),(0,a.kt)("p",null,"\u8c03\u5ea6:\u8fd0\u884c\u90a3\u4e2a\u8fdb\u7a0b,\u8fd0\u884c\u591a\u4e45"),(0,a.kt)("p",null,"\u540c\u6b65:\u6709\u5148\u6709\u540e\u7684\u6267\u884c,\u987a\u5e8f\u786e\u5b9a;"),(0,a.kt)("p",null,"cpu->cpu\u5bc4\u5b58\u5668->cache(3\u7ea7\u7f13\u5b58)->\u5185\u5b58->\u5916\u5b58"),(0,a.kt)("h2",{id:"\u8fdb\u7a0b\u72b6\u6001"},"\u8fdb\u7a0b\u72b6\u6001"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,a.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"R"),(0,a.kt)("td",{parentName:"tr",align:null},"running or runnable (on run queue) \u6b63\u5728\u6267\u884c\u6216\u8005\u53ef\u6267\u884c\uff0c\u6b64\u65f6\u8fdb\u7a0b\u4f4d\u4e8e\u6267\u884c\u961f\u5217\u4e2d\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"D"),(0,a.kt)("td",{parentName:"tr",align:null},"uninterruptible sleep (usually I/O) \u4e0d\u53ef\u4e2d\u65ad\u963b\u585e\uff0c\u901a\u5e38\u4e3a IO \u963b\u585e\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"S"),(0,a.kt)("td",{parentName:"tr",align:null},"interruptible sleep (waiting for an event to complete)   \u53ef\u4e2d\u65ad\u963b\u585e\uff0c\u6b64\u65f6\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u5b8c\u6210\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Z"),(0,a.kt)("td",{parentName:"tr",align:null},"zombie (terminated but not reaped by its parent) \u50f5\u6b7b\uff0c\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u4f46\u662f\u5c1a\u672a\u88ab\u5176\u7236\u8fdb\u7a0b\u83b7\u53d6\u4fe1\u606f\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"T"),(0,a.kt)("td",{parentName:"tr",align:null},"stopped (either by a job control signal or because it is being traced)   \u7ed3\u675f\uff0c\u8fdb\u7a0b\u65e2\u53ef\u4ee5\u88ab\u4f5c\u4e1a\u63a7\u5236\u4fe1\u53f7\u7ed3\u675f\uff0c\u4e5f\u53ef\u80fd\u662f\u6b63\u5728\u88ab\u8ffd\u8e2a\u3002")))),(0,a.kt)("p",null," ",(0,a.kt)("a",{parentName:"p",href:"https://camo.githubusercontent.com/ae6622fbe9bed2d92a67e2cac0bbcb86fcf5e015a789aab89faf6b5e0fdb41e5/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f32626162343132372d336537642d343863632d393134652d3433366265383539666230352e706e67"},(0,a.kt)("img",{alt:"img",src:t(24822).Z}))," "),(0,a.kt)("h2",{id:"\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b"},"\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "head.h" \n\nint main(int argc, char **argv) {\n    pid_t pid;\n    int x = 0;\n    for (int i = 0; i < 100; ++i) {\n        if ((pid = fork()) < 0) {\n            perror("fork()");\n            exit(1);\n        }\n        x = i;\n        if (pid == 0) break;\n    } \n    if (pid == 0) {\n        DBG(GREEN"<Debug>"NONE "\u6211\u662f\u7b2c %d \u4e2a\u5b69\u5b50\\n", x);\n    } else {\n        for (int i = 0; i < x; ++i) {\n            wait(NULL);\n        }\n    }\n\n    return 0;\n}\n\n')),(0,a.kt)("h2",{id:"\u901a\u8fc7\u6587\u4ef6\u9501\u5199\u5165\u6587\u4ef6\uff0c\u591a\u8fdb\u7a0b\u7d2f\u52a0"},"\u901a\u8fc7\u6587\u4ef6\u9501\u5199\u5165\u6587\u4ef6\uff0c\u591a\u8fdb\u7a0b\u7d2f\u52a0"),(0,a.kt)("h3",{id:"1struct\u7ed3\u6784\u4f53"},"1.struct\u7ed3\u6784\u4f53"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "head.h"\n\nstruct Num {\n    int now, sum;\n};\n\nchar num_file[] = "./.num";\nchar lock_file[] = "./.lock";\n\nsize_t set_num(struct Num *num) {\n    FILE *fp = fopen(num_file, "w");\n    size_t nwrite = fwrite(num, sizeof(struct Num), 1, fp);\n    fclose(fp);\n    return nwrite;\n} \n\nsize_t get_num(struct Num *num) {\n    FILE *fp = fopen(num_file, "r");\n    if (fp == NULL) {\n        perror("fopen_r()");\n        return -1;\n    }\n    size_t nread = fread(num, sizeof(struct Num), 1,  fp);\n    fclose(fp);\n    if (nread < 0) {\n        return -1;\n    }\n    return nread;\n}\n\nvoid do_add(int max, int x) {\n    struct Num num;\n    while (1) {\n        FILE *lock = fopen(lock_file, "w");\n        flock(lock->_fileno, LOCK_EX);\n        if (get_num(&num) < 0) {\n            fclose(lock);\n            continue; \n        }\n        DBG(GREEN"<Debug>"NONE " : <%d> now = %d, sum = %d\\n", x, num.now, num.sum);\n        if (num.now > max) {\n            flock(lock->_fileno, LOCK_UN);\n            break;\n        }\n        \n        num.sum += num.now;\n        num.now++;\n        set_num(&num);\n        flock(lock->_fileno, LOCK_UN);\n    }\n    return ;\n}\n\nint main(int argc, char ** argv) {\n    if (argc != 3) {\n        fprintf(stderr, "Usage : %s max ins\\n", argv[0]);\n        exit(1);\n    }\n    int max = atoi(argv[1]);\n    int ins = atoi(argv[2]);\n    struct Num num;\n    num.now = 0;\n    num.sum = 0;\n\n    //save to File\n    set_num(&num);\n\n    pid_t pid;\n    int x;\n    for (int i = 0; i < ins; ++i) {\n        if ((pid = fork()) < 0) {\n            perror("fork()");\n            exit(1);\n        }\n        x = i;\n        if (pid == 0) break;\n    }\n        \n    if (pid == 0) {\n        //do add\n        do_add(max, x);\n        exit(0);\n    }\n    \n    for (int i = 0; i < ins; ++i) {\n        wait(NULL);\n    }\n    \n    // read from File\n    get_num(&num);\n    printf("sum = %d\\n", num.sum);\n    return 0;\n}\n\n')),(0,a.kt)("h3",{id:"2\u53d8\u91cf"},"2.\u53d8\u91cf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "head.h"\n\nchar num_file[] = "./.num";\nchar lock_file[] = "./.lock";\n\nsize_t set_num(int now, int sum) {\n    FILE *fp = fopen(num_file, "w");\n    char buffer[100] = {0};\n    sprintf(buffer,"%d\\n%d\\n", now, sum);\n    size_t nwrite = fwrite(buffer, strlen(buffer), 1, fp);\n    fclose(fp);\n    return nwrite;\n} \n\nsize_t get_num(int *now, int *sum) {\n    FILE *fp = fopen(num_file, "r");\n    if (fp == NULL) {\n        perror("fopen_r()");\n        return -1;\n    }\n\n    char tmp_now[20] = {0};\n    char tmp_sum[20] = {0};\n    fgets(tmp_now, sizeof(tmp_now), fp);\n    fgets(tmp_sum, sizeof(tmp_sum), fp);\n    tmp_now[strlen(tmp_now) - 1] = \'\\0\';\n    tmp_sum[strlen(tmp_sum) - 1] = \'\\0\';\n    *now = atoi(tmp_now);\n    *sum = atoi(tmp_sum);\n    fclose(fp);\n    return 0;\n}\n\nvoid do_add(int max, int x) {\n    int sum = 0, now = 0;\n    while (1) {\n        FILE *lock = fopen(lock_file, "w");\n        flock(lock->_fileno, LOCK_EX);\n        if (get_num(&now, &sum) < 0) {\n            fclose(lock);\n            continue; \n        }\n        DBG(GREEN"<Debug>"NONE " : <%d> now = %d, sum = %d\\n", x, now, sum);\n        if (now > max) {\n            flock(lock->_fileno, LOCK_UN);\n            break;\n        }\n        \n        sum += now;\n        now++;\n        set_num(now, sum);\n        flock(lock->_fileno, LOCK_UN);\n    }\n    return ;\n}\n\nint main(int argc, char ** argv) {\n    if (argc != 3) {\n        fprintf(stderr, "Usage : %s max ins\\n", argv[0]);\n        exit(1);\n    }\n    //atoi\u8f6c\u8bd1 str \u6240\u6307\u7684\u5b57\u8282\u5b57\u7b26\u4e32\u4e2d\u7684\u6574\u6570\u503c\n    int max = atoi(argv[1]);\n    int ins = atoi(argv[2]);\n    int now = 0;\n    int sum = 0;\n\n    //save to File\n    set_num(now, sum);\n\n    pid_t pid;\n    int x;\n    for (int i = 0; i < ins; ++i) {\n        if ((pid = fork()) < 0) {\n            perror("fork()");\n            exit(1);\n        }\n        x = i;\n        if (pid == 0) break;\n    }\n        \n    if (pid == 0) {\n        //do add\n        do_add(max, x);\n        exit(0);\n    }\n    \n    for (int i = 0; i < ins; ++i) {\n        wait(NULL);\n    }\n    \n    // read from File\n    get_num(&now, &sum);\n    printf("sum = %d\\n", sum);\n    return 0;\n}\n\n')))}s.isMDXComponent=!0},24822:function(n,e,t){"use strict";e.Z=t.p+"assets/images/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f32626162343132372d336537642d343863632d393134652d3433366265383539666230352e706e67-ac6be01ce466c6de8c63724a755db827.bin"},85772:function(n,e,t){"use strict";e.Z=t.p+"assets/images/f8f1f82a16255fc4_img3-25f79c4573340187b3fbc2747ca89959.bin"},81228:function(n,e,t){"use strict";e.Z=t.p+"assets/images/f8f1f82a16255fc4_img6-067fc951088ccb3caaa45bd723dcbbbc.bin"},96836:function(n,e,t){"use strict";e.Z=t.p+"assets/images/f8f1f82a16255fc4_img7-48db55ab717bd2d22bc4a4d61571c044.bin"},55540:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806161620688-0e977fbb41085060f83d4f1d9b8da84c.png"},2958:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806161904786-d530198f4090f820e538597f7f50bc60.png"},97739:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806162318945-3d9641c2978d4ab458e1dd02073a0a69.png"},33063:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806162352639-6e164b367e2f30accf3355e7a3935215.png"},21960:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806162411050-f764cbb339b5d9597b237335fda6c0f6.png"},49649:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200806183724200-5f9123d5c012d12ab430333c97cb214d.png"}}]);