"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[5086],{3905:function(n,e,t){t.d(e,{Zo:function(){return o},kt:function(){return k}});var a=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=a.createContext({}),m=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},o=function(n){var e=m(n.components);return a.createElement(p.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,r=n.originalType,p=n.parentName,o=l(n,["components","mdxType","originalType","parentName"]),c=m(t),k=i,d=c["".concat(p,".").concat(k)]||c[k]||u[k]||r;return t?a.createElement(d,s(s({ref:e},o),{},{components:t})):a.createElement(d,s({ref:e},o))}));function k(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var r=t.length,s=new Array(r);s[0]=c;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=n,l.mdxType="string"==typeof n?n:i,s[1]=l;for(var m=2;m<r;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},85838:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return o},default:function(){return c}});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),s=["components"],l={id:"C1.nowcoder",title:"C1.nowcoder","typora-root-url":"../"},p="Nowcoder",m={unversionedId:"Online_Judge/C1.nowcoder",id:"Online_Judge/C1.nowcoder",isDocsHomePage:!1,title:"C1.nowcoder",description:"[TOC]",source:"@site/docs/3.Online_Judge/C1.nowcoder.md",sourceDirName:"3.Online_Judge",slug:"/Online_Judge/C1.nowcoder",permalink:"/Online_Judge/C1.nowcoder",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/3.Online_Judge/C1.nowcoder.md",version:"current",lastUpdatedAt:1633869865,formattedLastUpdatedAt:"10/10/2021",frontMatter:{id:"C1.nowcoder",title:"C1.nowcoder","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"B1.HZOJ",permalink:"/Online_Judge/B1.HZOJ"},next:{title:"D1.EP",permalink:"/Online_Judge/D1.EP"}},o=[{value:"\u7ebf\u6027\u8868",id:"\u7ebf\u6027\u8868",children:[{value:"\u6570\u7ec4",id:"\u6570\u7ec4",children:[]},{value:"\u77e9\u9635",id:"\u77e9\u9635",children:[]},{value:"\u5355\u94fe\u8868",id:"\u5355\u94fe\u8868",children:[]}]},{value:"\u6808\u548c\u961f\u5217",id:"\u6808\u548c\u961f\u5217",children:[{value:"\u6808",id:"\u6808",children:[]},{value:"\u961f\u5217",id:"\u961f\u5217",children:[]}]},{value:"\u6811",id:"\u6811",children:[{value:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",id:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",children:[]},{value:"\u4e8c\u53c9\u6811\u7684\u6784\u5efa",id:"\u4e8c\u53c9\u6811\u7684\u6784\u5efa",children:[]},{value:"\u4e8c\u53c9\u67e5\u627e\u6811",id:"\u4e8c\u53c9\u67e5\u627e\u6811",children:[]},{value:"\u4e8c\u53c9\u6811\u7684\u9012\u5f52",id:"\u4e8c\u53c9\u6811\u7684\u9012\u5f52",children:[]}]},{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",children:[]},{value:"\u6392\u5e8f",id:"\u6392\u5e8f",children:[]},{value:"\u67e5\u627e",id:"\u67e5\u627e",children:[]},{value:"\u66b4\u529b\u679a\u4e3e",id:"\u66b4\u529b\u679a\u4e3e",children:[]},{value:"\u641c\u7d22",id:"\u641c\u7d22",children:[]},{value:"\u5206\u6cbb",id:"\u5206\u6cbb",children:[]},{value:"\u8d2a\u5fc3",id:"\u8d2a\u5fc3",children:[]},{value:"\u9012\u5f52\u548c\u52a8\u6001\u89c4\u5212",id:"\u9012\u5f52\u548c\u52a8\u6001\u89c4\u5212",children:[{value:"\u8df3\u53f0\u9636",id:"\u8df3\u53f0\u9636",children:[]}]},{value:"\u4f4d\u8fd0\u7b97",id:"\u4f4d\u8fd0\u7b97",children:[]},{value:"\u56fe\u8bba",id:"\u56fe\u8bba",children:[]},{value:"\u6570\u5b66",id:"\u6570\u5b66",children:[]},{value:"\u7ec6\u8282\u5b9e\u73b0\u9898",id:"\u7ec6\u8282\u5b9e\u73b0\u9898",children:[]},{value:"\u4f4d\u8fd0\u7b97",id:"\u4f4d\u8fd0\u7b97-1",children:[{value:"\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57",id:"\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57",children:[]}]}],u={toc:o};function c(n){var e=n.components,t=(0,i.Z)(n,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nowcoder"},"Nowcoder"),(0,r.kt)("p",null,"[TOC]"),(0,r.kt)("h2",{id:"\u7ebf\u6027\u8868"},"\u7ebf\u6027\u8868"),(0,r.kt)("h3",{id:"\u6570\u7ec4"},"\u6570\u7ec4"),(0,r.kt)("h3",{id:"\u77e9\u9635"},"\u77e9\u9635"),(0,r.kt)("h4",{id:"hj35\u86c7\u5f62\u77e9\u9635"},"HJ35.\u86c7\u5f62\u77e9\u9635"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  \u86c7\u5f62\u77e9\u9635\u662f\u75311\u5f00\u59cb\u7684\u81ea\u7136\u6570\u4f9d\u6b21\u6392\u5217\u6210\u7684\u4e00\u4e2a\u77e9\u9635\u4e0a\u4e09\u89d2\u5f62\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u4f8b\u5982\uff0c\u5f53\u8f93\u51655\u65f6\uff0c\u5e94\u8be5\u8f93\u51fa\u7684\u4e09\u89d2\u5f62\u4e3a\uff1a "),(0,r.kt)("p",{parentName:"blockquote"},"  1 3 6 10 15 "),(0,r.kt)("p",{parentName:"blockquote"},"  2 5 9 14 "),(0,r.kt)("p",{parentName:"blockquote"},"  4 8 13 "),(0,r.kt)("p",{parentName:"blockquote"},"  7 12 "),(0,r.kt)("p",{parentName:"blockquote"},"  11 ")),(0,r.kt)("p",null,"\u7b2c\u4e00\u884c\u6700\u53f3\u4e0a\u89d2\u7684\u5143\u7d20",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mfrac",{parentName:"mrow"},(0,r.kt)("mrow",{parentName:"mfrac"},(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"N"),(0,r.kt)("mn",{parentName:"msup"},"2")),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow"},"N")),(0,r.kt)("mn",{parentName:"mfrac"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\frac{N^2 + N}{2}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1.36292em",verticalAlign:"-0.345em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,r.kt)("span",{parentName:"span",className:"mfrac"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.01792em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.6550000000000002em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,r.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,r.kt)("span",{parentName:"span",style:{top:"-3.394em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8913142857142857em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.931em",marginRight:"0.07142857142857144em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.5em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size3 size1 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,r.kt)("span",{parentName:"span"}))))),(0,r.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))),(0,r.kt)("p",null,"\u7b2c\u4e00\u884c\u5176\u4ed6\u5143\u7d20",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mfrac",{parentName:"mrow"},(0,r.kt)("mrow",{parentName:"mfrac"},(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"j"),(0,r.kt)("mn",{parentName:"msup"},"2")),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow"},"j")),(0,r.kt)("mn",{parentName:"mfrac"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\frac{j^2 + j}{2}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1.415028em",verticalAlign:"-0.345em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,r.kt)("span",{parentName:"span",className:"mfrac"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.070028em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.6550000000000002em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,r.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,r.kt)("span",{parentName:"span",style:{top:"-3.446108em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8913142857142857em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.931em",marginRight:"0.07142857142857144em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.5em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size3 size1 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,r.kt)("span",{parentName:"span"}))))),(0,r.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))),(0,r.kt)("p",null,"\u4e0b\u4e00\u884c\u7b49\u4e8e\u4e0a\u4e00\u884c\u5143\u7d20\u53bb\u6389\u7b2c\u4e00\u4e2a\uff0c\u518d\u51cf\u53bb1\u5373\u53ef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\nint main()\n{\n  int N;\n  while(cin>>N)\n  {\n      for (size_t i = 1; i <= N; i++) //\u884c\n      {\n          for (size_t j = 1; j < N-(i-1); j++) //\u5217\n              cout<< ((j+i-1)*(j+i-1)+j+i-1)/2 -(i-1)<<" ";\n          cout<< (N*N+N)/2-(i-1) <<endl;\n      }\n  }\n \n  return 0;\n}\n')),(0,r.kt)("h3",{id:"\u5355\u94fe\u8868"},"\u5355\u94fe\u8868"),(0,r.kt)("h2",{id:"\u6808\u548c\u961f\u5217"},"\u6808\u548c\u961f\u5217"),(0,r.kt)("h3",{id:"\u6808"},"\u6808"),(0,r.kt)("h3",{id:"\u961f\u5217"},"\u961f\u5217"),(0,r.kt)("h2",{id:"\u6811"},"\u6811"),(0,r.kt)("h3",{id:"\u4e8c\u53c9\u6811\u7684\u904d\u5386"},"\u4e8c\u53c9\u6811\u7684\u904d\u5386"),(0,r.kt)("h3",{id:"\u4e8c\u53c9\u6811\u7684\u6784\u5efa"},"\u4e8c\u53c9\u6811\u7684\u6784\u5efa"),(0,r.kt)("h3",{id:"\u4e8c\u53c9\u67e5\u627e\u6811"},"\u4e8c\u53c9\u67e5\u627e\u6811"),(0,r.kt)("h3",{id:"\u4e8c\u53c9\u6811\u7684\u9012\u5f52"},"\u4e8c\u53c9\u6811\u7684\u9012\u5f52"),(0,r.kt)("h2",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,r.kt)("h4",{id:"hj18\u8bc6\u522b\u6709\u6548\u7684ip\u5730\u5740\u548c\u63a9\u7801\u5e76\u8fdb\u884c\u5206\u7c7b\u7edf\u8ba1"},"HJ18.\u8bc6\u522b\u6709\u6548\u7684IP\u5730\u5740\u548c\u63a9\u7801\u5e76\u8fdb\u884c\u5206\u7c7b\u7edf\u8ba1"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6240\u6709\u7684IP\u5730\u5740\u5212\u5206\u4e3a A,B,C,D,E\u4e94\u7c7b\uff1a\nA\u7c7b\u5730\u57401.0.0.0 ~ 126.255.255.255;\nB\u7c7b\u5730\u5740128.0.0.0 ~ 191.255.255.255;\nC\u7c7b\u5730\u5740192.0.0.0 ~ 223.255.255.255;\nD\u7c7b\u5730\u5740224.0.0.0 ~ 239.255.255.255\uff1b\nE\u7c7b\u5730\u5740240.0.0.0 ~ 255.255.255.255"),(0,r.kt)("p",{parentName:"blockquote"},"\u79c1\u7f51IP\u8303\u56f4\u662f\uff1a\n10.0.0.0\uff5e10.255.255.255\n172.16.0.0\uff5e172.31.255.255\n192.168.0.0\uff5e192.168.255.255"),(0,r.kt)("p",{parentName:"blockquote"},"\u5b50\u7f51\u63a9\u7801\u4e3a\u4e8c\u8fdb\u5236\u4e0b\u524d\u9762\u662f\u8fde\u7eed\u76841\uff0c\u7136\u540e\u5168\u662f0\u3002"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u8f93\u51fa\uff1a"),"\u7edf\u8ba1A\u3001B\u3001C\u3001D\u3001E\u3001\u9519\u8befIP\u5730\u5740\u6216\u9519\u8bef\u63a9\u7801\u3001\u79c1\u6709IP\u7684\u4e2a\u6570"),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"\u7c7b\u4f3c\u4e8e\u30100.",(0,r.kt)("em",{parentName:"li"},"."),".",(0,r.kt)("em",{parentName:"li"},"\u3011\u548c\u3010127."),".",(0,r.kt)("em",{parentName:"li"},"."),"\u3011\u7684IP\u5730\u5740\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u8f93\u5165\u7684\u4efb\u610f\u4e00\u7c7b\uff0c\u4e5f\u4e0d\u5c5e\u4e8e\u4e0d\u5408\u6cd5ip\u5730\u5740\uff0c\u8ba1\u6570\u65f6\u53ef\u4ee5\u5ffd\u7565 "),(0,r.kt)("li",{parentName:"ol"},"\u79c1\u6709IP\u5730\u5740\u548cA,B,C,D,E\u7c7b\u5730\u5740\u662f\u4e0d\u51b2\u7a81\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u540c\u65f6+1 "),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u5b50\u7f51\u63a9\u7801\u662f\u975e\u6cd5\u7684\uff0c\u5219\u4e0d\u518d\u9700\u8981\u67e5\u770bIP\u5730\u5740 "),(0,r.kt)("li",{parentName:"ol"},"\u5168\u96f6\u30100.0.0.0\u3011\u6216\u8005\u5168\u4e00\u3010255.255.255.255\u3011\u7684\u5b50\u7f51\u63a9\u7801\u4e5f\u662f\u975e\u6cd5\u7684 "))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u601d\u8def")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6309\u884c\u8bfb\u53d6\u8f93\u5165\uff0c\u6839\u636e\u5b57\u7b26\u2018~\u2019 \u5c06IP\u5730\u5740\u4e0e\u5b50\u7f51\u63a9\u7801\u5206\u5f00 "),(0,r.kt)("li",{parentName:"ol"},"\u67e5\u770b\u5b50\u7f51\u63a9\u7801\u662f\u5426\u5408\u6cd5\u3002",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5408\u6cd5\uff0c\u5219\u7ee7\u7eed\u68c0\u67e5IP\u5730\u5740 "),(0,r.kt)("li",{parentName:"ul"},"\u975e\u6cd5\uff0c\u5219\u76f8\u5e94\u7edf\u8ba1\u9879+1\uff0c\u7ee7\u7eed\u4e0b\u4e00\u884c\u7684\u8bfb\u5165 "))),(0,r.kt)("li",{parentName:"ol"},"\u67e5\u770bIP\u5730\u5740\u662f\u5426\u5408\u6cd5",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5408\u6cd5\uff0c\u67e5\u770bIP\u5730\u5740\u5c5e\u4e8e\u54ea\u4e00\u7c7b\uff0c\u662f\u5426\u662f\u79c1\u6709ip\u5730\u5740\uff1b\u76f8\u5e94\u7edf\u8ba1\u9879+1 "),(0,r.kt)("li",{parentName:"ul"},"\u975e\u6cd5\uff0c\u76f8\u5e94\u7edf\u8ba1\u9879+1 ")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5177\u4f53\u5b9e\u73b0")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5224\u65adIP\u5730\u5740\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\u5373\u4e3a\u975e\u6cd5\u5730\u5740",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6570\u5b57\u6bb5\u6570\u4e0d\u4e3a4 "),(0,r.kt)("li",{parentName:"ul"},"\u5b58\u5728\u7a7a\u6bb5\uff0c\u5373\u3010192..1.0\u3011\u8fd9\u79cd "),(0,r.kt)("li",{parentName:"ul"},"\u67d0\u4e2a\u6bb5\u7684\u6570\u5b57\u5927\u4e8e255 "))),(0,r.kt)("li",{parentName:"ol"},"\u5224\u65ad\u5b50\u7f51\u63a9\u7801\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u4e4b\u4e00\u5373\u4e3a\u975e\u6cd5\u63a9\u7801",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u662f\u4e00\u4e2a\u5408\u683c\u7684IP\u5730\u5740 "),(0,r.kt)("li",{parentName:"ul"},"\u5728\u4e8c\u8fdb\u5236\u4e0b\uff0c\u4e0d\u6ee1\u8db3\u524d\u9762\u8fde\u7eed\u662f1\uff0c\u7136\u540e\u5168\u662f0 "),(0,r.kt)("li",{parentName:"ul"},"\u5728\u4e8c\u8fdb\u5236\u4e0b\uff0c\u5168\u4e3a0\u6216\u5168\u4e3a1 "))),(0,r.kt)("li",{parentName:"ol"},"\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u63a9\u7801\u5730\u5740\u662f\u4e0d\u662f\u6ee1\u8db3\u524d\u9762\u8fde\u7eed\u662f1\uff0c\u7136\u540e\u5168\u662f0\uff1f",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06\u63a9\u7801\u5730\u5740\u8f6c\u6362\u4e3a32\u4f4d\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6570\u4e3ab\u3002\u5982\u679c\u6b64\u65f6b\u4e3a0\uff0c\u5219\u4e3a\u975e\u6cd5\u63a9\u7801 "),(0,r.kt)("li",{parentName:"ul"},"\u5c06b\u6309\u4f4d\u53d6\u53cd\u540e+1\u3002\u5982\u679c\u6b64\u65f6b\u4e3a1\uff0c\u5219b\u539f\u6765\u662f\u4e8c\u8fdb\u5236\u51681\uff0c\u975e\u6cd5\u63a9\u7801 "),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679cb\u548cb-1\u505a\u6309\u4f4d\u4e0e\u8fd0\u7b97\u540e\u4e3a0\uff0c\u5219\u8bf4\u660e\u662f\u5408\u6cd5\u63a9\u7801\uff0c\u5426\u5219\u4e3a\u975e\u6cd5\u63a9\u7801 ")))),(0,r.kt)("h4",{id:""}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n> File Name: HJ18.\u8bc6\u522b\u6709\u6548\u7684IP\u5730\u5740\u548c\u63a9\u7801\u5e76\u8fdb\u884c\u5206\u7c7b\u7edf\u8ba1.cpp\n> Author: yanzw\n> Mail: yanzw@pm.me\n> Created Time: 2021\u5e7409\u670818\u65e5 \u661f\u671f\u516d 16\u65f642\u520637\u79d2\n************************************************************************/\n\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include<sstream>\nusing namespace std;\n\nbool is_ip(string ip) {\n    int j = 0;\n    istringstream iss(ip);\n    string seg;\n    while (getline(iss, seg, \'.\')) {\n        if (++i > 4 || seg.empty() || stoi(seg) < 0 || stoi(seg) > 255) {\n            return false;\n        }\n    }\n    return j == 4;\n}\n\nbool is_private(string ip) {\n    istringstream iss(ip);\n    string seg;\n    vector<int> arr;\n    while(getline(iss, seg, \'.\'))  arr.push_back(stoi(seg));\n    if (arr[0] == 10) return true;\n    if (arr[0] == 172 && arr[1] >= 16 && arr[1] <= 31) return true;\n    if(arr[0] == 192 && arr[1] == 168) return true;\n    return false;\n}\n\n\nbool is_mask(string ip) {\n    istringstream iss(ip);\n    string seg;\n    unsigned int b = 0;\n    while (getline(iss, seg, \'.\')) b = (b << 8) + stoi(seg);\n    if (b == 0) return false;\n    b = ~b + 1;\n    if (b == 1) return false;\n    if ((b & (b - 1)) == 0) return true;\n    return false;\n}\n\nint main() {\n    string input;\n    int a = 0, b = 0, c = 0, d = 0, e = 0, err = 0, p = 0;\n\n    #ifdef _D\n    #endif\n\n    while (cin >> input) {\n        istringstream iss(input);\n        string add;\n        vector<string> arr;\n        while (getline(iss, add, \'~\')) arr.push_back(add);\n        if (!is_ip(arr[0])) err++;\n        int first = stoi(arr[0].substr(0,arr[0].find_first_of(\'.\')));\n        if (first == 127) continue;\n        if (!is_ip(arr[1]) || !is_mask(arr[1])) err++;\n        else {\n            if(is_private(arr[0])) p++;\n            if(first > 0 && first < 127) a++;\n            else if(first > 127 && first <192) b++;\n            else if(first > 191 && first <224) c++;\n            else if(first > 223 && first <240) d++;\n            else if(first > 239 && first <256) e++;\n        }\n        #ifdef _D\n        cout << input << " ---- : " <<  a << " " << b << " " << c << " " << d << " " << e << " " << err << " " << p << endl;\n        cout << endl;\n        #endif\n    }\n    cout << a << " " << b << " " << c << " " << d << " " << e << " " << err << " " << p << endl;\n    return 0;\n}\n\n')),(0,r.kt)("h4",{id:"hj26\u5b57\u7b26\u4e32\u6392\u5e8f"},"HJ26.\u5b57\u7b26\u4e32\u6392\u5e8f"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6309\u5982\u4e0b\u89c4\u5219\u6392\u5e8f\u3002"),(0,r.kt)("p",{parentName:"blockquote"}," \u89c4\u5219 1 \uff1a\u82f1\u6587\u5b57\u6bcd\u4ece A \u5230 Z \u6392\u5217\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002"),(0,r.kt)("p",{parentName:"blockquote"}," \u5982\uff0c\u8f93\u5165\uff1a Type \u8f93\u51fa\uff1a epTy"),(0,r.kt)("p",{parentName:"blockquote"}," \u89c4\u5219 2 \uff1a\u540c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u540c\u65f6\u5b58\u5728\u65f6\uff0c\u6309\u7167\u8f93\u5165\u987a\u5e8f\u6392\u5217\u3002"),(0,r.kt)("p",{parentName:"blockquote"}," \u5982\uff0c\u8f93\u5165\uff1a BabA \u8f93\u51fa\uff1a aABb"),(0,r.kt)("p",{parentName:"blockquote"}," \u89c4\u5219 3 \uff1a\u975e\u82f1\u6587\u5b57\u6bcd\u7684\u5176\u5b83\u5b57\u7b26\u4fdd\u6301\u539f\u6765\u7684\u4f4d\u7f6e\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"   \u5982\uff0c\u8f93\u5165\uff1a By?e \u8f93\u51fa\uff1a Be?y ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"string string_sort(string str) {\n    int len = str.size();\n    vector<char> arr;\n    for (int j = 0; j < 26; j++) {\n        for (int i = 0; i < len; i++) {\n            if ((str[i] - 'a' == j) ||  (str[i] - 'A' == j)) {\n                arr.push_back(str[i]);\n            }\n        }\n    }\n    for (int i = 0, k = 0; (i < len) && (k < arr.size()); i++) {\n        if((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')) {\n            str[i] = arr[k++];\n        }\n    }\n    return str;\n}\n\nint main() {\n\n    string str;\n    while (getline(cin, str)) {\n        cout << string_sort(str) << endl;\n    }\n    return 0;\n}\n\n")),(0,r.kt)("h4",{id:"hj32\u6700\u957f\u56de\u6587\u5b57\u7b26\u4e32"},"HJ32.\u6700\u957f\u56de\u6587\u5b57\u7b26\u4e32"),(0,r.kt)("p",null,"\u4e2d\u5fc3\u6269\u5c55\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int getLen (string s, int l, int r) {\n    while(l >= 0 && r < s.size() && s[l] == s[r]) {\n        l--;\n        r++;\n    }\n    return r - l - 1;\n}\n\nint main () {\n    string s;\n    while (cin >> s) {\n        int len = s.size();\n        if (len == 0) {\n            cout << 0 << endl;\n            continue;\n        }\n        if (len == 1) {\n            cout << 1 << endl;\n            continue;\n        }\n        int mS = 0;\n        for (int i = 0; i < len - 1; ++i) {\n            int m1 = getLen(s, i, i);\n            int m2 = getLen(s, i, i + 1);\n            mS = max(max(m1, m2), mS);\n        }\n        cout << mS << endl;\n\n    }\n    return 0;\n}\n\n")),(0,r.kt)("h4",{id:"hj33\u6574\u6570\u4e0eip\u5730\u5740\u95f4\u7684\u8f6c\u6362"},"HJ33.\u6574\u6570\u4e0eIP\u5730\u5740\u95f4\u7684\u8f6c\u6362"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  \u539f\u7406\uff1aip\u5730\u5740\u7684\u6bcf\u6bb5\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a0-255\u7684\u6574\u6570\uff0c\u628a\u6bcf\u6bb5\u62c6\u5206\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7ec4\u5408\u8d77\u6765\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u8f6c\u53d8\u6210\n\u4e00\u4e2a\u957f\u6574\u6570\u3002\n\u4e3e\u4f8b\uff1a\u4e00\u4e2aip\u5730\u5740\u4e3a10.0.3.193\n\u6bcf\u6bb5\u6570\u5b57       \u76f8\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\n10          00001010\n0          00000000\n3          00000011\n193         11000001 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u7ec4\u5408\u8d77\u6765\u5373\u4e3a\uff1a00001010 00000000 00000011 11000001,\u8f6c\u6362\u4e3a10\u8fdb\u5236\u6570\u5c31\u662f\uff1a167773121\uff0c\u5373\u8be5IP\u5730\u5740\u8f6c\u6362\u540e\u7684\u6570\u5b57\u5c31\u662f\u5b83\u4e86\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u672c\u9898\u542b\u6709\u591a\u7ec4\u8f93\u5165\u7528\u4f8b\uff0c\u6bcf\u7ec4\u7528\u4f8b\u9700\u8981\u4f60\u5c06\u4e00\u4e2aip\u5730\u5740\u8f6c\u6362\u4e3a\u6574\u6570\u3001\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3aip\u5730\u5740\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <string>\n#include <vector>\n#include <stack>\nusing namespace std;\n\nvoid test33(){\n    string ip;\n    long num;\n    while (std::cin >> ip >> num) {\n        vector<int> vec;\n        string tmp;\n        for (long i = 0; i < ip.length(); i++) {\n            if (ip[i] != \'.\') {\n                tmp += ip[i];\n            }else{\n                vec.push_back(atoi(tmp.c_str()));\n                tmp.clear();\n            }\n            if (i == (ip.length()-1)){\n                vec.push_back(atoi(tmp.c_str()));\n                tmp.clear();\n            }\n        }\n        long ipNum = 0;\n        for (vector<int>::iterator it = vec.begin(); it != vec.end(); it++) {\n            //std::cout << *it << " ";\n            ipNum = ipNum * 256 + *it;\n        }\n        std::cout << ipNum << "\\n";\n        \n        stack<int> st;\n        while (num > 0) {\n            st.push(num % 256);\n            num /= 256;\n        }\n        while (st.size() > 0) {\n            if (st.size() == 1) {\n                std::cout << st.top() << "\\n" ;\n            }else\n                std::cout << st.top() << ".";\n            st.pop();\n        }\n        \n    }\n}\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    test33();\n    \n}\n')),(0,r.kt)("h4",{id:"hj42\u5b66\u82f1\u8bed"},"HJ42.\u5b66\u82f1\u8bed"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  Jessi\u521d\u5b66\u82f1\u8bed\uff0c\u4e3a\u4e86\u5feb\u901f\u8bfb\u51fa\u4e00\u4e32\u6570\u5b57\uff0c\u7f16\u5199\u7a0b\u5e8f\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u82f1\u6587\uff1a "),(0,r.kt)("p",{parentName:"blockquote"},"  \u598222\uff1atwenty two\uff0c123\uff1aone hundred and twenty three\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u8bf4\u660e\uff1a "),(0,r.kt)("p",{parentName:"blockquote"},"  \u6570\u5b57\u4e3a\u6b63\u6574\u6570\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7\u4e5d\u4f4d\uff0c\u4e0d\u8003\u8651\u5c0f\u6570\uff0c\u8f6c\u5316\u7ed3\u679c\u4e3a\u82f1\u6587\u5c0f\u5199\uff1b "),(0,r.kt)("p",{parentName:"blockquote"},"  \u8f93\u51fa\u683c\u5f0f\u4e3atwenty two\uff1b "),(0,r.kt)("p",{parentName:"blockquote"},"  \u975e\u6cd5\u6570\u636e\u8bf7\u8fd4\u56de\u201cerror\u201d\uff1b "),(0,r.kt)("p",{parentName:"blockquote"},"  \u5173\u952e\u5b57\u63d0\u793a\uff1aand\uff0cbillion\uff0cmillion\uff0cthousand\uff0chundred\u3002 ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n#include <string>\n#include <vector>\n\n// \u4e0d\u8d85\u8fc79\u4f4d\uff0c\u6700\u591a\u7528\u5230million\n\n// \u5c0f\u4e8e20\u7684\nvector<string> wordsMap = { "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };\nvector<string> wordsMap2 = { "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety" };\n\nstring GetWord(string num) {\n    string ret;\n    int n = stoi(num);\n    if (n < 20) {\n        return wordsMap[n - 1];\n    } // \u5168\u662f0\u7684\u5916\u9762\u5df2\u7ecf\u5904\u7406\u4e86\n    \n    // \u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cnum\u5fc5\u5b9a\u662f\u4e09\u4f4d\u6570\uff01\uff01\uff01\n    if (num[0] != \'0\') {\n        int idx = stoi(num.substr(0, 1)) - 1;\n        ret += wordsMap[idx] + " hundred";\n        \n        // \u2605\u6ce8\u610f\uff1a\u5168\u662f0\u7684\u5904\u7406\u4e86\uff0c\u4f46\u201cx00\u201d\u8fd8\u6ca1\u6709\u5904\u7406\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n        // \u2605\u6ce8\u610f\uff1a\u4e0d\u80fd\u5728\u5916\u9762\u5224\u65ad\u662f\u5426\u52a0and\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4f4d\u4e0d\u662f0\u624d\u6709\u53ef\u80fd\u9700\u8981\u52a0and\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n        if (num[1] == 0 && num[2] == 0) {\n            return ret;\n        } else {\n            ret += " and ";  // \u4e0d\u80fd\u5728\u4e0a\u9762\u5c31\u52a0\uff0c\u5e94\u8be5\u5224\u65ad\u540e\u4e24\u4f4d\u4e0d\u5168\u4e3a0\u624d\u52a0\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n        }\n    }\n    \n    // \u622a\u53d6num\u7684\u540e\u4e24\u4f4d\n    num = num.substr(1);\n    n = stoi(num);\n    // \u6b64\u65f6x00\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\uff01\uff01\n    if (n < 20) {\n        ret += wordsMap[n - 1];\n    } else {\n        int idx1 = stoi(num.substr(0, 1)) - 2;\n        ret += wordsMap2[idx1];  // \u6ce8\u610f\uff1a\u7a7a\u683c\u4e0d\u80fd\u52a0\u5728\u8fd9\uff01\uff01\uff08\u6709\u4e2a\u4f4d\u624d\u52a0\uff09\n        // \u6709\u4e2a\u4f4d\u518d\u53bb\u5904\u7406\n        if (num[1] != \'0\') {\n            int idx2 = stoi(num.substr(1, 1)) - 1;\n            ret +=  " " + wordsMap[idx2];\n        }\n    }\n    return ret;\n}\n\nstring NumToWords(const long long& num) {\n    string numStr = to_string(num);\n    vector<string> nums;\n    string ret;\n    int len = numStr.length();\n    // \u6ce8\u610f\uff1a\u80fd\u6574\u9664\u7684\u65f6\u5019\u522b\u6574\u4e2a\u7a7a\u4e32\u8fdb\u53bb\uff01\uff01\uff01\n    if (len % 3 != 0) {\n        string firstStr = numStr.substr(0, len % 3);\n        // \u5982\u679c\u662f\u4e24\u4f4d\u6570\uff0c\u524d\u9762\u8865\u4e2a0\uff0c\u548c\u540e\u9762\u7684\u7edf\u4e00\u8d77\u6765\uff01\uff01\uff08\u4e00\u4f4d\u6570\u4e0d\u7528\u8865\uff0c\u76f4\u63a5\u6620\u5c04\uff09\n        if (firstStr.length() == 2) {\n            firstStr = \'0\' + firstStr;\n        }\n        nums.push_back(firstStr);\n    }\n    // \u6309\u3010\u9017\u53f7\u3011\u5206\u9694\n    // \u4ece\u7b2c\u4e00\u4e2a\u9017\u53f7\u540e\u5f00\u59cb\uff0c\u6ce8\u610f\u4e0b\u6807\u548c\u4f4d\u6570\u76f8\u5dee1 \uff01\uff01\n    for (int i = len % 3; i < len; i += 3) {\n        string curStr = numStr.substr(i, 3);\n        nums.push_back(curStr);\n    }\n    for (int i = 0; i < nums.size(); ++i) {\n        int idx = nums.size() - 1 -i;\n        if (nums[idx] == "0" || nums[idx] == "000") {\n            continue;\n        }\n        if (i == 0) {\n            ret += GetWord(nums[idx]);\n        } else if (i == 1) {\n            ret = GetWord(nums[idx]) + " thousand " + ret;\n        } else if (i == 2) {\n            ret = GetWord(nums[idx]) + " million " + ret;\n        }\n    }\n    return ret;\n}\n\nint main() {\n    long long num = 0;\n    while (cin >> num) {\n        string str;\n        str = NumToWords(num);\n        cout << str << endl;\n    }\n    return 0;\n}\n')),(0,r.kt)("h2",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,r.kt)("h2",{id:"\u67e5\u627e"},"\u67e5\u627e"),(0,r.kt)("h2",{id:"\u66b4\u529b\u679a\u4e3e"},"\u66b4\u529b\u679a\u4e3e"),(0,r.kt)("h2",{id:"\u641c\u7d22"},"\u641c\u7d22"),(0,r.kt)("h4",{id:"hj44sudoku"},"HJ44.Sudoku"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u95ee\u9898\u63cf\u8ff0\uff1a\u6570\u72ec\uff08Sudoku\uff09\u662f\u4e00\u6b3e\u5927\u4f17\u559c\u7231\u7684\u6570\u5b57\u903b\u8f91\u6e38\u620f\u3002\u73a9\u5bb6\u9700\u8981\u6839\u636e9X9\u76d8\u9762\u4e0a\u7684\u5df2\u77e5\u6570\u5b57\uff0c\u63a8\u7b97\u51fa\u6240\u6709\u5269\u4f59\u7a7a\u683c\u7684\u6570\u5b57\uff0c\u5e76\u4e14\u6ee1\u8db3\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u3001\u6bcf\u4e00\u4e2a3X3\u7c97\u7ebf\u5bab\u5185\u7684\u6570\u5b57\u5747\u542b1-9\uff0c\u5e76\u4e14\u4e0d\u91cd\u590d\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u8f93\u5165\u63cf\u8ff0\uff1a"),(0,r.kt)("p",{parentName:"blockquote"},"\u5305\u542b\u5df2\u77e5\u6570\u5b57\u76849X9\u76d8\u9762\u6570\u7ec4","[\u7a7a\u7f3a\u4f4d\u4ee5\u6570\u5b570\u8868\u793a]"),(0,r.kt)("p",{parentName:"blockquote"},"\u8f93\u51fa\u63cf\u8ff0\uff1a"),(0,r.kt)("p",{parentName:"blockquote"},"\u5b8c\u6574\u76849X9\u76d8\u9762\u6570\u7ec4")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include<iostream>\n#include<set>\nusing namespace std;\nint flag=0;//\u662f\u5426\u5230\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\nvoid func(int *a,int i=0,int j=0)\n{//\u4e09\u4e2a\u53c2\u6570\u4e3a \u6570\u7ec4\u3001\u5f53\u524d\u4f4d\u7f6e\u5750\u6807\n    if(i>=9||j>=9)//\u6574\u4e2a\u6570\u7ec4\u904d\u5386\u5b8c\uff0c\u5c31\u4ee3\u8868\u6210\u529f\u4e86\n    {             //\u4f46\u662f\u4e4b\u540e\u5faa\u73af\u8fd8\u5728\u7ee7\u7eed\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\n        flag=1;\n        return;\n    }\n    if(*(a+9*i+j)==0)//\u5982\u679c\u5f53\u524d\u6570\u4e3a\u96f6\n    {\n        set<int> s;//\u50a8\u5b58\u5f53\u524d\u6570\u4e0d\u80fd\u4f7f\u7528\u7684\u6570\n        for(int m=i/3*3;m<i/3*3+3;m++)//\u627e\u51fa3*3\u65b9\u683c\u4e2d\u51fa\u73b0\u7684\u6570\n        {\n            for(int n=j/3*3;n<j/3*3+3;n++)\n            {\n                s.insert(*(a+9*m+n));\n            }\n        }\n        for(int m=0,n=0;m<9,n<9;m++,n++)//\u627e\u51fa\u884c\u5217\u4e2d\u51fa\u73b0\u7684\u6570\n        {\n            s.insert(*(a+9*i+m));\n            s.insert(*(a+9*n+j));\n        }\n        for(int m=1;m<10;m++)//\u4ece1\u52309\uff0c\u4f9d\u6b21\u8bd5\u7740\u653e\u8fdb\u6570\u7ec4\u4e2d\n        {   //\u5982\u679c\u6570\u7ec4\u6ca1\u6709\u904d\u5386\u5b8c \u4e14\u6ca1\u6709\u627e\u5230m\uff0c\u8bf4\u660em\u53ef\u7528\n            if(flag==0&&s.find(m)==s.end())\n            {\n                *(a+9*i+j)=m;//\u8d4b\u503c\n                func(a,i+j/8,(j+1)%9);//\u9012\u5f52\u5230\u4e0b\u4e00\u4e2a\u70b9\n            }  \n        }\n        if(flag==0)//\u5982\u679c\u8fd0\u884c\u5230\u8fd9\u91cc\u8bf4\u660e\u524d\u9762\u8bd5\u9519\u4e86\u6216\u8005\u904d\u5386\u5b8c\u4e86\u6574\u4e2a\u6570\u7ec4\n        {          //\u7528flag\u6392\u9664\u540e\u4e00\u79cd\u53ef\u80fd\uff0c\u8bd5\u9519\u4e86\u5219\u4f1a\u56de\u6eaf\n            *(a+9*i+j)=0;//j\u5c06\u5f53\u524d\u503c\u91cd\u65b0\u8d4b\u503c\u4e3a\u96f6\n            return;\n        }\n    }\n    else func(a,i+j/8,(j+1)%9);//\u5982\u679c\u5f53\u524d\u70b9\u4e0d\u4e3a\u96f6\uff0c\u76f4\u63a5\u5230\u4e0b\u4e00\u4e2a\u70b9\n}\nint main()\n{\n    int a[9][9];\n    for(int i=0;i<9;i++)\n    {\n        for(int j=0;j<9;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n    func((int*)a,0,0);\n    for(int i=0;i<9;i++)\n    {\n        for(int j=0;j<8;j++)\n        {\n            cout<<a[i][j]<<' ';\n        }\n        cout<<a[i][8]<<endl;\n    }\n}\n")),(0,r.kt)("h2",{id:"\u5206\u6cbb"},"\u5206\u6cbb"),(0,r.kt)("h2",{id:"\u8d2a\u5fc3"},"\u8d2a\u5fc3"),(0,r.kt)("h2",{id:"\u9012\u5f52\u548c\u52a8\u6001\u89c4\u5212"},"\u9012\u5f52\u548c\u52a8\u6001\u89c4\u5212"),(0,r.kt)("h3",{id:"\u8df3\u53f0\u9636"},"\u8df3\u53f0\u9636"),(0,r.kt)("p",null,"\u4e00\u53ea\u9752\u86d9\u4e00\u6b21\u53ef\u4ee5\u8df3\u4e0a1\u7ea7\u53f0\u9636\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e0a2\u7ea7\u2026\u2026\u5b83\u4e5f\u53ef\u4ee5\u8df3\u4e0an\u7ea7\u3002\u6c42\u8be5\u9752\u86d9\u8df3\u4e0a\u4e00\u4e2an\u7ea7\u7684\u53f0\u9636\u603b\u5171\u6709\u591a\u5c11\u79cd\u8df3\u6cd5\u3002"),(0,r.kt)("p",null,"\u56e0\u4e3an\u7ea7\u53f0\u9636\uff0c\u7b2c\u4e00\u6b65\u6709n\u79cd\u8df3\u6cd5\uff1a\u8df31\u7ea7\u3001\u8df32\u7ea7\u3001\u5230\u8df3n\u7ea7\n\u8df31\u7ea7\uff0c\u5269\u4e0bn-1\u7ea7\uff0c\u5219\u5269\u4e0b\u8df3\u6cd5\u662ff(n-1)\n\u8df32\u7ea7\uff0c\u5269\u4e0bn-2\u7ea7\uff0c\u5219\u5269\u4e0b\u8df3\u6cd5\u662ff(n-2)\n\u6240\u4ee5f(n)=f(n-1)+f(n-2)+...+f(1)\n\u56e0\u4e3af(n-1)=f(n-2)+f(n-3)+...+f(1)"),(0,r.kt)("p",null,"\u6240\u4ee5f(n)=2*f(n-1)"),(0,r.kt)("h2",{id:"\u4f4d\u8fd0\u7b97"},"\u4f4d\u8fd0\u7b97"),(0,r.kt)("h2",{id:"\u56fe\u8bba"},"\u56fe\u8bba"),(0,r.kt)("h4",{id:"hj28\u7d20\u6570\u4f34\u4fa3"},"HJ28.\u7d20\u6570\u4f34\u4fa3"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"  \u82e5\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u548c\u4e3a\u7d20\u6570\uff0c\u5219\u8fd9\u4e24\u4e2a\u6b63\u6574\u6570\u79f0\u4e4b\u4e3a\u201c\u7d20\u6570\u4f34\u4fa3\u201d\uff0c\u59822\u548c5\u30016\u548c13\uff0c\u5b83\u4eec\u80fd\u5e94\u7528\u4e8e\u901a\u4fe1\u52a0\u5bc6\u3002\u73b0\u5728\u5bc6\u7801\u5b66\u4f1a\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4ece\u5df2\u6709\u7684N\uff08N\u4e3a\u5076\u6570\uff09\u4e2a\u6b63\u6574\u6570\u4e2d\u6311\u9009\u51fa\u82e5\u5e72\u5bf9\u7ec4\u6210\u201c\u7d20\u6570\u4f34\u4fa3\u201d\uff0c\u6311\u9009\u65b9\u6848\u591a\u79cd\u591a\u6837\uff0c\u4f8b\u5982\u67094\u4e2a\u6b63\u6574\u6570\uff1a2\uff0c5\uff0c6\uff0c13\uff0c\u5982\u679c\u5c065\u548c6\u5206\u4e3a\u4e00\u7ec4\u4e2d\u53ea\u80fd\u5f97\u5230\u4e00\u7ec4\u201c\u7d20\u6570\u4f34\u4fa3\u201d\uff0c\u800c\u5c062\u548c5\u30016\u548c13\u7f16\u7ec4\u5c06\u5f97\u5230\u4e24\u7ec4\u201c\u7d20\u6570\u4f34\u4fa3\u201d\uff0c\u80fd\u7ec4\u6210\u201c\u7d20\u6570\u4f34\u4fa3\u201d\u6700\u591a\u7684\u65b9\u6848\u79f0\u4e3a\u201c\u6700\u4f73\u65b9\u6848\u201d\uff0c\u5f53\u7136\u5bc6\u7801\u5b66\u4f1a\u5e0c\u671b\u4f60\u5bfb\u627e\u51fa\u201c\u6700\u4f73\u65b9\u6848\u201d\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u8f93\u5165: "),(0,r.kt)("p",{parentName:"blockquote"},"  \u6709\u4e00\u4e2a\u6b63\u5076\u6570N\uff08N\u2264100\uff09\uff0c\u8868\u793a\u5f85\u6311\u9009\u7684\u81ea\u7136\u6570\u7684\u4e2a\u6570\u3002\u540e\u9762\u7ed9\u51fa\u5177\u4f53\u7684\u6570\u5b57\uff0c\u8303\u56f4\u4e3a","[2,30000]","\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u8f93\u51fa: "),(0,r.kt)("p",{parentName:"blockquote"},"  \u8f93\u51fa\u4e00\u4e2a\u6574\u6570K\uff0c\u8868\u793a\u4f60\u6c42\u5f97\u7684\u201c\u6700\u4f73\u65b9\u6848\u201d\u7ec4\u6210\u201c\u7d20\u6570\u4f34\u4fa3\u201d\u7684\u5bf9\u6570\u3002 ")),(0,r.kt)("p",null,"  100\u4e2a\u6570\u770b\u6210100\u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6570\u52a0\u8d77\u6765\u7684\u548c\u662f\u7d20\u6570\uff0c\u7ed9\u8fd9\u4e24\u4e2a\u6570\u4e2d\u95f4\u8fde\u4e00\u6761\u8fb9\u3002 "),(0,r.kt)("p",null,"  \u4e4b\u540e\uff0c\u6211\u4eec\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u8fb9\uff0c\u8981\u6c42\u8fd9\u4e9b\u8fb9\u4e0d\u5171\u4eab\u7aef\u70b9\u3002   \u2014\u2014\u4e00\u822c\u65e0\u5411\u56fe\u7684\u6700\u5927\u5339\u914d\u3002 "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://blog.csdn.net/yihuikang/article/details/10460997"},"\u5e26\u82b1\u6811\u5f00\u82b1\u7b97\u6cd5")),(0,r.kt)("p",null,"\u6bcf\u4e2a\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f","[2,30000]"," \u7d20\u6570\uff0c\u9664\u4e862\u662f\u5076\u6570\uff0c\u5176\u4ed6\u662f\u5947\u6570\u3002  ",(0,r.kt)("strong",{parentName:"p"},"2\u4e2a\u6570\u7684\u548c\u662f\u5947\u6570\uff0c\u5947\u6570+\u5076\u6570")," \u3002"),(0,r.kt)("p",null,"\u628a\u8fd9\u4e9b\u6570\u5206\u62102\u5806\u2014\u2014\u5947\u6570\u548c\u5076\u6570\uff0c\u7136\u540e\u5728\u4ed6\u4eec\u4e2d\u95f4\uff0c\u548c\u662f\u7d20\u6570\u7684\uff0c\u8fde\u4e0a\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u505a\u5339\u914d\u3002 "),(0,r.kt)("p",null,"\u5f97\u5230\u7684\u56fe\u4e00\u5b9a\u662f\u4e8c\u5206\u56fe\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4e8c\u5206\u56fe\u5c31\u662f\uff0c\u4f60\u53ef\u4ee5\u628a\u56fe\u4e0a\u7684\u70b9\u5206\u62102\u5806\uff0c\u6bcf\u5806\u4e4b\u5185\u7684\u70b9\u4e0d\u4f1a\u6709\u8fb9\uff0c2\u5806\u4e4b\u95f4\uff0c\u624d\u53ef\u80fd\u8fde\u8fb9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u6761\u8fb9\uff0c\u5fc5\u5b9a\u8fde2\u4e2a\u6765\u81ea\u4e0d\u540c\u5806\u7684\u70b9\u3002 ")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/96229700"},"\u5308\u7259\u5229\u7b97\u6cd5")),(0,r.kt)("p",null,"  \u5916\u5c42\uff0c\u66b4\u529b\u8003\u8651\u5de6\u8fb9\u6bcf\u4e2a\u70b9 "),(0,r.kt)("p",null,"  \u5bf9\u679a\u4e3e\u7684\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\uff0c\u8981\u627e\u53f3\u8fb9\u4e00\u4e2a\u70b9\u6765\u5339\u914d\u3002 "),(0,r.kt)("p",null,"  \u90a3\u5c31\u662f\u5bf9\u5de6\u8fb9\u7684\u70b9\uff0c\u6211\u4eec\u770b\u4ed6\u8fde\u51fa\u53bb\u7684\u8fb9\uff0c\u6216\u8005\u8bf4\uff0c\u80fd\u8fde\u5230\u7684\u53f3\u8fb9\u7684\u70b9 "),(0,r.kt)("p",null,"  \u67092\u79cd\u60c5\u51b5\uff1a "),(0,r.kt)("p",null,"  1\u3001\u53f3\u8fb9\u7684\u70b9\u6ca1\u4eba\u5339\u914d\u2014\u2014\u6211\u76f4\u63a5\u8d2a\u5fc3\u5339\u914d\u4e0a\u53bb "),(0,r.kt)("p",null,"  2\u3001\u53f3\u8fb9\u7684\u70b9\u6709\u4eba\u5339\u914d\u2014\u2014\u8003\u8651\u628a\u76ee\u524d\u4e0e\u8fd9\u4e2a\u53f3\u8fb9\u7684\u70b9 x \u5339\u914d\u7684\u5de6\u8fb9\u7684\u70b9  pre","[x]","\uff0c\u91cd\u65b0\u5339\u914d\u4e00\u4e2a\u5176\u4ed6\u7684\u70b9\uff0c\u5982\u679c\u6210\u529f\u4e86\uff0c\u90a3pre","[x]","\u539f\u6765\u5339\u914d\u7684\u70b9x\u5c31\u91ca\u653e\u5f00\u4e86\uff0c\u6211\u53ef\u4ee5\u76f4\u63a5\u5360\u9886\u4e0a\u53bb\u3002 "),(0,r.kt)("p",null,"  \u6700\u540e\u7edf\u8ba1\u5339\u914d\u6210\u529f\u591a\u5c11\u4e2a\u5de6\u8fb9\u7684\u70b9\u5c31\u884c\u4e86\u3002 "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <math.h>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nvector<int> G[105];\nbool flag[105];\nint pre[105];\n\nbool dfs(int k){\n    int x;\n    for(int i=0;i<G[k].size();i++){\n        x=G[k][i];\n        if (flag[x]) continue;\n        flag[x]=true;\n        if((pre[x]==0)||dfs(pre[x])){\n            pre[x]=k;\n            return true;\n        }\n    }\n    return false;\n}\n\nbool isprime[80000];\nint nums[105];\n\nint main(){\n    memset(isprime,1,sizeof(isprime));\n    isprime[0]=isprime[1]=false;\n    for(int i=4;i<80000;i+=2)isprime[i]=false;\n    for(int i=3;i*i<80000;i+=2)\n        if(isprime[i]){\n            for(int j=i*i;j<80000;j+=2*i) isprime[j]=false;\n        }\n    int n;\n    while(~scanf("%d",&n)){\n        for(int i=1;i<=n;i++){\n            scanf("%d",&nums[i]);\n        }\n        for(int i=1;i<=n;++i){\n            for(int j=i+1;j<=n;++j){\n                if(isprime[nums[i]+nums[j]]){\n                    (nums[i]&1)?G[i].push_back(j):G[j].push_back(i);\n                }\n            }\n        }\n\n        memset(pre,0,sizeof(pre));\n        int ans=0;\n        for(int i=1;i<=n;i++){\n            memset(flag,false,sizeof(flag));\n            if (dfs(i)) ans++;\n        }\n        printf("%d\\n",ans);\n        \n        for(int i=1;i<=n;++i){\n            G[i].clear();\n        }\n    }\n    return 0;\n}\n')),(0,r.kt)("h2",{id:"\u6570\u5b66"},"\u6570\u5b66"),(0,r.kt)("h4",{id:"hj50\u56db\u5219\u8fd0\u7b97"},"HJ50.\u56db\u5219\u8fd0\u7b97"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u8f93\u5165\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff09\uff0c\u6c42\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002 "),(0,r.kt)("p",{parentName:"blockquote"},"  \u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u7684\u6709\u6548\u5b57\u7b26\u5305\u62ec","[\u20180\u2019-\u20189\u2019]",",\u2018+\u2019,\u2018-\u2019, \u2018*\u2019,\u2018/\u2019 ,\u2018(\u2019\uff0c \u2018)\u2019,\u2018","[\u2019, \u2018]","\u2019,\u2018{\u2019 ,\u2018}\u2019\u3002\u4e14\u8868\u8fbe\u5f0f\u4e00\u5b9a\u5408\u6cd5\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u95ee\u9898"),"\uff1a\u5982\u4f55\u5224\u65ad'+'\u6216'-'\u662f\u52a0\u51cf\u8fd8\u662f\u6b63\u8d1f\uff1f\n",(0,r.kt)("strong",{parentName:"p"},"\u89e3\u7b54"),"\uff1a\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5224\u65ad\uff1a\u6570\u5b57\u548c\u8fd0\u7b97\u7b26\u662f\u4ea4\u66ff\u51fa\u73b0\u7684\uff08\u62ec\u53f7\u7684\u51fa\u73b0\u4e0d\u4f1a\u5f71\u54cd\u8fd9\u79cd\u4ea4\u66ff\u5173\u7cfb\uff09\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u601d\u8def")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7528\u4e24\u4e2a\u6808\u5206\u522b\u538b\u6570\u5b57\u548c\u8fd0\u7b97\u7b26\uff1b "),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u5f53\u524d\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7('*/')\u9ad8\u4e8e\u6808\u9876\u8fd0\u7b97\u7b26('+-')\u4f18\u5148\u7ea7\uff0c\u5219\u5c06\u8fd0\u7b97\u7b26\u5165\u6808\uff1b\u53cd\u4e4b\uff0c\u4ece\u6570\u5b57\u6808\u4e2d\u5f39\u51fa\u4e24\u4e2a\u6570\uff0c\u4ece\u8fd0\u7b97\u7b26\u6808\u4e2d\u5f39\u51fa\u6808\u9876\u8fd0\u7b97\u7b26\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u6570\u5b57\u6808\u538b\u5165\u8fd0\u7b97\u7ed3\u679c\uff0c\u7b26\u53f7\u6808\u538b\u5165\u5f53\u524d\u8fd0\u7b97\u7b26\u3002\u91cd\u590d\u8be5\u64cd\u4f5c\u76f4\u5230\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002 "),(0,r.kt)("li",{parentName:"ol"},"\u51fa\u73b0\u5de6\u62ec\u53f7\uff0c\u5219\u76f4\u63a5\u538b\u5165\uff1b\u51fa\u73b0\u53f3\u62ec\u53f7\uff0c\u5219\u4ece\u6570\u5b57\u6808\u4e2d\u5f39\u51fa\u4e24\u4e2a\u6570\uff0c\u4ece\u8fd0\u7b97\u7b26\u6808\u4e2d\u5f39\u51fa\u6808\u9876\u8fd0\u7b97\u7b26\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u6570\u5b57\u6808\u538b\u5165\u8fd0\u7b97\u7ed3\u679c\uff0c\u91cd\u590d\u8be5\u64cd\u4f5c\u76f4\u5230\u6808\u9876\u5f39\u51fa\u53f3\u62ec\u53f7\u4f4d\u7f6e\u3002 ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"#include <iostream>\n#include <stack>\nusing namespace std;\n\nstring mp = \"+-*/)]}\";\n// \u5f53\u524d\u8fd0\u7b97\u7b26\u4e0e\u7b26\u53f7\u6808\u7684\u6808\u9876\u8fd0\u7b97\u7b26\u505a\u4f18\u5148\u7ea7\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u4f18\u5148\u7ea7\u9ad8\uff0c\u5219\u4e0d\u505a\u8fd0\u7b97\u538b\u5165\u6808\u4e2d\uff0c\u76f8\u540c\u8fdb\u884c\u8fd0\u7b97\nbool cmp(char c1, char c2)\n{\n    if (c1 =='(') {\n        return false;\n    } else if((c1=='+' || c1=='-') && (c2=='*' || c2=='/')){\n        return false;\n    }\n    return true;\n}\n\nvoid doCal(stack<double> &st, stack<char> &so)\n{\n    double b = st.top();\n    st.pop();\n    double a = st.top();\n    st.pop();\n    int op = so.top();\n    so.pop();\n    if(op == '+') a = a+b;\n    else if(op == '-') a = a-b;\n    else if(op == '*') a = a*b;\n    else if(op == '/') a = a/b;\n    st.push(a);\n    return ;\n}\n\nint main()\n{\n    string s;\n    while(getline(cin, s))\n    {\n        stack<double> st;\n        stack<char> so;\n        so.push('(');\n        s += ')';\n        bool nextIsOp = false;\n        for(int i = 0; i < s.size(); i++)\n        {\n            if(s[i]=='{' || s[i]=='[' || s[i]=='(') {\n                so.push('(');\n            } else if(s[i]==')' || s[i]==']' || s[i]=='}') {\n                while(so.top() != '(') doCal(st, so);\n                so.pop();\n            } else if (nextIsOp) {\n                while(cmp(so.top(), s[i])) doCal(st, so);\n                so.push(s[i]);\n                nextIsOp = false;\n            } else {\n                int j = i;\n                if(s[j] == '-' || s[j] == '+') i++;\n                while(mp.find(s[i]) == mp.npos) i++;\n                string t = s.substr(j, i-j);\n                st.push((double)stoi(t));\n                i--;\n                nextIsOp = true;\n            }\n        }\n        cout << st.top() << endl;\n    }\n    return 0;\n}\n")),(0,r.kt)("p",null,"\u7b2c\u4e00\u6b65\uff0c\u5148\u8003\u8651\u65e0\u62ec\u53f7\u7684\u60c5\u51b5\uff0c\u5148\u4e58\u9664\u540e\u52a0\u51cf\uff0c\u8fd9\u4e2a\u7528\u6808\u5f88\u5bb9\u6613\u89e3\u51b3\uff0c\u9047\u5230\u6570\u5b57\u5148\u538b\u6808\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u662f\u4e58\u53f7\u6216\u9664\u53f7\uff0c\u5148\u51fa\u6808\uff0c\u548c\u4e0b\u4e00\u4e2a\u6570\u8fdb\u884c\u4e58\u9664\u8fd0\u7b97\uff0c\u518d\u5165\u6808\uff0c\u6700\u540e\u5c31\u80fd\u4fdd\u8bc1\u6808\u5185\u6240\u6709\u6570\u5b57\u90fd\u662f\u52a0\u6570\uff0c\u6700\u540e\u5bf9\u6240\u6709\u52a0\u6570\u6c42\u548c\u5373\u53ef\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u6b65\uff0c\u9047\u5230\u5de6\u62ec\u53f7\uff0c\u76f4\u63a5\u9012\u5f52\u6267\u884c\u7b2c\u4e00\u6b65\u5373\u53ef\uff0c\u6700\u540e\u68c0\u6d4b\u5230\u53f3\u62ec\u53f7\uff0c\u8fd4\u56de\u62ec\u53f7\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u9000\u51fa\u51fd\u6570\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4f5c\u4e3a\u4e00\u4e2a\u52a0\u6570\uff0c\u8fd4\u56de\u4e0a\u4e00\u5c42\u5165\u6808\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <stack>\n\nusing namespace std;\n\nint pos;\n\nint compute(string & data)\n{\n    int len = data.length();\n    int num = 0;\n    char flag = '+';\n    stack<int> st;\n\n    while (pos < len) {\n        if (data[pos] == '{' || data[pos] == '[' || data[pos] == '(') {\n            pos++;\n            num = compute(data);\n        }\n\n        while (pos < len && isdigit(data[pos])) {\n            num = num * 10 + data[pos] -'0';\n            pos++;\n        }\n\n        switch (flag) {\n        case '+':\n            st.push(num);\n            break;\n        case '-':\n            st.push(-num);\n            break;\n        case '*':\n            {\n                int temp = st.top();\n                temp *= num;\n                st.pop();\n                st.push(temp);\n                break;\n            }\n        case '/':\n            {\n                int temp = st.top();\n                temp /= num;\n                st.pop();\n                st.push(temp);\n                break;\n            }\n        }\n\n        num = 0;\n        flag = data[pos];\n        if (data[pos] == '}' || data[pos] == ']'|| data[pos] == ')') {\n            pos++;\n            break;\n        }\n        pos++;\n    }\n\n    int sum = 0;\n    while (st.size()) {\n        sum += st.top();\n        st.pop();\n    }\n    return sum;\n}\n\nint main()\n{\n    string data;\n\n    while (cin >> data) {\n        pos = 0;\n        cout << compute(data) << endl;\n    }\n    return 0;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <string.h>\n\nusing namespace std;\n\nint char_i = 0;//\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9632\u6b62\u9012\u5f52\u4ea7\u751f\u7684\u65e0\u7ebf\u5faa\u73af\n\nint cal(char *character){\n    int result = 0;\n    \n    int num[100] = {0};\n    int num_index = 0;\n\n    char sigh = '+';\n    int len = strlen(character);\n    while(char_i<len){\n        int num_m = 0;\n        if(character[char_i]=='('||character[char_i]=='['||character[char_i]=='{'){\n            char_i++;\n            num_m = cal(character);\n        }\n\n        while (1)\n        {\n            if (character[char_i] >= '0' && character[char_i] <= '9')\n            {\n                num_m = num_m * 10 + character[char_i] - '0';\n                char_i++;\n            }\n            else\n                break;\n        }\n\n        switch(sigh){\n            case '+':\n                num[num_index] = num_m;\n                num_index++;\n                break;\n            case '-':\n                num[num_index] = -num_m;\n                num_index++;\n                break;\n            case '*':\n                num[num_index-1] *= num_m; \n                break;\n            case '/':\n                num[num_index-1] /= num_m; \n                break;\n            default:\n                break;\n        }\n        sigh = character[char_i];\n        if (character[char_i] == '}' || character[char_i] == ']' || character[char_i] == ')') {//\u7ed3\u675f\u672c\u6b21\u9012\u5f52\uff0c\u8fd4\u56de\u62ec\u53f7\u5185\u8fd0\u7b97\u7684\u7ed3\u679c\n            char_i++;\n            break;\n        }\n        char_i++;\n        \n        \n    }\n    \n\n    for (int i = 0; i < num_index; i++)\n    {\n        result += num[i];\n    }\n\n    return result;\n    \n    \n    \n}\n\n\nint main() {\n    char character[100] = { 0 };\n    int result = 0;\n    cin >> character;\n\n    result = cal(character);\n\n    cout << result << endl;\n}\n")),(0,r.kt)("h2",{id:"\u7ec6\u8282\u5b9e\u73b0\u9898"},"\u7ec6\u8282\u5b9e\u73b0\u9898"),(0,r.kt)("h2",{id:"\u4f4d\u8fd0\u7b97-1"},"\u4f4d\u8fd0\u7b97"),(0,r.kt)("h5",{id:"\u6700\u957f\u7684\u53ef\u6574\u5408\u7684\u5b50\u6570\u7ec4\u957f\u5ea6"},"\u6700\u957f\u7684\u53ef\u6574\u5408\u7684\u5b50\u6570\u7ec4\u957f\u5ea6"),(0,r.kt)("p",null,"sort + dp"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'#include<cstdio>\n#include<algorithm>\nusing namespace std;\n    \nint main(){\n    int n;\n    scanf("%d", &n);\n    int A[n];\n    for(int i =0; i < n; ++i){\n        scanf("%d", &A[i]);\n    }\n    if(n <= 1){\n        printf("%d", n);\n        return 0;\n    }\n    sort(A, A+n);\n    int res=0, zong = 1;\n    for(int i = 1; i < n; ++i){\n        if(A[i] == A[i-1]) continue;\n        if(A[i] == A[i-1]+1){\n            zong++;\n            res = max(zong, res);\n        }\n        else{\n            zong = 1;\n        }\n    }\n    printf("%d", res);\n    return 0;\n        \n}\n')),(0,r.kt)("h3",{id:"\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57"},"\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"//C++ \u4e8c\u5206\u6cd5\nclass Solution {\npublic:\n    int minNumberInRotateArray(vector<int> rotateArray) {\n        if (rotateArray.empty()) return 0;\n        int left = 0, right = rotateArray.size() - 1;\n        while (left < right) {\n            //\u786e\u8ba4\u5b50\u6570\u7ec4\u662f\u5426\u662f\u7c7b\u4f3c1,1,2,4,5,..,7\u7684\u975e\u9012\u51cf\u6570\u7ec4\n            if (rotateArray[left] < rotateArray[right]) return rotateArray[left];\n            \n            int mid = left + (right - left) / 2;\n            //\u5982\u679c\u5de6\u534a\u6570\u7ec4\u4e3a\u6709\u5e8f\u6570\u7ec4\n            if (rotateArray[left] < rotateArray[mid])\n                left = mid + 1;\n            //\u5982\u679c\u53f3\u534a\u6570\u7ec4\u4e3a\u6709\u5e8f\u6570\u7ec4\n            else if (rotateArray[mid] < rotateArray[right])\n                right = mid;\n            //\u5426\u5219\uff0crotateArray[left] == rotateArray[mid] == rotateArray[right]\n            else {\n                ++left;\n            }\n        }\n        return rotateArray[left];\n    }\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"public static int minNumberInRotateArray(int[] array) {\n        if (array.length == 0)\n            return 0;\n        int left = 0;\n        int right = array.length - 1;\n        int middle = -1;\n        while (array[left]>=array[right]) {\n            if(right-left==1){\n                middle = right;\n                break;\n            }\n            middle = left + (right - left) / 2;\n            if (array[middle] >= array[left]) {\n                left = middle;\n            }\n            if (array[middle] <= array[right]) {\n                right = middle;\n            }\n        }\n        return array[middle];\n    }\n")))}c.isMDXComponent=!0}}]);