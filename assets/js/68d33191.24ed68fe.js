(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[1621],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return u}});var l=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},s=Object.keys(e);for(l=0;l<s.length;l++)t=s[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(l=0;l<s.length;l++)t=s[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=l.createContext({}),p=function(e){var n=l.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return l.createElement(d.Provider,{value:n},e.children)},a={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},f=l.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=p(t),u=r,_=f["".concat(d,".").concat(u)]||f[u]||a[u]||s;return t?l.createElement(_,o(o({ref:n},c),{},{components:t})):l.createElement(_,o({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=f;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=t[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}f.displayName="MDXCreateElement"},536:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p},default:function(){return a}});var l=t(22122),r=t(19756),s=(t(67294),t(3905)),o=["components"],i={id:"C4.IO\u590d\u7528",title:"C4.IO\u590d\u7528","typora-root-url":"../"},d={unversionedId:"Server/C4.IO\u590d\u7528",id:"Server/C4.IO\u590d\u7528",isDocsHomePage:!1,title:"C4.IO\u590d\u7528",description:"I/O\u590d\u7528",source:"@site/docs/7.Server/C4.IO\u590d\u7528.md",sourceDirName:"7.Server",slug:"/Server/C4.IO\u590d\u7528",permalink:"/Server/C4.IO\u590d\u7528",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/7.Server/C4.IO\u590d\u7528.md",version:"current",frontMatter:{id:"C4.IO\u590d\u7528",title:"C4.IO\u590d\u7528","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"C3.\u7a0b\u5e8f\u89c4\u8303",permalink:"/Server/C3.\u7a0b\u5e8f\u89c4\u8303"},next:{title:"C5.\u4fe1\u53f7",permalink:"/Server/C5.\u4fe1\u53f7"}},p=[{value:"I/O\u590d\u7528",id:"io\u590d\u7528",children:[{value:"select\u7cfb\u7edf\u8c03\u7528",id:"select\u7cfb\u7edf\u8c03\u7528",children:[]},{value:"poll\u7cfb\u7edf\u8c03\u7528",id:"poll\u7cfb\u7edf\u8c03\u7528",children:[]},{value:"epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528",id:"epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528",children:[]},{value:"\u4e09\u7ec4I/O\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83",id:"\u4e09\u7ec4io\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83",children:[]}]}],c={toc:p};function a(e){var n=e.components,i=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,l.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"io\u590d\u7528"},"I/O\u590d\u7528"),(0,s.kt)("p",null,"I/O\u590d\u7528\u4f7f\u5f97\u7a0b\u5e8f\u80fd\u540c\u65f6\u76d1\u542c\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4f46\u5b83\u672c\u8eab\u662f\u963b\u585e\u7684\u3002\u5e76\u4e14\u5f53\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u540c\u65f6\u5c31\u7eea\u65f6\uff0c\u5982\u679c\u4e0d\u91c7\u53d6\u989d\u5916\u7684\u63aa\u65bd\uff0c\u7a0b\u5e8f\u5c31\u53ea\u80fd\u6309\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u4f7f\u5f97\u670d\u52a1\u5668\u7a0b\u5e8f\u770b\u8d77\u6765\u50cf\u662f\u4e32\u884c\u5de5\u4f5c\u7684\u3002\u5982\u679c\u8981\u5b9e\u73b0\u5e76\u53d1\uff0c\u53ea\u80fd\u4f7f\u7528\u591a\u8fdb\u7a0b\u6216\u591a\u7ebf\u7a0b\u7b49\u7f16\u7a0b\u624b\u6bb5\u3002"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u7a0b\u5e8f\u8981\u540c\u65f6\u5904\u7406\u591a\u4e2asocket\u3002\u6bd4\u5982\u672c\u7ae0\u5c06\u8981\u8ba8\u8bba\u7684\u975e\u963b\u585econnect\u6280\u672f\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u7a0b\u5e8f\u8981\u540c\u65f6\u5904\u7406\u7528\u6237\u8f93\u5165\u548c\u7f51\u7edc\u8fde\u63a5\u3002\u6bd4\u5982\u672c\u7ae0\u5c06\u8981\u8ba8\u8bba\u7684\u804a\u5929\u5ba4\u7a0b\u5e8f\u3002"),(0,s.kt)("li",{parentName:"ul"},"TCP\u670d\u52a1\u5668\u8981\u540c\u65f6\u5904\u7406\u76d1\u542csocket\u548c\u8fde\u63a5socket\u3002\u8fd9\u662fI/O\u590d\u7528\u4f7f\u7528\u6700\u591a\u7684\u573a\u5408\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u670d\u52a1\u5668\u8981\u540c\u65f6\u5904\u7406TCP\u8bf7\u6c42\u548cUDP\u8bf7\u6c42\u3002\u6bd4\u5982\u672c\u7ae0\u5c06\u8981\u8ba8\u8bba\u7684\u56de\u5c04\u670d\u52a1\u5668\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u670d\u52a1\u5668\u8981\u540c\u65f6\u76d1\u542c\u591a\u4e2a\u7aef\u53e3\uff0c\u6216\u8005\u5904\u7406\u591a\u79cd\u670d\u52a1\u3002\u6bd4\u5982\u672c\u7ae0\u5c06\u8981\u8ba8\u8bba\u7684xinetd\u670d\u52a1\u5668\u3002")),(0,s.kt)("h3",{id:"select\u7cfb\u7edf\u8c03\u7528"},"select\u7cfb\u7edf\u8c03\u7528"),(0,s.kt)("p",null,"elect\u7cfb\u7edf\u8c03\u7528\u7684\u7528\u9014\u662f\uff1a\u5728\u4e00\u6bb5\u6307\u5b9a\u65f6\u95f4\u5185\uff0c\u76d1\u542c\u7528\u6237\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002"),(0,s.kt)("h4",{id:"select-api"},"select API"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include<sys/select.h>\nint select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);\n\n")),(0,s.kt)("p",null,"1\uff09nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002\u5b83\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3aselect\u76d1\u542c\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u7684\u6700\u5927\u503c\u52a01\uff0c\u56e0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u7684\u3002"),(0,s.kt)("p",null,"2\uff09readfds\u3001writefds\u548cexceptfds\u53c2\u6570\u5206\u522b\u6307\u5411\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u3002"),(0,s.kt)("p",null,"select\u8c03\u7528\u8fd4\u56de\u65f6\uff0c\u5185\u6838\u5c06\u4fee\u6539\u5b83\u4eec\u6765\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u54ea\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u7ecf\u5c31\u7eea\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include<typesizes.h>\n#define__FD_SETSIZE 1024\n#include<sys/select.h>\n\n#define FD_SETSIZE __FD_SETSIZE\ntypedef long int__fd_mask;\n#undef __NFDBITS\n#define __NFDBITS (8*(int)sizeof(__fd_mask))\n\ntypedef struct\n  {\n    /* XPG4.2 requires this member name.  Otherwise avoid the name\n       from the global namespace.  */\n#ifdef __USE_XOPEN\n    __fd_mask fds_bits[__FD_SETSIZE / __NFDBITS];\n# define __FDS_BITS(set) ((set)->fds_bits)\n#else\n    __fd_mask __fds_bits[__FD_SETSIZE / __NFDBITS];\n# define __FDS_BITS(set) ((set)->__fds_bits)\n#endif\n  } fd_set;\n\n")),(0,s.kt)("p",null,"fd_set\u7ed3\u6784\u4f53\u4ec5\u5305\u542b\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u6bcf\u4e00\u4f4d\uff08bit\uff09\u6807\u8bb0\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002fd_set\u80fd\u5bb9\u7eb3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u7531FD_SETSIZE\u6307\u5b9a\uff0c\u8fd9\u5c31\u9650\u5236\u4e86select\u80fd\u540c\u65f6\u5904\u7406\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u91cf\u3002"),(0,s.kt)("p",null,"\u4e00\u7cfb\u5217\u5b8f\u6765\u8bbf\u95eefd_set\u7ed3\u6784\u4f53\u4e2d\u7684\u4f4d\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include<sys/select.h>\nvoid FD_CLR(int fd, fd_set *set);  /*\u6e05\u9664fdset\u7684\u4f4dfd*/\nint  FD_ISSET(int fd, fd_set *set);  /*\u6d4b\u8bd5fdset\u7684\u4f4dfd\u662f\u5426\u88ab\u8bbe\u7f6e*/\nvoid FD_SET(int fd, fd_set *set); /*\u8bbe\u7f6efdset\u7684\u4f4dfd*/\nvoid FD_ZERO(fd_set *set); /*\u6e05\u9664fdset\u7684\u6240\u6709\u4f4d*/\n")),(0,s.kt)("p",null,"3\uff09timeout\u53c2\u6570\u7528\u6765\u8bbe\u7f6eselect\u51fd\u6570\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u5b83\u662f\u4e00\u4e2atimeval\u7ed3\u6784\u7c7b\u578b\u7684\u6307\u9488\uff0c\u91c7\u7528\u6307\u9488\u53c2\u6570\u662f\u56e0\u4e3a\u5185\u6838\u5c06\u4fee\u6539\u5b83\u4ee5\u544a\u8bc9\u5e94\u7528\u7a0b\u5e8fselect\u7b49\u5f85\u4e86\u591a\u4e45\u3002\u4e0d\u8fc7\u6211\u4eec\u4e0d\u80fd\u5b8c\u5168\u4fe1\u4efbselect\u8c03\u7528\u8fd4\u56de\u540e\u7684timeout\u503c\uff0c\u6bd4\u5982\u8c03\u7528\u5931\u8d25\u65f6timeout\u503c\u662f\u4e0d\u786e\u5b9a\u7684\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"struct timeval {\n    long    tv_sec;         /* seconds */ /*\u79d2\u6570*/\n    long    tv_usec;        /* microseconds */ /*\u5fae\u79d2\u6570*/\n };\n")),(0,s.kt)("p",null,"\u5982\u679c\u7ed9timeout\u53d8\u91cf\u7684tv_sec\u6210\u5458\u548ctv_usec\u6210\u5458\u90fd\u4f20\u90120\uff0c\u5219select\u5c06\u7acb\u5373\u8fd4\u56de\u3002\u5982\u679c\u7ed9timeout\u4f20\u9012NULL\uff0c\u5219select\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u3002"),(0,s.kt)("p",null,"select\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\uff08\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\uff09\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002\u5982\u679c\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u6ca1\u6709\u4efb\u4f55\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\uff0cselect\u5c06\u8fd4\u56de0\u3002select\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002\u5982\u679c\u5728select\u7b49\u5f85\u671f\u95f4\uff0c\u7a0b\u5e8f\u63a5\u6536\u5230\u4fe1\u53f7\uff0c\u5219select\u7acb\u5373\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u4e3aEINTR\u3002"),(0,s.kt)("h4",{id:"\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u6761\u4ef6"},"\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u6761\u4ef6"),(0,s.kt)("p",null,"socket\u53ef\u8bfb\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"socket\u5185\u6838\u63a5\u6536\u7f13\u5b58\u533a\u4e2d\u7684\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_RCVLOWAT\u3002\u6b64\u65f6\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u8bfb\u8be5socket\uff0c\u5e76\u4e14\u8bfb\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002"),(0,s.kt)("li",{parentName:"ul"},"socket\u901a\u4fe1\u7684\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u3002\u8bfb\u64cd\u4f5c\u5c06\u8fd4\u56de0\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u76d1\u542csocket\u4e0a\u6709\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002"),(0,s.kt)("li",{parentName:"ul"},"socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002")),(0,s.kt)("p",null,"\u4e0b\u5217\u60c5\u51b5\u4e0bsocket\u53ef\u5199\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"socket\u5185\u6838\u53d1\u9001\u7f13\u5b58\u533a\u4e2d\u7684\u53ef\u7528\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_SNDLOWAT\u3002\u6b64\u65f6\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u5199\u8be5socket\uff0c\u5e76\u4e14\u5199\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002"),(0,s.kt)("li",{parentName:"ul"},"socket\u7684\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u3002\u5bf9\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u7684socket\u6267\u884c\u5199\u64cd\u4f5c\u5c06\u89e6\u53d1\u4e00\u4e2aSIGPIPE\u4fe1\u53f7\u3002"),(0,s.kt)("li",{parentName:"ul"},"socket\u4f7f\u7528\u975e\u963b\u585econnect\u8fde\u63a5\u6210\u529f\u6216\u8005\u5931\u8d25\uff08\u8d85\u65f6\uff09\u4e4b\u540e\u3002"),(0,s.kt)("li",{parentName:"ul"},"socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002")),(0,s.kt)("p",null,"\u7f51\u7edc\u7a0b\u5e8f\u4e2d\uff0cselect\u80fd\u5904\u7406\u7684\u5f02\u5e38\u60c5\u51b5\u53ea\u6709\u4e00\u79cd\uff1asocket\u4e0a\u63a5\u6536\u5230\u5e26\u5916\u6570\u636e\u3002"),(0,s.kt)("h4",{id:"\u5904\u7406\u5e26\u5916\u6570\u636e"},"\u5904\u7406\u5e26\u5916\u6570\u636e"),(0,s.kt)("p",null,"socket\u4e0a\u63a5\u6536\u5230\u666e\u901a\u6570\u636e\u548c\u5e26\u5916\u6570\u636e\u90fd\u5c06\u4f7fselect\u8fd4\u56de\uff0c\u4f46socket\u5904\u4e8e\u4e0d\u540c\u7684\u5c31\u7eea\u72b6\u6001\uff1a\u524d\u8005\u5904\u4e8e\u53ef\u8bfb\u72b6\u6001\uff0c\u540e\u8005\u5904\u4e8e\u5f02\u5e38\u72b6\u6001\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'    char buf[1024];\n    fd_set read_fds;\n    fd_set exception_fds;\n    FD_ZERO(&read_fds);\n    FD_ZERO(&exception_fds);\n    while (1) {\n        memset(buf, \'\\0\', sizeof(buf));\n        /*\u6bcf\u6b21\u8c03\u7528select\u524d\u90fd\u8981\u91cd\u65b0\u5728read_fds\u548cexception_fds\u4e2d\u8bbe\u7f6e\u6587\u4ef6\u63cf\u8ff0\u7b26connfd\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u5c06\u88ab\u5185\u6838\u4fee\u6539*/\n        FD_SET(connfd, &read_fds);\n        FD_SET(connfd, &exception_fds);\n        ret = select(connfd + 1, &read_fds, &exception_fds, NULL);\n        if (ret < 0) {\n            printf("select failure\\n");\n            break;\n        }\n/*\u5bf9\u4e8e\u53ef\u8bfb\u4e8b\u4ef6\uff0c\u91c7\u7528\u666e\u901a\u7684recv\u51fd\u6570\u8bfb\u53d6\u6570\u636e*/\n        if (FD_ISSET(connfd, &read_fds)) {\n            ret = recv(connfd, buf, sizeof(buf) - 1, 0);\n            if (ret <= 0) {\n                break;\n            }\n/*\u5bf9\u4e8e\u5f02\u5e38\u4e8b\u4ef6\uff0c\u91c7\u7528\u5e26MSG_OOB\u6807\u5fd7\u7684recv\u51fd\u6570\u8bfb\u53d6\u5e26\u5916\u6570\u636e*/\n        } else if (FD_IS(connfd, &exception_fds)) {\n            ret = recv(connfd, buf, sizeof(buf) - 1, MSG_OOB);\n            if (ret <= 0) {\n                break;\n            }\n            printf("get %d bytes of oob data : %s\\n", ret, buf);\n        }\n    }\n    close(connfd);\n    close(listenfd);\n\n')),(0,s.kt)("h3",{id:"poll\u7cfb\u7edf\u8c03\u7528"},"poll\u7cfb\u7edf\u8c03\u7528"),(0,s.kt)("p",null,"poll\u7cfb\u7edf\u8c03\u7528\u548cselect\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u8f6e\u8be2\u4e00\u5b9a\u6570\u91cf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u6d4b\u8bd5\u5176\u4e2d\u662f\u5426\u6709\u5c31\u7eea\u8005\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <poll.h>\nint poll(struct pollfd *fds, nfds_t nfds, int timeout);\n\nstruct pollfd {\n    int   fd;         /* file descriptor */ \n    short events;     /* requested events */ /*\u6ce8\u518c\u7684\u4e8b\u4ef6*/\n    short revents;    /* returned events */ /*\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u7531\u5185\u6838\u586b\u5145*/\n};\n\n")),(0,s.kt)("p",null,"1\uff09fds\u53c2\u6570\u662f\u4e00\u4e2apollfd\u7ed3\u6784\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5b83\u6307\u5b9a\u6240\u6709\u6211\u4eec\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u53d1\u751f\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"image-20210909200834042",src:t(65932).Z})),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"image-20210909200846957",src:t(9451).Z})),(0,s.kt)("p",null,"\u901a\u5e38\uff0c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u6839\u636erecv\u8c03\u7528\u7684\u8fd4\u56de\u503c\u6765\u533a\u5206socket\u4e0a\u63a5\u6536\u5230\u7684\u662f\u6709\u6548\u6570\u636e\u8fd8\u662f\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u5e76\u505a\u76f8\u5e94\u7684\u5904\u7406\u3002"),(0,s.kt)("p",null,"\u81eaLinux\u5185\u68382.6.17\u5f00\u59cb\uff0cGNU\u4e3apoll\u7cfb\u7edf\u8c03\u7528\u589e\u52a0\u4e86\u4e00\u4e2aPOLLRDHUP\u4e8b\u4ef6\uff0c\u5b83\u5728socket\u4e0a\u63a5\u6536\u5230\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u7684\u8bf7\u6c42\u4e4b\u540e\u89e6\u53d1\u3002"),(0,s.kt)("p",null,"\u8fd9\u4e3a\u6211\u4eec\u533a\u5206\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u3002\u4f46\u4f7f\u7528POLLRDHUP\u4e8b\u4ef6\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u4ee3\u7801\u6700\u5f00\u59cb\u5904\u5b9a\u4e49_GNU_SOURCE\u3002"),(0,s.kt)("p",null,"2\uff09nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u4e8b\u4ef6\u96c6\u5408fds\u7684\u5927\u5c0f\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef unsigned long int nfds_t;\n")),(0,s.kt)("p",null,"3\uff09timeout\u53c2\u6570\u6307\u5b9apoll\u7684\u8d85\u65f6\u503c\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\u3002\u5f53timeout\u4e3a-1\u65f6\uff0cpoll\u8c03\u7528\u5c06\u6c38\u8fdc\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\uff1b\u5f53timeout\u4e3a0\u65f6\uff0cpoll\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u3002"),(0,s.kt)("p",null,"poll\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u7684\u542b\u4e49\u4e0eselect\u76f8\u540c\u3002"),(0,s.kt)("h3",{id:"epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528"},"epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528"),(0,s.kt)("h4",{id:"\u5185\u6838\u4e8b\u4ef6\u8868"},"\u5185\u6838\u4e8b\u4ef6\u8868"),(0,s.kt)("p",null,"epoll\u662fLinux\u7279\u6709\u7684I/O\u590d\u7528\u51fd\u6570\u3002"),(0,s.kt)("p",null,"\u9996\u5148\uff0cepoll\u4f7f\u7528\u4e00\u7ec4\u51fd\u6570\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u51fd\u6570\u3002\u5176\u6b21\uff0cepoll\u628a\u7528\u6237\u5173\u5fc3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6\u653e\u5728\u5185\u6838\u91cc\u7684\u4e00\u4e2a\u4e8b\u4ef6\u8868\u4e2d\uff0c\u4ece\u800c\u65e0\u987b\u50cfselect\u548cpoll\u90a3\u6837\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u91cd\u590d\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u6216\u4e8b\u4ef6\u96c6\u3002\u4f46epoll\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6765\u552f\u4e00\u6807\u8bc6\u5185\u6838\u4e2d\u7684\u8fd9\u4e2a\u4e8b\u4ef6\u8868\u3002\u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f7f\u7528\u5982\u4e0bepoll_create\u51fd\u6570\u6765\u521b\u5efa\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sys/epoll.h>\nint epoll_create(int size);\n")),(0,s.kt)("p",null,"size\u53c2\u6570\u73b0\u5728\u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c\u53ea\u662f\u7ed9\u5185\u6838\u4e00\u4e2a\u63d0\u793a\uff0c\u544a\u8bc9\u5b83\u4e8b\u4ef6\u8868\u9700\u8981\u591a\u5927\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u7528\u4f5c\u5176\u4ed6\u6240\u6709epoll\u7cfb\u7edf\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u6307\u5b9a\u8981\u8bbf\u95ee\u7684\u5185\u6838\u4e8b\u4ef6\u8868\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\n")),(0,s.kt)("p",null,"fd\u53c2\u6570\u662f\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cop\u53c2\u6570\u5219\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u3002\u64cd\u4f5c\u7c7b\u578b\u6709\u5982\u4e0b3\u79cd\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"EPOLL_CTL_ADD\uff0c\u5f80\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518cfd\u4e0a\u7684\u4e8b\u4ef6\u3002"),(0,s.kt)("li",{parentName:"ul"},"EPOLL_CTL_MOD\uff0c\u4fee\u6539fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002"),(0,s.kt)("li",{parentName:"ul"},"EPOLL_CTL_DEL\uff0c\u5220\u9664fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"struct epoll_event {\n    uint32_t     events;      /* Epoll events */\n    epoll_data_t data;        /* User data variable */\n};\n")),(0,s.kt)("p",null,"epoll\u652f\u6301\u7684\u4e8b\u4ef6\u7c7b\u578b\u548cpoll\u57fa\u672c\u76f8\u540c\u3002\u8868\u793aepoll\u4e8b\u4ef6\u7c7b\u578b\u7684\u5b8f\u662f\u5728poll\u5bf9\u5e94\u7684\u5b8f\u524d\u52a0\u4e0a\u201cE\u201d\u3002\u4f46epoll\u6709\u4e24\u4e2a\u989d\u5916\u7684\u4e8b\u4ef6\u7c7b\u578b\u2014\u2014EPOLLET\u548cEPOLLONESHOT\u3002\u5b83\u4eec\u5bf9\u4e8eepoll\u7684\u9ad8\u6548\u8fd0\u4f5c\u975e\u5e38\u5173\u952e"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef union epoll_data {\n    void        *ptr;\n    int          fd;\n    uint32_t     u32;\n    uint64_t     u64;\n} epoll_data_t;\n")),(0,s.kt)("p",null,"epoll_data_t\u662f\u4e00\u4e2a\u8054\u5408\u4f53\uff0c\u51764\u4e2a\u6210\u5458\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u662ffd\uff0c\u5b83\u6307\u5b9a\u4e8b\u4ef6\u6240\u4ece\u5c5e\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ptr\u6210\u5458\u53ef\u7528\u6765\u6307\u5b9a\u4e0efd\u76f8\u5173\u7684\u7528\u6237\u6570\u636e\u3002"),(0,s.kt)("p",null,"epoll_ctl\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002"),(0,s.kt)("h4",{id:"epoll_wait\u51fd\u6570"},"epoll_wait\u51fd\u6570"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"int epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout);\n")),(0,s.kt)("p",null,"\u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e2a\u6570\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002"),(0,s.kt)("p",null,"maxevents\u53c2\u6570\u6307\u5b9a\u6700\u591a\u76d1\u542c\u591a\u5c11\u4e2a\u4e8b\u4ef6\uff0c\u5b83\u5fc5\u987b\u5927\u4e8e0\u3002"),(0,s.kt)("p",null,"epoll_wait\u51fd\u6570\u5982\u679c\u68c0\u6d4b\u5230\u4e8b\u4ef6\uff0c\u5c31\u5c06\u6240\u6709\u5c31\u7eea\u7684\u4e8b\u4ef6\u4ece\u5185\u6838\u4e8b\u4ef6\u8868\uff08\u7531epfd\u53c2\u6570\u6307\u5b9a\uff09\u4e2d\u590d\u5236\u5230\u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570events\u6307\u5411\u7684\u6570\u7ec4\u4e2d\u3002\u8fd9\u4e2a\u6570\u7ec4\u53ea\u7528\u4e8e\u8f93\u51faepoll_wait\u68c0\u6d4b\u5230\u7684\u5c31\u7eea\u4e8b\u4ef6\uff0c\u800c\u4e0d\u50cfselect\u548cpoll\u7684\u6570\u7ec4\u53c2\u6570\u90a3\u6837\u65e2\u7528\u4e8e\u4f20\u5165\u7528\u6237\u6ce8\u518c\u7684\u4e8b\u4ef6\uff0c\u53c8\u7528\u4e8e\u8f93\u51fa\u5185\u6838\u68c0\u6d4b\u5230\u7684\u5c31\u7eea\u4e8b\u4ef6\u3002\u8fd9\u5c31\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u5e94\u7528\u7a0b\u5e8f\u7d22\u5f15\u5c31\u7eea\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6548\u7387\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\u5982\u4f55\u7d22\u5f15poll\u8fd4\u56de\u7684\u5c31\u7eea\u6587\u4ef6\u63cf\u8ff0\u7b26*/\nint ret=poll(fds,MAX_EVENT_NUMBER,-1);\n/*\u5fc5\u987b\u904d\u5386\u6240\u6709\u5df2\u6ce8\u518c\u6587\u4ef6\u63cf\u8ff0\u7b26\u5e76\u627e\u5230\u5176\u4e2d\u7684\u5c31\u7eea\u8005\uff08\u5f53\u7136\uff0c\u53ef\u4ee5\u5229\u7528ret\u6765\u7a0d\u505a\u4f18\u5316\uff09*/\nfor(int i=0;i\uff1cMAX_EVENT_NUMBER;++i)\n{\n    if(fds[i].revents\uff06POLLIN)/*\u5224\u65ad\u7b2ci\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u5426\u5c31\u7eea*/\n    {\n        int sockfd=fds[i].fd;\n        /*\u5904\u7406sockfd*/\n    }\n}\n/*\u5982\u4f55\u7d22\u5f15epoll\u8fd4\u56de\u7684\u5c31\u7eea\u6587\u4ef6\u63cf\u8ff0\u7b26*/\nint ret=epoll_wait(epollfd,events,MAX_EVENT_NUMBER,-1);\n/*\u4ec5\u904d\u5386\u5c31\u7eea\u7684ret\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26*/\nfor(int i=0;i\uff1cret;i++)\n{\n    int sockfd=events[i].data.fd;\n    /*sockfd\u80af\u5b9a\u5c31\u7eea\uff0c\u76f4\u63a5\u5904\u7406*/\n}\n\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'int make_nonblock(int fd) {\n    int op = fcntl(fd, F_GETFL);\n    int new_op = op | O_NONBLOCK;\n    fcntl(fd, F_SETFL, new_op);\n    return op;\n}\n\n\nvoid add_event(int epollfd, int fd, int enable_et) {\n    struct epoll_event event;\n    event.data.fd = fd;\n    event.events = EPOLLIN;\n    if (enable_et) {\n        event.events |= EPOLLET;\n    }\n    if (epoll_ctl(epollfd, fd, EPOLL_CTL_ADD, &event) < 0) {\n        perror("epoll_ctl");\n    }\n    make_nonblock(fd);\n    return ;\n}\nint main(int argc, char *argv[]) {\n\n    struct epoll_event events[MAX_EVENT_NUMBER];\n    int epollfd;\n    if ((epollfd = epoll_create(1)) < 0) {\n        perror("epoll_create");\n    }\n\n    add_event(epollfd, listenfd, 0);\n\n    while (1) {\n        int nfds = epoll_wait(epollfd, events, MAX_EVENT_NUMBER, -1);\n        if (nfds < 0) {\n            perror("epoll_wait");\n            break;\n        }\n        for (int i = 0; i < nfds; i++) {\n            int sockfd = events[i].data.fd;\n            if (sockfd == listenfd) {\n                struct sockaddr_in client_address;\n                socklen_t client_addrlength = sizeof(struct sockaddr_in);\n                int connfd;\n                if ((connfd = accept(listenfd, (struct sockaddr *)&client_address, &client_addrlength)) < 0) {\n                    perror("accept");\n                }\n                add_event(epollfd, connfd, 1);\n            } else if (events[i].events & EPOLLIN) {\n                pthread_t tid;\n                Data new_worker;\n                new_worker.epollfd = epollfd;\n                new_worker.sockfd = sockfd;\n                pthread_create(&tid, NULL, do_work, (void *)&new_worker);\n            } else {\n                printf("something else happened\\n");\n            }\n        }\n    }\n    close(listenfd);\n    close(epollfd);\n    return 0;\n}\n\n\n')),(0,s.kt)("h4",{id:"lt\u548cet\u6a21\u5f0f"},"LT\u548cET\u6a21\u5f0f"),(0,s.kt)("p",null,"epoll\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\u6a21\u5f0f\uff1aLT\uff08Level Trigger\uff0c\u7535\u5e73\u89e6\u53d1\uff09\u6a21\u5f0f\u548cET\uff08Edge Trigger\uff0c\u8fb9\u6cbf\u89e6\u53d1\uff09\u6a21\u5f0f\u3002"),(0,s.kt)("p",null,"LT\u6a21\u5f0f\u662f\u9ed8\u8ba4\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0bepoll\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6548\u7387\u8f83\u9ad8\u7684poll\u3002\u5f53\u5f80epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518c\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684EPOLLET\u4e8b\u4ef6\u65f6\uff0cepoll\u5c06\u4ee5ET\u6a21\u5f0f\u6765\u64cd\u4f5c\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ET\u6a21\u5f0f\u662fepoll\u7684\u9ad8\u6548\u5de5\u4f5c\u6a21\u5f0f\u3002"),(0,s.kt)("p",null,"\u5bf9\u4e8e\u91c7\u7528LT\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u8fd9\u6837\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4e0b\u4e00\u6b21\u8c03\u7528epoll_wait\u65f6\uff0cepoll_wait\u8fd8\u4f1a\u518d\u6b21\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u544a\u6b64\u4e8b\u4ef6\uff0c\u76f4\u5230\u8be5\u4e8b\u4ef6\u88ab\u5904\u7406\u3002"),(0,s.kt)("p",null,"\u5bf9\u4e8e\u91c7\u7528ET\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u540e\u7eed\u7684epoll_wait\u8c03\u7528\u5c06\u4e0d\u518d\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u8fd9\u4e00\u4e8b\u4ef6\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_EVENT_NUMBER 1024\n#define BUFFER_SIZE 10\n/*\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u6210\u975e\u963b\u585e\u7684*/\nint setnonblocking(int fd)\n{\n    int old_option=fcntl(fd,F_GETFL);\n    int new_option=old_option|O_NONBLOCK;\n    fcntl(fd,F_SETFL,new_option);\n    return old_option;\n}\n/*\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26fd\u4e0a\u7684EPOLLIN\u6ce8\u518c\u5230epollfd\u6307\u793a\u7684epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\uff0c\u53c2\u6570enable_et\u6307\u5b9a\u662f\u5426\u5bf9fd\u542f\u7528ET\u6a21\u5f0f*/\nvoid addfd(int epollfd,int fd,bool enable_et)\n{\n    epoll_event event;\n    event.data.fd=fd;\n    event.events=EPOLLIN;\n    if(enable_et)\n    {\n        event.events|=EPOLLET;\n    }\n    epoll_ctl(epollfd,EPOLL_CTL_ADD,fd,\uff06event);\n    setnonblocking(fd);\n}\n/*LT\u6a21\u5f0f\u7684\u5de5\u4f5c\u6d41\u7a0b*/\nvoid lt(epoll_event*events,int number,int epollfd,int listenfd)\n{\n    char buf[BUFFER_SIZE];\n    for(int i=0;i\uff1cnumber;i++)\n    {\n        int sockfd=events[i].data.fd;\n        if(sockfd==listenfd)\n        {\n            struct sockaddr_in client_address;\n            socklen_t client_addrlength=sizeof(client_address);\n            int connfd=accept(listenfd,(struct sockaddr*)\uff06client_address,\n                              \uff06client_addrlength);\n            addfd(epollfd,connfd,false);/*\u5bf9connfd\u7981\u7528ET\u6a21\u5f0f*/\n        }\n        else if(events[i].events\uff06EPOLLIN)\n        {\n            /*\u53ea\u8981socket\u8bfb\u7f13\u5b58\u4e2d\u8fd8\u6709\u672a\u8bfb\u51fa\u7684\u6570\u636e\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u88ab\u89e6\u53d1*/\n            printf("event trigger once\\n");\n            memset(buf,\'\\0\',BUFFER_SIZE);\n            int ret=recv(sockfd,buf,BUFFER_SIZE-1,0);\n            if(ret\uff1c=0)\n            {\n                close(sockfd);\n                continue;\n            }\n            printf("get%d bytes of content:%s\\n",ret,buf);\n        }\n        else\n        {\n            printf("something else happened\\n");\n        }\n    }\n}\n/*ET\u6a21\u5f0f\u7684\u5de5\u4f5c\u6d41\u7a0b*/\nvoid et(epoll_event*events,int number,int epollfd,int listenfd)\n{\n    char buf[BUFFER_SIZE];\n    for(int i=0;i\uff1cnumber;i++)\n    {\n        int sockfd=events[i].data.fd;\n        if(sockfd==listenfd)\n        {\n            struct sockaddr_in client_address;\n            socklen_t client_addrlength=sizeof(client_address);\n            int connfd=accept(listenfd,(struct sockaddr*)\uff06client_address,\uff06client_addrlength);\n            addfd(epollfd,connfd,true);/*\u5bf9connfd\u5f00\u542fET\u6a21\u5f0f*/\n        }\n        else if(events[i].events\uff06EPOLLIN)\n        {\n            /*\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u4f1a\u88ab\u91cd\u590d\u89e6\u53d1\uff0c\u6240\u4ee5\u6211\u4eec\u5faa\u73af\u8bfb\u53d6\u6570\u636e\uff0c\u4ee5\u786e\u4fdd\u628asocket\u8bfb\u7f13\u5b58\u4e2d\u7684\u6240\u6709\u6570\u636e\u8bfb\u51fa*/\n            printf("event trigger once\\n");\n            while(1)\n            {\n                memset(buf,\'\\0\',BUFFER_SIZE);\n                int ret=recv(sockfd,buf,BUFFER_SIZE-1,0);\n                if(ret\uff1c0)\n                {\n                    /*\u5bf9\u4e8e\u975e\u963b\u585eIO\uff0c\u4e0b\u9762\u7684\u6761\u4ef6\u6210\u7acb\u8868\u793a\u6570\u636e\u5df2\u7ecf\u5168\u90e8\u8bfb\u53d6\u5b8c\u6bd5\u3002\u6b64\u540e\uff0cepoll\u5c31\u80fd\u518d\u6b21\u89e6\u53d1sockfd\u4e0a\u7684EPOLLIN\u4e8b\u4ef6\uff0c\u4ee5\u9a71\u52a8\u4e0b\u4e00\u6b21\u8bfb\u64cd\u4f5c*/\n                    if((errno==EAGAIN)||(errno==EWOULDBLOCK))\n                    {\n                        printf("read later\\n");\n                        break;\n                    }\n                    close(sockfd);\n                    break;\n                }\n                else if(ret==0)\n                {\n                    close(sockfd);\n                }\n                else\n                {\n                    printf("get%d bytes of content:%s\\n",ret,buf);\n                }\n            }\n        }\n        else\n        {\n            printf("something else happened\\n");\n        }\n    }\n}\nint main(int argc,char*argv[])\n{\n    if(argc\uff1c=2)\n    {\n        printf("usage:%s ip_address port_number\\n",basename(argv[0]));\n        return 1;\n    }\n    const char*ip=argv[1];\n    int port=atoi(argv[2]);\n    int ret=0;\n    struct sockaddr_in address;\n    bzero(\uff06address,sizeof(address));\n    address.sin_family=AF_INET;\n    inet_pton(AF_INET,ip,\uff06address.sin_addr);\n    address.sin_port=htons(port);\n    int listenfd=socket(PF_INET,SOCK_STREAM,0);\n    assert(listenfd\uff1e=0);\n    ret=bind(listenfd,(struct sockaddr*)\uff06address,sizeof(address));\n    assert(ret!=-1);\n    ret=listen(listenfd,5);\n    assert(ret!=-1);\n    epoll_event events[MAX_EVENT_NUMBER];\n    int epollfd=epoll_create(5);\n    assert(epollfd!=-1);\n    addfd(epollfd,listenfd,true);\n    while(1)\n    {\n        int ret=epoll_wait(epollfd,events,MAX_EVENT_NUMBER,-1);\n        if(ret\uff1c0)\n        {\n            printf("epoll failure\\n");\n            break;\n        }\n        lt(events,ret,epollfd,listenfd);/*\u4f7f\u7528LT\u6a21\u5f0f*/\n        //et(events,ret,epollfd,listenfd);/*\u4f7f\u7528ET\u6a21\u5f0f*/\n    }\n    close(listenfd);\n    return 0;\n}\n\n')),(0,s.kt)("p",null,"\u6ce8\u610f\uff1a\u6bcf\u4e2a\u4f7f\u7528ET\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u5e94\u8be5\u662f\u975e\u963b\u585e\u7684\u3002\u5982\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u963b\u585e\u7684\uff0c\u90a3\u4e48\u8bfb\u6216\u5199\u64cd\u4f5c\u5c06\u4f1a\u56e0\u4e3a\u6ca1\u6709\u540e\u7eed\u7684\u4e8b\u4ef6\u800c\u4e00\u76f4\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff08\u9965\u6e34\u72b6\u6001\uff09\u3002"),(0,s.kt)("h4",{id:"epolloneshot\u4e8b\u4ef6"},"EPOLLONESHOT\u4e8b\u4ef6"),(0,s.kt)("p",null,"\u4f7f\u6211\u4eec\u4f7f\u7528ET\u6a21\u5f0f\uff0c\u4e00\u4e2asocket\u4e0a\u7684\u67d0\u4e2a\u4e8b\u4ef6\u8fd8\u662f\u53ef\u80fd\u88ab\u89e6\u53d1\u591a\u6b21\u3002\u8fd9\u5728\u5e76\u53d1\u7a0b\u5e8f\u4e2d\u5c31\u4f1a\u5f15\u8d77\u4e00\u4e2a\u95ee\u9898\u3002\u6bd4\u5982\u4e00\u4e2a\u7ebf\u7a0b\uff08\u6216\u8fdb\u7a0b\uff0c\u4e0b\u540c\uff09\u5728\u8bfb\u53d6\u5b8c\u67d0\u4e2asocket\u4e0a\u7684\u6570\u636e\u540e\u5f00\u59cb\u5904\u7406\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u5728\u6570\u636e\u7684\u5904\u7406\u8fc7\u7a0b\u4e2d\u8be5socket\u4e0a\u53c8\u6709\u65b0\u6570\u636e\u53ef\u8bfb\uff08EPOLLIN\u518d\u6b21\u88ab\u89e6\u53d1\uff09\uff0c\u6b64\u65f6\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u5524\u9192\u6765\u8bfb\u53d6\u8fd9\u4e9b\u65b0\u7684\u6570\u636e\u3002\u4e8e\u662f\u5c31\u51fa\u73b0\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u4e00\u4e2asocket\u7684\u5c40\u9762\u3002\u8fd9\u5f53\u7136\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684\u3002\u6211\u4eec\u671f\u671b\u7684\u662f\u4e00\u4e2asocket\u8fde\u63a5\u5728\u4efb\u4e00\u65f6\u523b\u90fd\u53ea\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406\u3002"),(0,s.kt)("p",null,"\u5bf9\u4e8e\u6ce8\u518c\u4e86EPOLLONESHOT\u4e8b\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6700\u591a\u89e6\u53d1\u5176\u4e0a\u6ce8\u518c\u7684\u4e00\u4e2a\u53ef\u8bfb\u3001\u53ef\u5199\u6216\u8005\u5f02\u5e38\u4e8b\u4ef6\uff0c\u4e14\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u9664\u975e\u6211\u4eec\u4f7f\u7528epoll_ctl\u51fd\u6570\u91cd\u7f6e\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u6ce8\u518c\u7684EPOLLONESHOT\u4e8b\u4ef6\u3002"),(0,s.kt)("p",null,"\u8fd9\u6837\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5904\u7406\u67d0\u4e2asocket\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u662f\u4e0d\u53ef\u80fd\u6709\u673a\u4f1a\u64cd\u4f5c\u8be5socket\u7684\u3002\u4f46\u53cd\u8fc7\u6765\u601d\u8003\uff0c\u6ce8\u518c\u4e86EPOLLONESHOT\u4e8b\u4ef6\u7684socket\u4e00\u65e6\u88ab\u67d0\u4e2a\u7ebf\u7a0b\u5904\u7406\u5b8c\u6bd5\uff0c\u8be5\u7ebf\u7a0b\u5c31\u5e94\u8be5\u7acb\u5373\u91cd\u7f6e\u8fd9\u4e2asocket\u4e0a\u7684EPOLLONESHOT\u4e8b\u4ef6\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e2asocket\u4e0b\u4e00\u6b21\u53ef\u8bfb\u65f6\uff0c\u5176EPOLLIN\u4e8b\u4ef6\u80fd\u88ab\u89e6\u53d1\uff0c\u8fdb\u800c\u8ba9\u5176\u4ed6\u5de5\u4f5c\u7ebf\u7a0b\u6709\u673a\u4f1a\u7ee7\u7eed\u5904\u7406\u8fd9\u4e2asocket\u3002"),(0,s.kt)("h3",{id:"\u4e09\u7ec4io\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83"},"\u4e09\u7ec4I/O\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83"),(0,s.kt)("p",null,"select\u3001poll\u548cepoll\u4e09\u7ec4I/O\u590d\u7528\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd93\u7ec4\u7cfb\u7edf\u8c03\u7528\u90fd\u80fd\u540c\u65f6\u76d1\u542c\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b83\u4eec\u5c06\u7b49\u5f85\u7531timeout\u53c2\u6570\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u76f4\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u65f6\u8fd4\u56de\uff0c\u8fd4\u56de\u503c\u662f\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\u3002\u8fd4\u56de0\u8868\u793a\u6ca1\u6709\u4e8b\u4ef6\u53d1\u751f\u3002"),(0,s.kt)("p",null,"\u4e8b\u4ef6\u96c6\u3001\u6700\u5927\u652f\u6301\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u3001\u5de5\u4f5c\u6a21\u5f0f\u548c\u5177\u4f53\u5b9e\u73b0\u7b49\u56db\u4e2a\u65b9\u9762\u8fdb\u4e00\u6b65\u6bd4\u8f83\u5b83\u4eec\u7684\u5f02\u540c"),(0,s.kt)("p",null,"3\u7ec4\u51fd\u6570\u90fd\u901a\u8fc7\u67d0\u79cd\u7ed3\u6784\u4f53\u53d8\u91cf\u6765\u544a\u8bc9\u5185\u6838\u76d1\u542c\u54ea\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u54ea\u4e9b\u4e8b\u4ef6\uff0c\u5e76\u4f7f\u7528\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u53c2\u6570\u6765\u83b7\u53d6\u5185\u6838\u5904\u7406\u7684\u7ed3\u679c\u3002"),(0,s.kt)("p",null,"select\u7684\u53c2\u6570\u7c7b\u578bfd_set\u6ca1\u6709\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u4e8b\u4ef6\u7ed1\u5b9a\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff0c\u56e0\u6b64select\u9700\u8981\u63d0\u4f9b3\u4e2a\u8fd9\u79cd\u7c7b\u578b\u7684\u53c2\u6570\u6765\u5206\u522b\u4f20\u5165\u548c\u8f93\u51fa\u53ef\u8bfb\u3001\u53ef\u5199\u53ca\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002\u8fd9\u4e00\u65b9\u9762\u4f7f\u5f97select\u4e0d\u80fd\u5904\u7406\u66f4\u591a\u7c7b\u578b\u7684\u4e8b\u4ef6\uff0c\u53e6\u4e00\u65b9\u9762\u7531\u4e8e\u5185\u6838\u5bf9fd_set\u96c6\u5408\u7684\u5728\u7ebf\u4fee\u6539\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0b\u6b21\u8c03\u7528select\u524d\u4e0d\u5f97\u4e0d\u91cd\u7f6e\u8fd93\u4e2afd_set\u96c6\u5408\u3002"),(0,s.kt)("p",null,"pollfd\u5b83\u628a\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u4e8b\u4ef6\u90fd\u5b9a\u4e49\u5176\u4e2d\uff0c\u4efb\u4f55\u4e8b\u4ef6\u90fd\u88ab\u7edf\u4e00\u5904\u7406\uff0c\u4ece\u800c\u4f7f\u5f97\u7f16\u7a0b\u63a5\u53e3\u7b80\u6d01\u5f97\u591a\u3002\u5e76\u4e14\u5185\u6838\u6bcf\u6b21\u4fee\u6539\u7684\u662fpollfd\u7ed3\u6784\u4f53\u7684revents\u6210\u5458\uff0c\u800cevents\u6210\u5458\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u6b64\u4e0b\u6b21\u8c03\u7528poll\u65f6\u5e94\u7528\u7a0b\u5e8f\u65e0\u987b\u91cd\u7f6epollfd\u7c7b\u578b\u7684\u4e8b\u4ef6\u96c6\u53c2\u6570\u3002"),(0,s.kt)("p",null,"\u7531\u4e8e\u6bcf\u6b21select\u548cpoll\u8c03\u7528\u90fd\u8fd4\u56de\u6574\u4e2a\u7528\u6237\u6ce8\u518c\u7684\u4e8b\u4ef6\u96c6\u5408\uff08\u5176\u4e2d\u5305\u62ec\u5c31\u7eea\u7684\u548c\u672a\u5c31\u7eea\u7684\uff09\uff0c\u6240\u4ee5\u5e94\u7528\u7a0b\u5e8f\u7d22\u5f15\u5c31\u7eea\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\uff09\u3002"),(0,s.kt)("p",null,"epoll\u5b83\u5728\u5185\u6838\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u4e8b\u4ef6\u8868\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\u8c03\u7528epoll_ctl\u6765\u63a7\u5236\u5f80\u5176\u4e2d\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u4e8b\u4ef6\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21epoll_wait\u8c03\u7528\u90fd\u76f4\u63a5\u4ece\u8be5\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u53d6\u5f97\u7528\u6237\u6ce8\u518c\u7684\u4e8b\u4ef6\uff0c\u800c\u65e0\u987b\u53cd\u590d\u4ece\u7528\u6237\u7a7a\u95f4\u8bfb\u5165\u8fd9\u4e9b\u4e8b\u4ef6\u3002epoll_wait\u7cfb\u7edf\u8c03\u7528\u7684events\u53c2\u6570\u4ec5\u7528\u6765\u8fd4\u56de\u5c31\u7eea\u7684\u4e8b\u4ef6\uff0c\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u7d22\u5f15\u5c31\u7eea\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230O\uff081\uff09\u3002"),(0,s.kt)("p",null,"poll\u548cepoll_wait\u5206\u522b\u7528nfds\u548cmaxevents\u53c2\u6570\u6307\u5b9a\u6700\u591a\u76d1\u542c\u591a\u5c11\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u4e8b\u4ef6\u3002\u8fd9\u4e24\u4e2a\u6570\u503c\u90fd\u80fd\u8fbe\u5230\u7cfb\u7edf\u5141\u8bb8\u6253\u5f00\u7684\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u537365 535\uff08cat/proc/sys/fs/file-max\uff09\u3002\u800cselect\u5141\u8bb8\u76d1\u542c\u7684\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u901a\u5e38\u6709\u9650\u5236\u3002\u867d\u7136\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u9650\u5236\uff0c\u4f46\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4e0d\u53ef\u9884\u671f\u7684\u540e\u679c\u3002"),(0,s.kt)("p",null,"select\u548cpoll\u90fd\u53ea\u80fd\u5de5\u4f5c\u5728\u76f8\u5bf9\u4f4e\u6548\u7684LT\u6a21\u5f0f\uff0c\u800cepoll\u5219\u53ef\u4ee5\u5de5\u4f5c\u5728ET\u9ad8\u6548\u6a21\u5f0f\u3002\u5e76\u4e14epoll\u8fd8\u652f\u6301EPOLLONESHOT\u4e8b\u4ef6\u3002\u8be5\u4e8b\u4ef6\u80fd\u8fdb\u4e00\u6b65\u51cf\u5c11\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u88ab\u89e6\u53d1\u7684\u6b21\u6570\u3002"),(0,s.kt)("p",null,"\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff0cselect\u548cpoll\u91c7\u7528\u7684\u90fd\u662f\u8f6e\u8be2\u7684\u65b9\u5f0f\uff0c\u5373\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u626b\u63cf\u6574\u4e2a\u6ce8\u518c\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff0c\u5e76\u5c06\u5176\u4e2d\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fd4\u56de\u7ed9\u7528\u6237\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5b83\u4eec\u68c0\u6d4b\u5c31\u7eea\u4e8b\u4ef6\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08n\uff09\u3002epoll_wait\u5219\u4e0d\u540c\uff0c\u5b83\u91c7\u7528\u7684\u662f\u56de\u8c03\u7684\u65b9\u5f0f\u3002\u5185\u6838\u68c0\u6d4b\u5230\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\uff0c\u5c06\u89e6\u53d1\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u5c31\u5c06\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u5bf9\u5e94\u7684\u4e8b\u4ef6\u63d2\u5165\u5185\u6838\u5c31\u7eea\u4e8b\u4ef6\u961f\u5217\u3002\u5185\u6838\u6700\u540e\u5728\u9002\u5f53\u7684\u65f6\u673a\u5c06\u8be5\u5c31\u7eea\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\u3002\u56e0\u6b64epoll_wait\u65e0\u987b\u8f6e\u8be2\u6574\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u6765\u68c0\u6d4b\u54ea\u4e9b\u4e8b\u4ef6\u5df2\u7ecf\u5c31\u7eea\uff0c\u5176\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff081\uff09\u3002\u4f46\u662f\uff0c\u5f53\u6d3b\u52a8\u8fde\u63a5\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0cepoll_wait\u7684\u6548\u7387\u672a\u5fc5\u6bd4select\u548cpoll\u9ad8\uff0c\u56e0\u4e3a\u6b64\u65f6\u56de\u8c03\u51fd\u6570\u88ab\u89e6\u53d1\u5f97\u8fc7\u4e8e\u9891\u7e41\u3002\u6240\u4ee5epoll_wait\u9002\u7528\u4e8e\u8fde\u63a5\u6570\u91cf\u591a\uff0c\u4f46\u6d3b\u52a8\u8fde\u63a5\u8f83\u5c11\u7684\u60c5\u51b5"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"image-20210909210909099",src:t(89432).Z})))}a.isMDXComponent=!0},65932:function(e,n,t){"use strict";n.Z=t.p+"assets/images/image-20210909200834042-b333ed62f743fd7752a9e986c62079e7.png"},9451:function(e,n,t){"use strict";n.Z=t.p+"assets/images/image-20210909200846957-6657553fbe4b4d5ca752cec0edcbcdab.png"},89432:function(e,n,t){"use strict";n.Z=t.p+"assets/images/image-20210909210909099-3f9652e523ce95836e1e98cf5f25f647.png"}}]);