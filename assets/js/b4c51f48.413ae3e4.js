(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7653],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return k}});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=p(t),k=l,d=m["".concat(o,".").concat(k)]||m[k]||s[k]||a;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=m;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u.mdxType="string"==typeof e?e:l,i[1]=u;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},40485:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return u},metadata:function(){return o},toc:function(){return p},default:function(){return s}});var r=t(22122),l=t(19756),a=(t(67294),t(3905)),i=["components"],u={id:"A15.\u4f4d\u56fe\u548c\u8df3\u8868",title:"A15.\u4f4d\u56fe\u548c\u8df3\u8868","typora-root-url":"../"},o={unversionedId:"Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868",id:"Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868",isDocsHomePage:!1,title:"A15.\u4f4d\u56fe\u548c\u8df3\u8868",description:"\u8df3\u8868",source:"@site/docs/2.Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868",permalink:"/Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/A15.\u4f4d\u56fe\u548c\u8df3\u8868.md",version:"current",frontMatter:{id:"A15.\u4f4d\u56fe\u548c\u8df3\u8868",title:"A15.\u4f4d\u56fe\u548c\u8df3\u8868","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u56fe",permalink:"/Algorithm/A12.\u56fe\u8bba"},next:{title:"[LRU](https://leetcode-cn.com/problems/lru-cache/)",permalink:"/Algorithm/A99.\u5b9e\u73b0ADT"}},p=[{value:"\u8df3\u8868",id:"\u8df3\u8868",children:[{value:"\u57fa\u672c\u601d\u60f3",id:"\u57fa\u672c\u601d\u60f3",children:[]},{value:"\u8df3\u8868\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664",id:"\u8df3\u8868\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664",children:[]},{value:"\u8df3\u8868\u548c\u7ea2\u9ed1\u6811\u7684\u5bf9\u6bd4",id:"\u8df3\u8868\u548c\u7ea2\u9ed1\u6811\u7684\u5bf9\u6bd4",children:[]},{value:"SkipList\u5b9e\u73b0",id:"skiplist\u5b9e\u73b0",children:[]}]},{value:"\u4f4d\u56fe",id:"\u4f4d\u56fe",children:[{value:"\u57fa\u672c\u601d\u60f3",id:"\u57fa\u672c\u601d\u60f3-1",children:[]},{value:"\u7528\u9014",id:"\u7528\u9014",children:[]},{value:"map\u6620\u5c04\u8868",id:"map\u6620\u5c04\u8868",children:[]},{value:"\u5e94\u7528",id:"\u5e94\u7528",children:[]},{value:"\u6269\u5c55-\u5e03\u9686\u8fc7\u6ee4\u5668",id:"\u6269\u5c55-\u5e03\u9686\u8fc7\u6ee4\u5668",children:[]}]}],c={toc:p};function s(e){var n=e.components,t=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u8df3\u8868"},(0,a.kt)("a",{parentName:"h2",href:"https://www.cnblogs.com/a8457013/p/8251967.html"},"\u8df3\u8868")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6O(logn)\uff0c\u63d2\u5165\u3001\u5220\u9664\u65f6\u95f4\u590d\u6742\u5ea6O(logn)"),(0,a.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u6709\u5e8f\u94fe\u8868\u7684\u67e5\u627e\uff0c\u7c7b\u4f3c\u4e8c\u5206\u67e5\u627e\u64cd\u4f5c\u7684\u94fe\u8868")),(0,a.kt)("h3",{id:"\u57fa\u672c\u601d\u60f3"},"\u57fa\u672c\u601d\u60f3"),(0,a.kt)("p",null,"\u628a\u94fe\u8868\u4e2d\u7684\u4e00\u4e9b\u8282\u70b9\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u7d22\u5f15\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u53ef\u4ee5\u9010\u7ea7\u63d0\u53d6\u4f5c\u4e3a\u7d22\u5f15"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u539f\u59cb\u94fe\u8868"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"14 \u2192 23 \u2192 34 \u2192 43 \u2192 50 \u2192 59 \u2192 66 \u2192 72"),(0,a.kt)("li",{parentName:"ul"},"\u539f\u59cb\u94fe\u8868\u67e5\u627e\u590d\u6742\u5ea6O(n)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8df3\u8868"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6027\u8d28",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u7531\u5f88\u591a\u5c42\u7ed3\u6784\u7ec4\u6210"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e00\u5c42\u90fd\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u94fe\u8868"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u5e95\u5c42(Level 1)\u7684\u94fe\u8868\u5305\u542b\u6240\u6709\u5143\u7d20"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u51fa\u73b0\u5728 Level i \u7684\u94fe\u8868\u4e2d\uff0c\u5219\u5b83\u5728 Level i \u4e4b\u4e0b\u7684\u94fe\u8868\u4e5f\u90fd\u4f1a\u51fa\u73b0\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u540c\u4e00\u94fe\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u4e00\u4e2a\u6307\u5411\u4e0b\u9762\u4e00\u5c42\u7684\u5143\u7d20\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u539f\u59cb\u94fe\u8868\u8f6c\u6362\u6210\u8df3\u8868")),(0,a.kt)("p",{parentName:"li"},"14 \u2003\u2002 \u2003\u2003\u2002\u2192\u2002\u2003\u2003\u2003\u200350"),(0,a.kt)("p",{parentName:"li"},"\u2002\u2193\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\u2193"),(0,a.kt)("p",{parentName:"li"},"14\u2003\u2003\u2192\u2003\u200234\u2003\u2002\u2192\u2003\u200350\u2003\u2002\u2192\u2003\u200366"),(0,a.kt)("p",{parentName:"li"},"\u2002\u2193\u2003\u2003\u2003\u2003\u2003\u2193\u2003\u2003\u2003\u2003\u2003\u2193\u2003\u2003\u2003\u2003\u2003\u2193"),(0,a.kt)("p",{parentName:"li"},"14 \u2192 23 \u2192 34 \u2192 43 \u2192 50 \u2192 59 \u2192 66 \u2192 72"),(0,a.kt)("p",{parentName:"li"},"\u7b2c\u4e8c\u7ea7\u7d22\u5f15 - \u7b2c\u4e00\u7ea7\u7d22\u5f15 - \u539f\u59cb\u94fe\u8868"))),(0,a.kt)("h3",{id:"\u8df3\u8868\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664"},(0,a.kt)("a",{parentName:"h3",href:"https://www.cnblogs.com/seniusen/p/9870398.html"},"\u8df3\u8868\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u67e5\u627e",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn)"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u94fe\u8868\u4e2d\u603b\u5171\u6709 n \u4e2a\u7ed3\u70b9\uff0c\u90a3\u4e48\u7b2c\u4e00\u7ea7\u7d22\u5f15\u5c31\u6709 n/2 \u4e2a\u7ed3\u70b9\uff0c\u7b2c\u4e8c\u7ea7\u7d22\u5f15\u5c31\u6709 n/4 \u4e2a\u7ed3\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u7b2c k \u7ea7\u7d22\u5f15\u5c31\u6709  n/(2^k) \u4e2a\u7ed3\u70b9\u3002\u5982\u679c\u6700\u9ad8\u7ea7\u7d22\u5f15\u6709 2 \u4e2a\u7ed3\u70b9\uff0c\u90a3\u603b\u7684\u7d22\u5f15\u7ea7\u6570 k=log2n\u22121\uff0c\u5982\u679c\u6211\u4eec\u7b97\u4e0a\u539f\u59cb\u94fe\u8868\u7684\u8bdd\uff0c\u90a3\u4e5f\u5c31\u662f\u603b\u5171\u6709 log2n  \u7ea7\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u63d2\u5165",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5148\u67e5\u627e\u518d\u63d2\u5165\uff0c\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6O(logn)"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6211\u4eec\u4e0d\u505c\u5730\u5f80\u8df3\u8868\u4e2d\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u66f4\u65b0\u7d22\u5f15\uff0c\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u67d0\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u6570\u636e\u975e\u5e38\u591a\u7684\u60c5\u51b5\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u8df3\u8868\u8fd8\u4f1a\u9000\u5316\u4e3a\u5355\u94fe\u8868\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6211\u4eec\u9700\u8981\u67d0\u79cd\u624b\u6bb5\u6765\u7ef4\u62a4\u7d22\u5f15\u4e0e\u539f\u59cb\u94fe\u8868\u5927\u5c0f\u4e4b\u95f4\u7684\u5e73\u8861\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u94fe\u8868\u7ed3\u70b9\u53d8\u591a\u4e86\uff0c\u7d22\u5f15\u503c\u5c31\u76f8\u5e94\u5730\u589e\u52a0\u4e00\u4e9b"),(0,a.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u9009\u62e9\u540c\u65f6\u4e5f\u5c06\u8fd9\u4e2a\u6570\u636e\u63d2\u5165\u5230\u90e8\u5206\u7d22\u5f15\u5c42\u4e2d\u3002\u800c\u63d2\u5165\u5230\u54ea\u4e9b\u7d22\u5f15\u5c42\u4e2d\uff0c\u5219\u7531\u4e00\u4e2a\u968f\u673a\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u5b57\u6765\u51b3\u5b9a")))),(0,a.kt)("h3",{id:"\u8df3\u8868\u548c\u7ea2\u9ed1\u6811\u7684\u5bf9\u6bd4"},"\u8df3\u8868\u548c\u7ea2\u9ed1\u6811\u7684\u5bf9\u6bd4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e\u4ee5\u53ca\u8fed\u4ee3\u8f93\u51fa\u6709\u5e8f\u5e8f\u5217\u8fd9\u51e0\u4e2a\u64cd\u4f5c\uff0c\u7ea2\u9ed1\u6811\u4e5f\u53ef\u4ee5\u5b8c\u6210\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u8df3\u8868\u662f\u4e00\u6837"),(0,a.kt)("li",{parentName:"ul"},"\u8df3\u8868\u7684\u4f18\u70b9",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u4ee3\u7801\u76f8\u5bf9\u7b80\u5355"),(0,a.kt)("li",{parentName:"ul"},"\u6309\u7167\u533a\u95f4\u67e5\u627e\u6570\u636e\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u7ea2\u9ed1\u6811\u7684\u6548\u7387\u6ca1\u6709\u8df3\u8868\u9ad8\u3002\u8df3\u8868\u53ef\u4ee5\u5728 O(logn) \u65f6\u95f4\u590d\u6742\u5ea6\u5b9a\u4f4d\u533a\u95f4\u7684\u8d77\u70b9\uff0c\u7136\u540e\u5728\u539f\u59cb\u94fe\u8868\u4e2d\u987a\u5e8f\u5411\u540e\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u975e\u5e38\u9ad8\u6548\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5220\u9664\u4e00\u6bb5\u533a\u95f4\u7684\u6570\u636e\uff0c\u76f8\u5bf9\u4e8e\u7ea2\u9ed1\u6811\u5bb9\u6613")))),(0,a.kt)("h3",{id:"skiplist\u5b9e\u73b0"},"SkipList\u5b9e\u73b0"),(0,a.kt)("p",null,"// \u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u5b9e\u73b0\u65b9\u5f0f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#pragma once\n#include <limits>\n#include <random>\n#include <vector>\n\ntemplate<typename K, typename V> class SkipList;\n\ntemplate<typename K, typename V> \nclass Node { \npublic:\n    Node(K key, V value, size_t level) \n    : key_(key), \n      value_(value), \n      nexts_(level, nullptr)\n    { }\n    \n    K key() const   { return key_;  } \n    V value() const { return value_;}\nprivate:\n    friend class SkipList<K, V>;\n\n    K key_;\n    V value_;\n    std::vector<Node<K,V>*> nexts_;\n};\n\ntemplate<typename K, typename V>\nclass SkipList { \npublic:\n    SkipList()\n    : head_(new Node<K, V>(MINVALUE, 0, MAXLEVEL+1)),   // head \u8bbe\u7f6e\u4e3a\u6700\u5c0f\u503c\uff0cMAXLEVEL+1 \u6700\u9ad8\u4e00\u5c42\u662f\u56e0\u4e3a\u6700\u4e0a\u9762\u53ea\u6709 head -> tail\n      tail_(new Node<K, V>(MAXVALUE, 0, MAXLEVEL+1)),   // tail \u8bbe\u7f6e\u4e3a\u6700\u5927\u503c\n      levels_(0),\n      nodeCount_(0)\n    { \n      std::fill_n(head_->nexts_.begin(), MAXLEVEL+1, tail_);\n    }\n\n    ~SkipList() { \n        Node<K, V>* curr = head_;\n        Node<K, V>* next;\n\n        while(curr) { \n            next = curr->nexts_[0]; \n            delete curr;\n            curr = next;\n        }\n        curr  = nullptr;\n        head_ = nullptr;\n    }\n\n    SkipList(const SkipList& rhs)      = delete; // \u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9e\u73b0\n    SkipList& operator=(SkipList& rhs) = delete; // \u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9e\u73b0\n\n    Node<K, V>* search(const K& key) const { \n        Node<K, V>* curr = head_;\n\n        for(int i=levels_-1; i >=0; --i) { \n            while(curr->nexts_[i]->key_ < key) \n            { \n                curr = curr->nexts_[i];\n            }\n        }\n\n        curr = curr->nexts_[0];\n        return curr->key_ == key ? curr : nullptr;\n    }\n\n    bool insert(const K& key, const V& value) { \n        if(this->search(key)) return false;\n\n        int nodeLevels      = randomLevel();\n        Node<K, V>* newNode = new Node<K, V>(key, value, nodeLevels+1);\n        Node<K, V>* curr    = head_;\n\n        for(int i= nodeLevels; i >=0; --i) { \n            while(curr->nexts_[i]->key_ < key) \n            {\n                curr = curr->nexts_[i];\n            }\n\n            newNode->nexts_[i] = curr->nexts_[i];\n            curr->nexts_[i]    = newNode;\n        }\n        \n        if(nodeLevels > levels_)  levels_ = nodeLevels;\n        ++nodeCount_;\n        return true;\n    }\n\n    bool remove(const K& key) { \n        Node<K, V>* node = this->search(key);\n        if(node ==nullptr) return false;\n\n        Node<K, V>* curr = head_;\n        int levels = node->nexts_.size();\n\n        for(int i= levels-1; i >=0; --i) { \n            while(curr->nexts_[i]->key_ < key) \n            {\n                curr = curr->nexts_[i];\n            }\n            curr->nexts_[i] = curr->nexts_[i]->nexts_[i];\n        }\n\n        delete node; node = nullptr;\n        --nodeCount_;\n        return true;\n    }\n\n    int size() const { return nodeCount_; }\nprivate:\n    int randomLevel() { \n        size_t randomLevel = 0;\n        std::random_device rd;\n        static std::default_random_engine         engine(rd());\n        static std::uniform_int_distribution<int> distr(0, 1);\n\n        while(distr(engine) && randomLevel < MAXLEVEL) { \n            ++randomLevel;\n        }\n\n        return randomLevel;\n    }\n\n    Node<K, V>* head_;  // \u94fe\u8868\u5934\u90e8\n    Node<K, V>* tail_;  // \u94fe\u8868\u5c3e\u90e8\n    int levels_;        // \u8fd9\u4e2a\u8df3\u8868\u5b9e\u9645\u6709\u6570\u636e\u7684\u6700\u9ad8\u5c42\u6570\n    int nodeCount_;     // \u94fe\u8868\u7684\u8282\u70b9\u4e2a\u6570\n\n    static constexpr const size_t MAXLEVEL = 4;\n    static constexpr const K      MAXVALUE = std::numeric_limits<K>::max();  // \u952e\u503c\u7c7b\u578b\u6700\u5927\u503c\n    static constexpr const K      MINVALUE = std::numeric_limits<K>::min();  // \u952e\u503c\u7c7b\u578b\u6700\u5c0f\u503c\n};\n")),(0,a.kt)("h2",{id:"\u4f4d\u56fe"},(0,a.kt)("a",{parentName:"h2",href:"https://blog.csdn.net/moakun/article/details/79927791"},"\u4f4d\u56fe")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://blog.csdn.net/varyall/article/details/79662029"},"\u4f4d\u56fe\u4e00"),"\u3001",(0,a.kt)("a",{parentName:"p",href:"https://blog.csdn.net/wypblog/article/details/8237956"},"\u4f4d\u56fe\u4e8c")),(0,a.kt)("h3",{id:"\u57fa\u672c\u601d\u60f3-1"},"\u57fa\u672c\u601d\u60f3"),(0,a.kt)("p",null,"bitmap(\u4f4d\u56fe)\uff0c\u6bcf\u4e00\u4f4d\u5b58\u653e\u67d0\u79cd\u72b6\u6001\uff0c\u901a\u5e38\u7528\u6765\u5224\u65ad\u67d0\u4e2a\u6570\u636e\u662f\u5426\u5b58\u5728\u300232\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u578bint\u5728\u5185\u5b58\u4e2d\u536032bit(4 byte = 4 * 8 bit)\uff0c\u53ef\u4ee5\u7528\u5bf9\u5e94\u768432bit\u5bf9\u5e94\u5341\u8fdb\u5236\u76840-31\u4e2a\u6570\u3002"),(0,a.kt)("h3",{id:"\u7528\u9014"},"\u7528\u9014"),(0,a.kt)("p",null,"\u6392\u5e8f\uff0c\u53bb\u91cd\uff0c\u67e5\u627e"),(0,a.kt)("h3",{id:"map\u6620\u5c04\u8868"},"map\u6620\u5c04\u8868"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u57fa\u672c\u601d\u60f3")," \u5047\u8bbe\u9700\u8981\u6392\u5e8f\u6216\u8005\u67e5\u627e\u7684\u603b\u6570N=10000000\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\u4e3a",(0,a.kt)("strong",{parentName:"p"},"int a","[1 + N/32]"),"\uff0c\u5176\u4e2da","[0]","\u5728\u5185\u5b58\u4e2d\u536032\u4e3a\u53ef\u4ee5\u5bf9\u5e94\u5341\u8fdb\u5236\u65700-31\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff1a bitmap\u8868\u4e3a\uff1a a","[0]","---------\x3e0-31 a","[1]","---------\x3e32-63 a","[2]","---------\x3e64-95 a","[3]","---------\x3e96-127 .........."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f4d\u6620\u5c04\u6b65\u9aa4")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6c42\u5341\u8fdb\u52360-N\u5bf9\u5e94\u5728\u6570\u7ec4a\u4e2d\u7684\u4e0b\u6807\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5341\u8fdb\u52360-31\uff0c\u5bf9\u5e94\u5728a","[0]","\u4e2d\uff0c\u5148\u7531\u5341\u8fdb\u5236\u6570n\u8f6c\u6362\u4e3a\u4e0e32\u7684\u6a21(\u5546)\u53ef\u8f6c\u5316\u4e3a\u5bf9\u5e94\u5728\u6570\u7ec4a\u4e2d\u7684\u4e0b\u6807\u3002\u6bd4\u5982n=24,\u90a3\u4e48  n/32=0\uff0c\u521924\u5bf9\u5e94\u5728\u6570\u7ec4a\u4e2d\u7684\u4e0b\u6807\u4e3a0\u3002\u53c8\u6bd4\u5982n=60,\u90a3\u4e48n/32=1\uff0c\u521960\u5bf9\u5e94\u5728\u6570\u7ec4a\u4e2d\u7684\u4e0b\u6807\u4e3a1\uff0c\u540c\u7406\u53ef\u4ee5\u8ba1\u7b970-N\u5728\u6570\u7ec4a\u4e2d\u7684\u4e0b\u6807\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u6c420-N\u5bf9\u5e94\u6bcf\u4e2a\u4e0b\u68070-31\u4e2d\u7684\u6570\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5341\u8fdb\u52360-31\u5c31\u5bf9\u5e940-31\uff0c\u800c32-63\u5219\u5bf9\u5e94\u4e5f\u662f0-31\uff0c\u5373\u7ed9\u5b9a\u4e00\u4e2a\u6570n\u53ef\u4ee5\u901a\u8fc7\u6a2132\u7684\u4f59\u6570\u6c42\u5f97\u5bf9\u5e940-31\u4e2d\u7684\u6570\u3002"))),(0,a.kt)("li",{parentName:"ul"},"\u5229\u7528\u79fb\u4f4d0-31\u4f7f\u5f97\u5bf9\u5e94\u4f4d\u4e3a1.")),(0,a.kt)("h3",{id:"\u5e94\u7528"},"\u5e94\u7528"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2.5\u4ebf\u4e2a\u6574\u6570\u4e2d\u627e\u51fa\u4e0d\u91cd\u590d\u7684\u6574\u6570\u7684\u4e2a\u6570\uff0c\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u8fd92.5\u4ebf\u4e2a\u6574\u6570\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u201c\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u8fd92.5\u4ebf\u4e2a\u6574\u6570\u201d\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u7684\u8054\u60f3\u5230Bit-map")),(0,a.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u4e24\u4e2a\u4f4d\u56fe",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u7b2c\u4e00\u4e2aBitmap\u5b58\u50a8\u7684\u662f\u6574\u6570\u662f\u5426\u51fa\u73b0"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u518d\u6b21\u51fa\u73b0\uff0c\u5219\u5728\u7b2c\u4e8c\u4e2aBitmap\u4e2d\u8bbe\u7f6e"))),(0,a.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u4e00\u4e2a\u4f4d\u56fe",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u904d\u5386\u4e00\u6b21\u8fd92.5\u4ebf\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u5bf9\u5e94\u7684\u72b6\u6001\u4f4d\u4e3a00\uff0c\u5219\u5c06\u5176\u53d8\u4e3a01\uff1b\u5982\u679c\u5bf9\u5e94\u7684\u72b6\u6001\u4f4d\u4e3a01\uff0c\u5219\u5c06\u5176\u53d8\u4e3a11\uff1b\u5982\u679c\u4e3a11\uff0c,\u5bf9\u5e94\u7684\u8f6c\u6001\u4f4d\u4fdd\u6301\u4e0d\u53d8\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u540e\uff0c\u6211\u4eec\u5c06\u72b6\u6001\u4f4d\u4e3a01\u7684\u8fdb\u884c\u7edf\u8ba1\uff0c\u5c31\u5f97\u5230\u4e86\u4e0d\u91cd\u590d\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002")))))),(0,a.kt)("h3",{id:"\u6269\u5c55-\u5e03\u9686\u8fc7\u6ee4\u5668"},"\u6269\u5c55-\u5e03\u9686\u8fc7\u6ee4\u5668"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u57fa\u672c\u601d\u60f3")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u4e00\u4e2a\u5143\u7d20\u88ab\u52a0\u5165\u96c6\u5408\u4e2d\u65f6,\u901a\u8fc7k\u4e2a\u6563\u5217\u51fd\u6570\u5c06\u8fd9\u4e2a\u5143\u7d20\u6620\u5c04\u6210\u4e00\u4e2a\u4f4d\u6570\u7ec4\u4e2d\u7684k\u4e2a\u70b9,\u5e76\u5c06\u8fd9k\u4e2a\u70b9\u5168\u90e8\u7f6e\u4e3a1."),(0,a.kt)("li",{parentName:"ul"},"Bloom Filter\u4f7f\u7528k\u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u54c8\u5e0c\u51fd\u6570\uff08Hash  Function\uff09\uff0c\u5b83\u4eec\u5206\u522b\u5c06\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u6620\u5c04\u5230{1,\u2026,m}\u7684\u8303\u56f4\u4e2d\u3002\u5bf9\u4efb\u610f\u4e00\u4e2a\u5143\u7d20x\uff0c\u7b2ci\u4e2a\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u7684\u4f4d\u7f6ehi(x)\u5c31\u4f1a\u88ab\u7f6e\u4e3a1\uff081\u2264i\u2264k\uff09\u3002\u6ce8\uff1a\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6e\u591a\u6b21\u88ab\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u53ea\u6709\u7b2c\u4e00\u6b21\u4f1a\u8d77\u4f5c\u7528\uff0c\u540e\u9762\u51e0\u6b21\u5c06\u6ca1\u6709\u4efb\u4f55\u6548\u679c\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5728\u5224\u65ady\u662f\u5426\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\u65f6\uff0c\u5bf9y\u5e94\u7528k\u6b21\u54c8\u5e0c\u51fd\u6570\uff0c\u82e5\u6240\u6709hi(y)\u7684\u4f4d\u7f6e\u90fd\u662f1\uff081\u2264i\u2264k\uff09\uff0c\u5c31\u8ba4\u4e3ay\u662f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u5426\u5219\u5c31\u8ba4\u4e3ay\u4e0d\u662f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u7f3a\u70b9")),(0,a.kt)("p",null,"\u6709\u4e00\u5b9a\u7684\u8bef\u5224\u7387\uff0c\u5f53\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\uff0c\u6709\u53ef\u80fd\u662f\u5176\u4ed6\u7684\u5143\u7d20\u7684\u4f4d\uff1b\u82e5\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u8be5\u5143\u7d20\uff0c\u5219\u4e00\u5b9a\u4e0d\u5b58\u5728"))}s.isMDXComponent=!0}}]);