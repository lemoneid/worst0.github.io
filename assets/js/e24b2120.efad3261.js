(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[6019],{3905:function(a,e,n){"use strict";n.d(e,{Zo:function(){return N},kt:function(){return o}});var t=n(67294);function s(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function m(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function p(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?m(Object(n),!0).forEach((function(e){s(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function r(a,e){if(null==a)return{};var n,t,s=function(a,e){if(null==a)return{};var n,t,s={},m=Object.keys(a);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||(s[n]=a[n]);return s}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(t=0;t<m.length;t++)n=m[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(s[n]=a[n])}return s}var i=t.createContext({}),l=function(a){var e=t.useContext(i),n=e;return a&&(n="function"==typeof a?a(e):p(p({},e),a)),n},N=function(a){var e=l(a.components);return t.createElement(i.Provider,{value:e},a.children)},c={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},k=t.forwardRef((function(a,e){var n=a.components,s=a.mdxType,m=a.originalType,i=a.parentName,N=r(a,["components","mdxType","originalType","parentName"]),k=l(n),o=s,h=k["".concat(i,".").concat(o)]||k[o]||c[o]||m;return n?t.createElement(h,p(p({ref:e},N),{},{components:n})):t.createElement(h,p({ref:e},N))}));function o(a,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var m=n.length,p=new Array(m);p[0]=k;var r={};for(var i in e)hasOwnProperty.call(e,i)&&(r[i]=e[i]);r.originalType=a,r.mdxType="string"==typeof a?a:s,p[1]=r;for(var l=2;l<m;l++)p[l]=n[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},59298:function(a,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return r},metadata:function(){return i},toc:function(){return l},default:function(){return c}});var t=n(22122),s=n(19756),m=(n(67294),n(3905)),p=["components"],r={id:"A1.DataStructure",title:"A1.DataStructure","typora-root-url":"../"},i={unversionedId:"Algorithm/A1.DataStructure",id:"Algorithm/A1.DataStructure",isDocsHomePage:!1,title:"\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5",description:"1.0.0.1. hzoj-372-\u53cc\u751f\u961f\u5217",source:"@site/docs/2.Algorithm/A1.Data_Structure.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/A1.DataStructure",permalink:"/Algorithm/A1.DataStructure",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/A1.Data_Structure.md",version:"current",lastUpdatedAt:1624240624,formattedLastUpdatedAt:"6/21/2021",frontMatter:{id:"A1.DataStructure",title:"A1.DataStructure","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u8bed\u8a00\u73af\u5883",permalink:"/Linux/C3.\u8bed\u8a00\u73af\u5883"},next:{title:"\u7b97\u6cd5\u8bbe\u8ba1",permalink:"/Algorithm/B1.\u7b97\u6cd5\u8bbe\u8ba1"}},l=[{value:"2.0.1. \u4ec0\u4e48\u662f\u7f16\u7801",id:"201-\u4ec0\u4e48\u662f\u7f16\u7801",children:[]},{value:"2.0.2. \u5b9a\u957f\u4e0e\u53d8\u957f\u7f16\u7801",id:"202-\u5b9a\u957f\u4e0e\u53d8\u957f\u7f16\u7801",children:[]},{value:"2.0.3. \u53d8\u957f\u7f16\u7801\u5e94\u7528\u573a\u666f",id:"203-\u53d8\u957f\u7f16\u7801\u5e94\u7528\u573a\u666f",children:[]},{value:"2.1. \u4e09\u3001\u54c8\u5f17\u66fc\u7f16\u7801",id:"21-\u4e09\u3001\u54c8\u5f17\u66fc\u7f16\u7801",children:[]},{value:"2.2. \u56db\u3001\u516c\u5f0f\u8bc1\u660e",id:"22-\u56db\u3001\u516c\u5f0f\u8bc1\u660e",children:[]},{value:"2.3. ==\u4f18\u5148\u961f\u5217-\u5806==",id:"23-\u4f18\u5148\u961f\u5217-\u5806",children:[]},{value:"2.3. ==\u4f18\u5148\u961f\u5217-\u5806==",id:"23-\u4f18\u5148\u961f\u5217-\u5806-1",children:[]},{value:"2.4. ==\u7ebf\u6027\u5efa\u5806\u6cd5==",id:"24-\u7ebf\u6027\u5efa\u5806\u6cd5",children:[]},{value:"2.5. ==HashTable==",id:"25-hashtable",children:[]},{value:"2.6. ==sort==",id:"26-sort",children:[{value:"3.0.1. \u3001HZOJ-261-\u6570\u636e\u7ed3\u6784",id:"301-\u3001hzoj-261-\u6570\u636e\u7ed3\u6784",children:[]},{value:"3.0.2. hzoj-262 \u5361\u7279\u5170\u6570",id:"302-hzoj-262-\u5361\u7279\u5170\u6570",children:[]},{value:"3.0.3. \u3001HZOJ-263-\u706b\u8f66\u8fdb\u6808",id:"303-\u3001hzoj-263-\u706b\u8f66\u8fdb\u6808",children:[]},{value:"3.0.4. hzoj-68. \u670b\u53cb\u961f\u5217",id:"304-hzoj-68-\u670b\u53cb\u961f\u5217",children:[]}]},{value:"3.1. \u4e8c\u3001\u5355\u8c03\u961f\u5217",id:"31-\u4e8c\u3001\u5355\u8c03\u961f\u5217",children:[]},{value:"3.1. \u4e8c\u3001\u5355\u8c03\u961f\u5217",id:"31-\u4e8c\u3001\u5355\u8c03\u961f\u5217-1",children:[{value:"3.1.1. HZOJ-271-\u6ed1\u52a8\u7a97\u53e3",id:"311-hzoj-271-\u6ed1\u52a8\u7a97\u53e3",children:[]}]},{value:"3.2. \u4e09\u3001\u5355\u8c03\u6808",id:"32-\u4e09\u3001\u5355\u8c03\u6808",children:[{value:"3.2.1. HZOJ-264-\u6700\u5927\u77e9\u5f62\u9762\u79ef",id:"321-hzoj-264-\u6700\u5927\u77e9\u5f62\u9762\u79ef",children:[]}]},{value:"4.1. \u4e00\u3001\u66b4\u529b\u5339\u914d\u7b97\u6cd5",id:"41-\u4e00\u3001\u66b4\u529b\u5339\u914d\u7b97\u6cd5",children:[]},{value:"4.2. \u4e8c\u3001KMP \u7b97\u6cd5",id:"42-\u4e8c\u3001kmp-\u7b97\u6cd5",children:[]},{value:"4.3. \u4e09\u3001SUNDAY \u7b97\u6cd5",id:"43-\u4e09\u3001sunday-\u7b97\u6cd5",children:[]},{value:"4.4. \u4e00\u3001\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u5339\u914d\u7b97\u6cd5",id:"44-\u4e00\u3001\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u5339\u914d\u7b97\u6cd5",children:[]},{value:"4.5. \u4e8c\u3001shift_and \u7b97\u6cd5",id:"45-\u4e8c\u3001shift_and-\u7b97\u6cd5",children:[{value:"4.5.1. code",id:"451-code",children:[]},{value:"4.5.2. oj-275",id:"452-oj-275",children:[]}]},{value:"6.1. \u4f20\u7edf\u5b57\u5178\u6811\u7684\u7f3a\u70b9",id:"61-\u4f20\u7edf\u5b57\u5178\u6811\u7684\u7f3a\u70b9",children:[]},{value:"6.2. \u53cc\u6570\u7ec4\u5b57\u5178\u6811",id:"62-\u53cc\u6570\u7ec4\u5b57\u5178\u6811",children:[]},{value:"6.3. \u4e8c\u53c9\u5b57\u5178\u6811",id:"63-\u4e8c\u53c9\u5b57\u5178\u6811",children:[{value:"6.3.1. \u53cc\u6570\u7ec4\u5b57\u5178\u6811",id:"631-\u53cc\u6570\u7ec4\u5b57\u5178\u6811",children:[]},{value:"6.3.2. \u4e8c\u53c9\u5b57\u5178\u6811+\u54c8\u592b\u66fc\u7f16\u7801",id:"632-\u4e8c\u53c9\u5b57\u5178\u6811\u54c8\u592b\u66fc\u7f16\u7801",children:[]},{value:"6.3.3. \u57fa\u4e8e\u5b57\u5178\u6811\u7684 AC \u81ea\u52a8\u673a",id:"633-\u57fa\u4e8e\u5b57\u5178\u6811\u7684-ac-\u81ea\u52a8\u673a",children:[]},{value:"6.3.4. \u57fa\u4e8e\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684 AC \u81ea\u52a8\u673a",id:"634-\u57fa\u4e8e\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684-ac-\u81ea\u52a8\u673a",children:[]},{value:"6.3.5. kaikeiba",id:"635-kaikeiba",children:[]},{value:"6.3.6. AC \u81ea\u52a8\u673a\u7684\u9012\u5f52\u5efa\u7acb",id:"636-ac-\u81ea\u52a8\u673a\u7684\u9012\u5f52\u5efa\u7acb",children:[]}]},{value:"6.4.",id:"64",children:[{value:"6.4.1. AC \u81ea\u52a8\u673a\u7684\u7ebf\u7d22\u5316",id:"641-ac-\u81ea\u52a8\u673a\u7684\u7ebf\u7d22\u5316",children:[]}]},{value:"7.1. AC \u81ea\u52a8\u673a\u7684\u601d\u60f3",id:"71-ac-\u81ea\u52a8\u673a\u7684\u601d\u60f3",children:[]},{value:"7.2. \u9884\u4e60\u8d44\u6599\uff1a\u3010\u6570\u636e\u7ed3\u6784\u3011&gt; \u5b57\u7b26\u4e32\u7edf\u8ba1",id:"72-\u9884\u4e60\u8d44\u6599\uff1a\u3010\u6570\u636e\u7ed3\u6784\u3011-\u5b57\u7b26\u4e32\u7edf\u8ba1",children:[{value:"7.2.1. \u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6808",id:"721-\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6808",children:[]},{value:"7.2.2. \u4e8c\u53c9\u6811\u524d\u5e8f\u904d\u5386\uff08\u975e\u9012\u5f52\uff09",id:"722-\u4e8c\u53c9\u6811\u524d\u5e8f\u904d\u5386\uff08\u975e\u9012\u5f52\uff09",children:[]},{value:"7.2.3. \u5feb\u901f\u6392\u5e8f\uff08\u975e\u9012\u5f52\uff09",id:"723-\u5feb\u901f\u6392\u5e8f\uff08\u975e\u9012\u5f52\uff09",children:[]},{value:"8.0.4. quick-union",id:"804-quick-union",children:[]},{value:"8.0.5. HZOJ-72-\u731c\u62f3.cpp",id:"805-hzoj-72-\u731c\u62f3cpp",children:[]},{value:"8.0.6. HZOJ-73-\u6e56\u6cca.cpp",id:"806-hzoj-73-\u6e56\u6ccacpp",children:[]},{value:"8.0.7. \u7a0b\u5e8f\u81ea\u52a8\u5206\u6790",id:"807-\u7a0b\u5e8f\u81ea\u52a8\u5206\u6790",children:[]},{value:"8.0.8. Supermarket",id:"808-supermarket",children:[]},{value:"8.0.9. \u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4",id:"809-\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4",children:[]},{value:"8.0.10. HZOJ-325-\u4ee3\u7801\u6f14\u793a",id:"8010-hzoj-325-\u4ee3\u7801\u6f14\u793a",children:[]},{value:"8.0.11. HZOJ-326-\u98df\u7269\u94fe",id:"8011-hzoj-326-\u98df\u7269\u94fe",children:[]},{value:"8.0.12. HZOJ-327-\u5173\u62bc\u7f6a\u72af.cpp",id:"8012-hzoj-327-\u5173\u62bc\u7f6a\u72afcpp",children:[]},{value:"8.0.13. 128. \u6700\u957f\u8fde\u7eed\u5e8f\u5217",id:"8013-128-\u6700\u957f\u8fde\u7eed\u5e8f\u5217",children:[]},{value:"8.0.14. 130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df",id:"8014-130-\u88ab\u56f4\u7ed5\u7684\u533a\u57df",children:[]},{value:"9.0.15. Leetcode-200\u5c9b\u5c7f\u6570\u91cf",id:"9015-leetcode-200\u5c9b\u5c7f\u6570\u91cf",children:[]},{value:"9.0.16. LC-547",id:"9016-lc-547",children:[]},{value:"9.0.17. Leetcode-684",id:"9017-leetcode-684",children:[]},{value:"9.0.18. 685. \u5197\u4f59\u8fde\u63a5 II",id:"9018-685-\u5197\u4f59\u8fde\u63a5-ii",children:[]},{value:"9.0.19. \u9664\u6cd5\u6c42\u503c",id:"9019-\u9664\u6cd5\u6c42\u503c",children:[]}]},{value:"10.1. \u4e00\u3001\u524d\u7f00\u548c\u4e0e\u5dee\u5206",id:"101-\u4e00\u3001\u524d\u7f00\u548c\u4e0e\u5dee\u5206",children:[{value:"10.1.1. \u95ee\u98981\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u548c\u64cd\u4f5c",id:"1011-\u95ee\u98981\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u548c\u64cd\u4f5c",children:[]},{value:"10.1.2. \u95ee\u98982\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u5143\u7d20\u4fee\u6539\uff08\u52a0\u6cd5\uff09",id:"1012-\u95ee\u98982\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u5143\u7d20\u4fee\u6539\uff08\u52a0\u6cd5\uff09",children:[]}]},{value:"10.2. \u4e8c\u3001\u6811\u72b6\u6570\u7ec4",id:"102-\u4e8c\u3001\u6811\u72b6\u6570\u7ec4",children:[]},{value:"10.3. \u4e09\u3001\u6d77\u8d3c OJ-329-\u5f31\u5316\u7684\u6574\u6570\u95ee\u9898",id:"103-\u4e09\u3001\u6d77\u8d3c-oj-329-\u5f31\u5316\u7684\u6574\u6570\u95ee\u9898",children:[{value:"10.3.1. \u5f15\u5165\u5dee\u5206\u6570\u7ec4",id:"1031-\u5f15\u5165\u5dee\u5206\u6570\u7ec4",children:[]},{value:"10.3.2. \u7ed3\u8bba",id:"1032-\u7ed3\u8bba",children:[]}]},{value:"10.4. \u56db\u3001\u6d77\u8d3c OJ-330-\u52a0\u5f3a\u7684\u6574\u6570\u95ee\u9898",id:"104-\u56db\u3001\u6d77\u8d3c-oj-330-\u52a0\u5f3a\u7684\u6574\u6570\u95ee\u9898",children:[{value:"10.4.1. \u5f15\u5165\u5dee\u5206\u6570\u7ec4",id:"1041-\u5f15\u5165\u5dee\u5206\u6570\u7ec4",children:[]},{value:"10.4.2. \u539f\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u548c\u95ee\u9898\u8f6c\u5316",id:"1042-\u539f\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u548c\u95ee\u9898\u8f6c\u5316",children:[]},{value:"10.4.3. \u7ed3\u8bba",id:"1043-\u7ed3\u8bba",children:[]}]},{value:"10.5. \u4e00\u3001\u6d77\u8d3c OJ-331-\u4e22\u5931\u7684\u5976\u725b",id:"105-\u4e00\u3001\u6d77\u8d3c-oj-331-\u4e22\u5931\u7684\u5976\u725b",children:[]},{value:"10.6. \u4e8c\u3001\u6d77\u8d3c OJ-328-\u697c\u5170\u56fe\u817e",id:"106-\u4e8c\u3001\u6d77\u8d3c-oj-328-\u697c\u5170\u56fe\u817e",children:[]},{value:"10.7. \u4e09\u3001\u6d77\u8d3c OJ-333-\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c",id:"107-\u4e09\u3001\u6d77\u8d3c-oj-333-\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c",children:[]},{value:"10.8.",id:"108",children:[]},{value:"11.1. \u4e00\u3001\u95ee\u9898\u80cc\u666f",id:"111-\u4e00\u3001\u95ee\u9898\u80cc\u666f",children:[]},{value:"11.2. \u4e8c\u3001\u57fa\u7840\u7248\u7ebf\u6bb5\u6811",id:"112-\u4e8c\u3001\u57fa\u7840\u7248\u7ebf\u6bb5\u6811",children:[]},{value:"11.3. \u4e09\u3001\u8fdb\u9636\u7248\u7ebf\u6bb5\u6811",id:"113-\u4e09\u3001\u8fdb\u9636\u7248\u7ebf\u6bb5\u6811",children:[{value:"11.3.1. HZOJ224 \u590d\u5408\u7ebf\u6bb5\u6811",id:"1131-hzoj224-\u590d\u5408\u7ebf\u6bb5\u6811",children:[]}]},{value:"12.1. \u4e00\u3001\u6027\u8d28",id:"121-\u4e00\u3001\u6027\u8d28",children:[]},{value:"12.2. \u4e8c\u3001\u63d2\u5165\u64cd\u4f5c",id:"122-\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c",children:[]},{value:"12.3. \u4e09\u3001\u5220\u9664\u64cd\u4f5c",id:"123-\u4e09\u3001\u5220\u9664\u64cd\u4f5c",children:[]},{value:"12.4. \u56db\u3001\u968f\u5802\u7ec3\u4e60",id:"124-\u56db\u3001\u968f\u5802\u7ec3\u4e60",children:[]},{value:"12.5. \u4e94\u3001\u6269\u5c55\u5185\u5bb9",id:"125-\u4e94\u3001\u6269\u5c55\u5185\u5bb9",children:[]},{value:"13.1. \u4e8c\u3001\u6027\u8d28",id:"131-\u4e8c\u3001\u6027\u8d28",children:[]},{value:"13.2. \u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565",id:"132-\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565",children:[]},{value:"13.3. \u4e94\u3001\u4ee3\u7801\u6f14\u793a",id:"133-\u4e94\u3001\u4ee3\u7801\u6f14\u793a",children:[{value:"14.0.1. Case 1: s[ Left[ Left T  ]&gt;s[ Right T  ]",id:"1401-case-1-s-left-left-t--s-right-t--",children:[]},{value:"14.0.2. Case 2: s[ right[ left t  ]&gt;s[ right t  ]",id:"1402-case-2-s-right-left-t--s-right-t--",children:[]}]},{value:"15.1. \u4e00\u3001\u5e73\u8861\u6761\u4ef6",id:"151-\u4e00\u3001\u5e73\u8861\u6761\u4ef6",children:[{value:"15.1.1. \u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6",id:"1511-\u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6",children:[]}]},{value:"15.2. \u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d",id:"152-\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d",children:[]},{value:"15.3. \u4e09\u3001\u63d2\u5165\u7b56\u7565",id:"153-\u4e09\u3001\u63d2\u5165\u7b56\u7565",children:[]},{value:"15.4. \u56db\u3001\u4ee3\u7801\u6f14\u793a",id:"154-\u56db\u3001\u4ee3\u7801\u6f14\u793a",children:[]},{value:"16.1. \u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0",id:"161-\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0",children:[]},{value:"16.2. \u4e8c\u3001\u5220\u9664\u8c03\u6574",id:"162-\u4e8c\u3001\u5220\u9664\u8c03\u6574",children:[]},{value:"16.3. \u4e09\u3001\u4ee3\u7801\u6f14\u793a",id:"163-\u4e09\u3001\u4ee3\u7801\u6f14\u793a",children:[]}],N={toc:l};function c(a){var e=a.components,r=(0,s.Z)(a,p);return(0,m.kt)("wrapper",(0,t.Z)({},N,r,{components:e,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"1-\u6808\u548c\u961f\u5217"},"1. ==\u6808\u548c\u961f\u5217=="),(0,m.kt)("h4",{id:"1001-hzoj-372-\u53cc\u751f\u961f\u5217"},"1.0.0.1. hzoj-372-\u53cc\u751f\u961f\u5217"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"RMQ ( Range Minimum / Maximum Query ) \u95ee\u9898"),"\u662f\u6307\uff1a\u5bf9\u4e8e\u957f\u5ea6\u4e3a n \u7684\u6570\u5217 A\uff0c\u56de\u7b54\u82e5\u5e72\u8be2\u95ee RMQ (A , i , j ) ( i , j \u2264 n)\uff0c\u8fd4\u56de\u6570\u5217A\u4e2d\u4e0b\u6807\u5728 i , j \u91cc\u7684",(0,m.kt)("strong",{parentName:"p"},"\u6700\u5c0f\uff08\u5927\uff09\u503c"),"\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cRMQ\u95ee\u9898\u662f\u6307\u6c42",(0,m.kt)("strong",{parentName:"p"},"\u533a\u95f4\u6700\u503c"),"\u7684\u95ee\u9898\u3002"),(0,m.kt)("p",null,"\u5355\u8c03\u961f\u5217\u89e3\u51b3\u56fa\u5b9a\u672b\u5c3e\uff32\uff2d\uff31\u95ee\u9898"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"int a[MAX_N + 5], b[MAX_N + 5];\nint main() {\n    int n, p = 0;\n    cin >> n;\n    for (int i = 0; i < n; ++i) cin >> a[i];\n    for (int i = 0; i < n; ++i) cin >> b[i];\n    int top1 = -1, top2 = -1;\n    while (p < n) {\n        while (top1 != -1 && a[p] < a[top1]) --top1;\n        while (top2 != -1 && b[p] < b[top2]) --top2;\n        a[++top1] = a[p];\n        b[++top2] = b[p];\n        p += 1;\n    }\n    cout << p << endl;\n    return 0;\n}\n\n")),(0,m.kt)("h4",{id:"1002-leetcode-20-\u62ec\u53f7\u5339\u914d"},"1.0.0.2. leetcode-20-\u62ec\u53f7\u5339\u914d"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"}," bool isValid(string s) {\n        int n = s.size();\n        if (n % 2 == 1) {\n            return false;\n        }\n        unordered_map<char, char> pairs = {\n            {')', '('},\n            {']', '['},\n            {'}', '{'}\n        };\n        stack<char> stk;\n        for (char ch: s) {\n            if (pairs.count(ch)) {\n                if (stk.empty() || stk.top() != pairs[ch]) {\n                    return false;\n                }\n                stk.pop();\n            }\n            else {\n                stk.push(ch);\n            }\n        }\n        return stk.empty();\n    }\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"bool isValid(char * s){\n    int len = strlen(s);\n    char*stack = (char *)malloc(sizeof(char) * len);\n    int top = -1, flag = 1;\n    for (int i = 0; i < len; ++i) {\n        switch (s[i]) {\n            case '(' : \n            case '[' : \n            case '{' : \n                stack[++top] = s[i]; \n                break;\n            case ')' :\n                flag = (top != -1 && stack[top--] == '(' );\n                break;\n            case ']' :\n                flag = (top != -1 && stack[top--] == '[' );\n                break;\n            case '}' :\n                flag = (top != -1 && stack[top--] == '{');\n                break;\n        }\n        if (!flag) return false;\n    }\n    return top == -1;\n}\n")),(0,m.kt)("h4",{id:"1003-lc-221-\u6700\u5927\u6b63\u65b9\u5f62-dp\u5355\u8c03\u6808"},"1.0.0.3. LC-221-\u6700\u5927\u6b63\u65b9\u5f62-dp,\u5355\u8c03\u6808"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return 0;\n        }\n        int maxSide = 0;\n        int rows = matrix.size(), columns = matrix[0].size();\n        vector<vector<int>> dp(rows, vector<int>(columns));\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                if (matrix[i][j] == '1') {\n                    if (i == 0 || j == 0) {\n                        dp[i][j] = 1;\n                    } else {\n                        dp[i][j] = min(min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;\n                    }\n                    maxSide = max(maxSide, dp[i][j]);\n                }\n            }\n        }\n        int maxSquare = maxSide * maxSide;\n        return maxSquare;\n    }\n};\n\n\nint maximalSquare(char** matrix, int matrixRowSize, int matrixColSizes) {\n    int n = matrixRowSize, m = matrixColSizes;\n    if (n == 0) return 0;\n    int **cnt = (int **)malloc(sizeof(int *) * n);\n    int *q = (int *)malloc(sizeof(int) * m);\n    int head, tail, l;\n    for (int i = 0; i < n; i++) cnt[i] = (int *)malloc(sizeof(int) * m);\n    for (int i = 0; i < m; i++) cnt[0][i] = (matrix[0][i] == '1');\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cnt[i][j] = (matrix[i][j] == '1' ? cnt[i - 1][j] + 1 : 0);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        head = tail = 0;\n        l = 0;\n        for (int j = 0; j < m; j++) {\n            while (tail - head > 0 && cnt[i][q[tail - 1]] > cnt[i][j]) --tail;\n            q[tail++] = j;       \n            while (j - l >= 0 && j - l + 1 > cnt[i][q[head]]) {\n                ++l;\n                if (q[head] < l) ++head;\n            }\n            ans = fmax(ans, (j - l + 1) * (j - l + 1));    \n        }\n    }\n    for (int i = 0; i < n; i++) free(cnt[i]);\n    free(cnt);\n    free(q);\n    return ans;\n}\n")),(0,m.kt)("h4",{id:"1004-lc-42-\u63a5\u96e8\u6c34-\u5355\u8c03\u6808"},"1.0.0.4. LC-42-\u63a5\u96e8\u6c34-\u5355\u8c03\u6808"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int trap(vector<int>& height) {\n        stack<int> stk;\n        int ans = 0;\n        for (int i = 0; i < height.size(); ++i) {\n            while (!stk.empty() && height[stk.top()] <= height[i]) {\n                int cur = stk.top();\n                stk.pop();\n                if (stk.empty()) break;\n                int width = i - stk.top() - 1;\n                int h = min(height[i], height[stk.top()]) - height[cur];\n                ans += width * h;\n            } \n            stk.push(i);\n        }\n        return ans;\n    }\n};\n")),(0,m.kt)("h4",{id:"1005-lc-102-\u5c42\u5e8f\u904d\u5386"},"1.0.0.5. LC-102-\u5c42\u5e8f\u904d\u5386"),(0,m.kt)("h4",{id:"1006-\u793a\u4f8b\uff1a"},"1.0.0.6. \u793a\u4f8b\uff1a"),(0,m.kt)("p",null,"\u4e8c\u53c9\u6811\uff1a","[3,9,20,null,null,15,7]",","),(0,m.kt)("p",null,"\u200b    3\n/ \\\n9  20\n\u200b    /  \\\n15   7\n\u8fd4\u56de\u5176\u5c42\u6b21\u904d\u5386\u7ed3\u679c\uff1a"),(0,m.kt)("p",null,"[\n","[3]",",\n","[9,20]",",\n","[15,7]","\n]"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"int getDepth(struct TreeNode *root) {\n    if (root == NULL) return 0;\n    int l = getDepth(root->left), r = getDepth(root->right);\n    return (l > r ? l : r) + 1;\n}\n\nvoid getCnt(struct TreeNode *root, int k, int *cnt) {\n    if (root == NULL) return ;\n    cnt[k] += 1;\n    getCnt(root->left, k + 1, cnt);\n    getCnt(root->right, k + 1, cnt);\n    return ;\n}\n\nvoid getResult(struct TreeNode *root, int k, int *cnt, int **ret) {\n    if (root == NULL) return ;\n    ret[k][cnt[k]++] = root->val;\n    getResult(root->left, k + 1, cnt, ret);\n    getResult(root->right, k + 1, cnt, ret);\n    return ;\n}\n\nint** levelOrder(struct TreeNode* root, int* returnSize, int** columnSizes) {\n    int depth = getDepth(root);\n    int *cnt = (int *)calloc(sizeof(int), depth);\n    int **ret = (int **)malloc(sizeof(int *) * depth);\n    getCnt(root, 0, cnt);\n    for (int i = 0; i < depth; i++) {\n        ret[i] = (int *)malloc(sizeof(int) * cnt[i]);\n        cnt[i] = 0;\n    }\n    getResult(root, 0, cnt, ret);\n    *returnSize = depth;\n    *columnSizes = cnt;\n    return ret;\n}\n")),(0,m.kt)("h4",{id:"1007-\u5224\u5e73\u8861\u4e8c\u53c9\u6811"},"1.0.0.7. \u5224\u5e73\u8861\u4e8c\u53c9\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"int maxDepth(struct TreeNode* root) {\n    if (root == NULL) return 0;\n    int d1 = maxDepth(root->left);\n    int d2 = maxDepth(root->right);\n    if (d1 == -2 || d2 == -2 || abs(d1 - d2) > 1) return -2;\n    return fmax(d1, d2) + 1;\n}\n\nbool isBalanced(struct TreeNode* root) {\n    return maxDepth(root) >= 0;\n")),(0,m.kt)("h4",{id:"1008-\u6c42\u8def\u5f84\u548c"},"1.0.0.8. \u6c42\u8def\u5f84\u548c"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"bool hasPathSum(struct TreeNode* root, int sum) {\n    if (root == NULL) return false;\n    if (root->left == 0 && root->right == NULL) return root->val == sum;\n    return hasPathSum(root->left, sum - root->val) || hasPathSum(root->right, sum - root->val);\n}\n")),(0,m.kt)("h4",{id:"1009-\u6700\u8fd1\u516c\u5171\u7956\u5148"},"1.0.0.9. \u6700\u8fd1\u516c\u5171\u7956\u5148"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"struct TreeNode* lowestCommonAncestor(struct TreeNode* root, struct TreeNode* p, struct TreeNode* q) {\n    if (root == NULL || root == p || root == q) {\n        return root;\n    }\n    struct TreeNode *left = lowestCommonAncestor(root->left, p, q);\n    struct TreeNode *right = lowestCommonAncestor(root->right, p, q);\n    if (left && right) {\n        return root;\n    }\n    return left ? left : right;\n}\n")),(0,m.kt)("h4",{id:"10010-\u4e8c\u53c9\u6392\u5e8f\u641c\u7d22\u6811"},"1.0.0.10. \u4e8c\u53c9\u6392\u5e8f\u641c\u7d22\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"struct TreeNode* __lowestCommonAncestor(struct TreeNode* root, struct TreeNode* p, struct TreeNode* q) {\n    if (root->val == p->val) return p;\n    if (root->val == q->val) return q;\n    if (p->val < root->val && q->val > root->val) return root;\n    if (p->val > root->val) return __lowestCommonAncestor(root->right, p, q);\n    return __lowestCommonAncestor(root->left, p, q);\n}\n\nstruct TreeNode* lowestCommonAncestor(struct TreeNode* root, struct TreeNode* p, struct TreeNode* q) {\n    if (root == NULL) return NULL;\n    if (p->val == q->val) return p;\n    if (p->val > q->val) {\n        struct TreeNode *temp = p;\n        p = q;\n        q = temp;\n    }\n    return __lowestCommonAncestor(root, p, q);\n}\n")),(0,m.kt)("h4",{id:"10011-\u4e8c\u53c9\u6811\u6240\u6709\u8def\u5f84-haffman\u6811"},"1.0.0.11. \u4e8c\u53c9\u6811\u6240\u6709\u8def\u5f84-haffman\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},'int getPathCnt(struct TreeNode *root) {\n    if (root == NULL) return 0;\n    if (root->left == NULL && root->right == NULL) return 1;\n    return getPathCnt(root->left) + getPathCnt(root->right);\n}\n\nint getResult(struct TreeNode *root, int len, int k, char **ret, char *buff) {\n    if (root == NULL) return 0;\n    len += sprintf(buff + len, "%d", root->val);\n    buff[len] = 0;\n    if (root->left == NULL && root->right == NULL) {\n        ret[k] = strdup(buff);\n        return 1;\n    }\n    len += sprintf(buff + len, "->");\n    int cnt = getResult(root->left, len, k, ret, buff);\n    cnt += getResult(root->right, len, k + cnt, ret, buff);\n    return cnt;\n}\n\nchar ** binaryTreePaths(struct TreeNode* root, int* returnSize){\n    int pathCnt = getPathCnt(root);\n    char **ret = (char **)malloc(sizeof(char *) * pathCnt);\n    int max_len = 10000;\n    char *buff = (char *)malloc(sizeof(char) * max_len);\n    getResult(root, 0, 0, ret, buff);\n    free(buff);\n    *returnSize = pathCnt;\n    return ret;\n}\n')),(0,m.kt)("h4",{id:"10012-\u5e7f\u4e49\u8868\u8f6c\u4e8c\u53c9\u6811"},"1.0.0.12. \u5e7f\u4e49\u8868\u8f6c\u4e8c\u53c9\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"Node *build(char *str, int *node_num) {\n    Node *temp = NULL, *p = NULL;\n    Stack *s = init_stack(strlen(str));\n    int flag = 0;\n    while (str[0]) {\n        switch (str[0]) {\n            case '(':\n                push(s, temp);\n                flag = 0;\n                temp = NULL;\n                break;\n            case ')':\n                p = top(s);\n                pop(s);\n                break;\n            case ',':\n                flag = 1;\n                temp = NULL;\n                break;\n            case ' ':\n                break;\n            default:\n                temp = getNewNode(str[0]);\n                if (!empty(s) && flag == 0) {\n                    top(s)->lchild = temp;\n                } else if (!empty(s) && flag == 1) {\n                    top(s)->rchild = temp;\n                }\n                ++(*node_num);\n            break;\n        }\n        ++str;\n    }\n    clear_stack(s);\n    if (temp && !p) p = temp;\n    return p;\n}\n\n")),(0,m.kt)("h4",{id:"10013-\u4e8c\u53c9\u6811\u4e2d\u5e8f\u7ebf\u7d22\u5316"},"1.0.0.13. \u4e8c\u53c9\u6811\u4e2d\u5e8f\u7ebf\u7d22\u5316"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'void build_thread(Node *root) {\n    if (root == NULL) return ;\n    static Node *pre = NULL;\n    build_thread(root->lchild);\n    if (root->lchild == NULL) {\n        root->lchild = pre;\n        root->ltag = THREAD;\n    }\n    if (pre != NULL && pre->rchild == NULL) {\n        pre->rchild = root;\n        pre->rtag = THREAD;\n    }\n    pre = root;\n    build_thread(root->rchild);\n    return ;\n}\n\nvoid clear(Node *root) {\n    if (root == NULL) return ;\n    if (root->ltag == NORMAL) clear(root->lchild);\n    if (root->rtag == NORMAL) clear(root->rchild);\n    free(root);\n    return ;\n}\n\nNode *leftMost(Node *p) {\n    while (p && p->ltag == NORMAL && p->lchild) p = p->lchild;\n    return p;\n}\n\nvoid output(Node *root) {\n    Node *p = leftMost(root);\n    while (p) {\n        printf("%d ", p->key);\n        if (p->rtag == THREAD) {\n            p = p->rchild;\n        } else {\n            p = leftMost(p->rchild);\n        }\n    }\n    printf("\\n");\n    return ;\n}\n')),(0,m.kt)("h4",{id:"10014-\u4e8c\u53c9\u6811\u5148\u5e8f\u7ebf\u7d22\u5316"},"1.0.0.14. \u4e8c\u53c9\u6811\u5148\u5e8f\u7ebf\u7d22\u5316"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'void buildThead(Node *root) {\n    if (!root) return ;\n    static Node *pre = nullptr;\n    if (root->lchild == nullptr) {\n        root->lchild = pre;\n        root->ltag = THREAD;\n    }\n    \n    if (pre != nullptr && pre->rchild == nullptr) {\n        pre->rchild = root;\n        pre->rtag = THREAD;\n    }\n    pre = root;\n    if (root->ltag == NORMAL) buildThead(root->lchild);\n    if (root->rtag == NORMAL) buildThead(root->rchild);\n    return ;\n}\n\nvoid clear(Node *root) {\n    if (!root) return ;\n    if (root->ltag == NORMAL) clear(root->lchild);\n    if (root->rtag == NORMAL) clear(root->rchild);\n    free(root);\n    return ;\n}\n\nNode *leftMost(Node *p) {\n    while (p && p->ltag == NORMAL && p->lchild) p = p->lchild;\n    return p;\n}\n\nvoid output(Node *root) {\n    if (!root) return ;\n    //Node *p = leftMost(root);\n    Node *p = root;\n    while (p) {\n        printf("%d ", p->key);\n        if (p->ltag == NORMAL) {\n            p = p->lchild;\n        } else {\n            p = p->rchild;\n        }\n    }\n    printf("\\n");\n    return ;\n}\n\n')),(0,m.kt)("h4",{id:"10015-morris\u904d\u5386"},"1.0.0.15. morris\u904d\u5386"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'void morrisPre(Node *root) {\n    if (!root) return ;\n    Node *cur = root, *mostRight = nullptr;\n    while (cur) {\n        mostRight = cur->lchild;\n        if (mostRight) {\n            while (mostRight->rchild && mostRight->rchild != cur) {\n                mostRight = mostRight->rchild;\n            }\n            if (mostRight->rchild == nullptr) {\n                mostRight->rchild = cur;\n                cout << cur->key << " ";\n                cur = cur->lchild;\n                continue;\n            } else {\n                mostRight->rchild =nullptr;\n            }\n        } else {\n            cout << cur->key << " ";\n        }\n        cur = cur->rchild;\n    }\n    cout << endl;\n}\n\nvoid morrisIn(Node *root) {\n    if (!root) return ;\n    Node *cur = root, *mostRight = nullptr;\n    while (cur) {\n        mostRight = cur->lchild;\n        if (mostRight) {\n            while (mostRight->rchild && mostRight->rchild != cur) {\n                mostRight = mostRight->rchild;\n            }\n            if (mostRight->rchild == nullptr) {\n                mostRight->rchild = cur;\n                cur = cur->lchild;\n                continue ;\n            } else {\n                mostRight->rchild = nullptr;\n            }\n        }\n        cout << cur->key << " ";\n        cur = cur->rchild;\n    }\n    return ;\n}\n\n')),(0,m.kt)("h1",{id:"2-\u54c8\u5f17\u66fc\u6811\u4e0e\u54c8\u5f17\u66fc\u7f16\u7801"},"2. ==\u54c8\u5f17\u66fc\u6811\u4e0e\u54c8\u5f17\u66fc\u7f16\u7801=="),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u8bfe\u7a0b\u8282\u594f")),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u76f4\u89c2\u7684\u4e86\u89e3\u54c8\u5f17\u66fc\u6811\u4e0e\u54c8\u5f17\u66fc\u7f16\u7801"),(0,m.kt)("li",{parentName:"ol"},"\u8bc1\u660e\uff1a\u54c8\u5f17\u66fc\u7f16\u7801\u662f\u6700\u4f18\u7684\u53d8\u957f\u7f16\u7801")),(0,m.kt)("h3",{id:"201-\u4ec0\u4e48\u662f\u7f16\u7801"},"2.0.1. \u4ec0\u4e48\u662f\u7f16\u7801"),(0,m.kt)("p",null,"'a' = 97 = ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0110"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mn",{parentName:"mrow"},"0001"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msub",stretchy:"false"},")"),(0,m.kt)("mn",{parentName:"msub"},"2"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(0110\\ 0001)_2")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),(0,m.kt)("p",null,"'0' = 48 = ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0011"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mn",{parentName:"mrow"},"0000"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msub",stretchy:"false"},")"),(0,m.kt)("mn",{parentName:"msub"},"2"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(0011\\ 0000)_2")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mclose"},(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),(0,m.kt)("p",null,"\u6ce8\u610f\uff1a\u4efb\u4f55\u4fe1\u606f\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u90fd\u662f\u4e8c\u8fdb\u5236\u5b58\u50a8\u7684"),(0,m.kt)("p",null,'\u4fe1\u606f\uff1a"aa00" = ',(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mn",{parentName:"mrow"},"01100001"),(0,m.kt)("mtext",{parentName:"mrow"},"\u3001"),(0,m.kt)("mn",{parentName:"mrow"},"01100001"),(0,m.kt)("mtext",{parentName:"mrow"},"\u3001"),(0,m.kt)("mn",{parentName:"mrow"},"00110000"),(0,m.kt)("mtext",{parentName:"mrow"},"\u3001"),(0,m.kt)("mn",{parentName:"mrow"},"00110000")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"01100001\u300101100001\u300100110000\u300100110000")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u3001"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u3001"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u3001"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"0")))))),(0,m.kt)("p",null,"\u4e00\u53f0\u8ba1\u7b97\u673a   \u4f20\u8f93\u5230  \u53e6\u5916\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u4f20\u8f93 32 \u4e2a\u6bd4\u7279\u4f4d"),(0,m.kt)("p",null,"\u5047\u8bbe\uff1a\u8ba1\u7b97\u673a\u7684\u7f51\u7edc\u662f 32bit/s\u3002\u6240\u4ee5\u7528\u65f6\uff1a1 s"),(0,m.kt)("p",null,"\u7279\u5b9a\u573a\u9759\uff1a\u53ea\u6709 a,b,0,1 \u56db\u79cd\u5b57\u7b26\u9700\u8981\u4f20\u8f93"),(0,m.kt)("p",null,"\u6d77\u8d3c\u73ed\u7f16\u7801\uff1aa:00, b: 01, 0: 10, 1: 11"),(0,m.kt)("p",null,'"aa00" = 00001010'),(0,m.kt)("p",null,"\u5728\u5e26\u5bbd\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u53ea\u9700\u8981\u4f20\u8f93 0.25s"),(0,m.kt)("h3",{id:"202-\u5b9a\u957f\u4e0e\u53d8\u957f\u7f16\u7801"},"2.0.2. \u5b9a\u957f\u4e0e\u53d8\u957f\u7f16\u7801"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"Ascii \u7f16\u7801 \u548c \u7279\u5b9a\u573a\u666f\u4e0b\u7684\u6d77\u8d3c\u73ed\u7f16\u7801\uff0c\u90fd\u5c5e\u4e8e\u5b9a\u957f\u7f16\u7801"),(0,m.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u7f16\u7801\u957f\u5ea6\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u5b9a\u957f\u7f16\u7801"),(0,m.kt)("li",{parentName:"ol"},"\u3010\u5927\u5bb6\u81ea\u884c\u8865\u5145\u3011UTF-8\u7f16\u7801\uff0c\u662f\u53d8\u957f\u7f16\u7801\uff0cUTF-16\uff0c\u662f\u5b9a\u957f\u7f16\u7801"),(0,m.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u7f16\u7801\u957f\u5ea6\u4e0d\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u53d8\u957f\u7f16\u7801"),(0,m.kt)("li",{parentName:"ol"},"\u5c06\u5b9a\u957f\u7f16\u7801\uff0c\u770b\u6210\u662f\u53d8\u957f\u7f16\u7801\u7684\u7279\u4f8b"),(0,m.kt)("li",{parentName:"ol"},"\u53d8\u957f\u7f16\u7801\uff0c\u4e00\u5b9a\u4e0d\u5dee\u4e8e\u5b9a\u957f\u7f16\u7801")),(0,m.kt)("h3",{id:"203-\u53d8\u957f\u7f16\u7801\u5e94\u7528\u573a\u666f"},"2.0.3. \u53d8\u957f\u7f16\u7801\u5e94\u7528\u573a\u666f"),(0,m.kt)("p",null,"\u7279\u5b9a\u573a\u9759\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53ea\u6709\u56db\u79cd\u5b57\u7b26 : ab01"),(0,m.kt)("li",{parentName:"ol"},"a: 0.8, b: 0.05, 0: 0.1, 1: 0.05")),(0,m.kt)("p",null,"\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff1a"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"l"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"l_i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.84444em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.01968em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))),"\uff1a\u7b2c i \u79cd\u5b57\u7b26\uff0c\u7f16\u7801\u957f\u5ea6"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p_i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))),"\uff1a\u7b2c i \u79cd\u5b57\u7b26\uff0c\u51fa\u73b0\u6982\u7387"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"v"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow"},"\u2211"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"l"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"\xd7"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"avg(l) = \\sum{l_i}\\times{p_i}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"v"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.00001em",verticalAlign:"-0.25001em"}}),(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.01968em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))))),(0,m.kt)("p",null,"\u5047\u8bbe\uff0c\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff1a1.16\uff0c\u4f30\u7b97\u4f20\u8f93100\u4e2a\u5b57\u7b26\uff0c\u9700\u8981\u4f20\u8f93116\u4e2a\u6bd4\u7279\u4f4d"),(0,m.kt)("p",null,"\u6d77\u8d3c\u73ed\u7f16\u7801\u7684\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"v"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow"},"\xd7"),(0,m.kt)("mo",{parentName:"mrow"},"\u2211"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"2")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"avg(l) = 2\\times\\sum{p_i}=2")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"v"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.00001em",verticalAlign:"-0.25001em"}}),(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2")))))),(0,m.kt)("p",null,"\u65b0\xb7\u6d77\u8d3c\u73ed\u7f16\u7801\uff1a"),(0,m.kt)("p",null,"a: 1"),(0,m.kt)("p",null,"b: 01"),(0,m.kt)("p",null,"0: 000"),(0,m.kt)("p",null,"1: 001"),(0,m.kt)("p",null,"\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.8"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.1"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1.35")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1*0.8+2*0.05+3*0.1+3*0.05=1.35")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"8"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5")))))),(0,m.kt)("p",null,"100\u4e2a\u5b57\u7b26\uff0c\u4f20\u8f93135\u4e2a\u6bd4\u7279\u4f4d"),(0,m.kt)("h2",{id:"21-\u4e09\u3001\u54c8\u5f17\u66fc\u7f16\u7801"},"2.1. \u4e09\u3001\u54c8\u5f17\u66fc\u7f16\u7801"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u9996\u5148\uff0c\u7edf\u8ba1\u5f97\u5230\u6bcf\u4e00\u79cd\u5b57\u7b26\u7684\u6982\u7387"),(0,m.kt)("li",{parentName:"ol"},"\u5c06 n \u4e2a\u5b57\u7b26\uff0c\u5efa\u7acb\u6210\u4e00\u68f5\u54c8\u5f17\u66fc\u6811"),(0,m.kt)("li",{parentName:"ol"},"\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u90fd\u843d\u5728\u53f6\u5b50\u7ed3\u70b9\u4e0a\uff0c\u6240\u4ee5\u6ca1\u6709\u4e00\u4e2a\u7f16\u7801\u662f\u5176\u4ed6\u7f16\u7801\u7684\u524d\u7f00"),(0,m.kt)("li",{parentName:"ol"},"\u6309\u7167\u5de60\uff0c\u53f31\u7684\u5f62\u5f0f\uff0c\u5c06\u7f16\u7801\u8bfb\u53d6\u51fa\u6765")),(0,m.kt)("p",null,"\u5f97\u5230\u65b0\u7f16\u7801\uff1a"),(0,m.kt)("p",null,"a: 0 | b: 110 | 0: 10 | 1: 111"),(0,m.kt)("p",null,"\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.8"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.1"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1.3")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1*0.8+3*0.05+2*0.1+3*0.05=1.3")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"8"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"3")))))),(0,m.kt)("p",null,"\u7ed3\u8bba\uff1a\u54c8\u5f17\u66fc\u7f16\u7801\uff0c\u662f\u6700\u4f18\u7684\u53d8\u957f\u7f16\u7801"),(0,m.kt)("h2",{id:"22-\u56db\u3001\u516c\u5f0f\u8bc1\u660e"},"2.2. \u56db\u3001\u516c\u5f0f\u8bc1\u660e"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u9996\u5148\u8868\u793a\u5e73\u5747\u7f16\u7801\u957f\u5ea6\uff0c\u6c42\u89e3\u516c\u5f0f\u6700\u4f18\u89e3"),(0,m.kt)("li",{parentName:"ol"},"\u6700\u7ec8\uff0c\u548c\u71b5\u4e0e\u4ea4\u53c9\u71b5\u4e4b\u95f4\u7684\u5173\u7cfb")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef struct Node {\n    char ch;\n    double p;\n    struct Node *next[2];\n} Node;\n\ntypedef struct Code {\n    char ch;\n    char *str;\n} Code;\n\ntypedef struct Haffman_Tree {\n    Node *root;\n    int n;\n    Code *codes;\n} Haffman_Tree;\n\ntypedef struct Data {\n    char ch;\n    double p;\n} Data;\n\nData arr[max_n + 5];\n\nNode *getNewNode(Data *obj) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->ch = (obj ? obj->ch : 0);\n    p->p = (obj ? obj->p : 0);\n    p->next[0] = p->next[1] = NULL;\n    return p;\n}\n\nHaffman_Tree *getNewTree(int n) {\n    Haffman_Tree *tree = (Haffman_Tree *)malloc(sizeof(Haffman_Tree));\n    tree->codes = (Code *)malloc(sizeof(Code) * n);\n    tree->n = n;\n    tree->root = NULL;\n    return tree;\n}\n\nvoid insertOnce(Node **arr, int n) {\n    for (int j = n; j >= 1; j--) {\n        if (arr[j]->p > arr[j - 1]->p) {\n            swap(arr[j], arr[j - 1]);\n            continue;\n        }\n        break;\n    }\n    return ;\n}\n\nint extract_Codes(Node *root, Code *arr, int k, int l, char *buff) {\n    buff[l] = 0;\n    if (root->next[0] == NULL && root->next[1] == NULL) {\n        arr[k].ch = root->ch;\n        arr[k].str = strdup(buff);\n        return 1;\n    }\n    int delta = 0;\n    buff[l] = \'0\';\n    delta += extract_Codes(root->next[0], arr, k + delta, l + 1, buff);\n    buff[l] = \'1\';\n    delta += extract_Codes(root->next[1], arr, k + delta, l + 1, buff);\n    return delta;\n}\n\nHaffman_Tree *build(Data *arr, int n) {\n    Node **nodes = (Node **)malloc(sizeof(Node *) * n);\n    for (int i = 0; i < n; i++) {\n        nodes[i] = getNewNode(arr + i);\n    }\n    for (int i = 1; i < n; i++) {\n        insertOnce(nodes, i);\n    }\n    for (int i = n - 1; i >= 1; i--) {\n        Node *p = getNewNode(NULL);\n        p->next[0] = nodes[i - 1];\n        p->next[1] = nodes[i];\n        p->p = nodes[i - 1]->p + nodes[i]->p;\n        nodes[i - 1] = p;\n        insertOnce(nodes, i - 1);\n    }\n    char *buff = (char *)malloc(sizeof(char *) * n);\n    Haffman_Tree *tree = getNewTree(n);\n    tree->root = nodes[0];\n    extract_Codes(tree->root, tree->codes, 0, 0, buff);\n    free(nodes);\n    free(buff);\n    return tree;\n}\n\nint main() {\n    int n;\n    char str[10];\n    scanf("%d", &n);\n    for (int i = 0; i < n; i++) {\n        scanf("%c %lf", str, &arr[i].p);\n        arr[i].ch = str[0];\n    }\n    Haffman_Tree *tree = build(arr, n);\n    for (int i = 0; i < tree->n; i++) {\n        printf("%c : %s\\n", tree->codes[i].ch, tree->codes[i].str);\n    }\n    return 0;\n}\n')),(0,m.kt)("h2",{id:"23-\u4f18\u5148\u961f\u5217-\u5806"},"2.3. ==\u4f18\u5148\u961f\u5217-\u5806=="),(0,m.kt)("h2",{id:"23-\u4f18\u5148\u961f\u5217-\u5806-1"},"2.3. ==\u4f18\u5148\u961f\u5217-\u5806=="),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},'#define swap(a, b) {\\\n    __typeof(a) __temp = a;\\\n    a = b; b = __temp;\\\n}\n\ntypedef struct priority_queue {\n    int *data;\n    int cnt, size;\n} priority_queue;\n\npriority_queue *init(int n) {\n    priority_queue *q = (priority_queue *)malloc(sizeof(priority_queue));\n    q->data = (int *)malloc(sizeof(int) * (n + 1));\n    q->cnt = 0;\n    q->size = n;\n    return q;\n}\n\nint empty(priority_queue *q) {\n    return q->cnt == 0;\n}\n\nint top(priority_queue *q) {\n    return q->data[1];\n}\n//\u81ea\u4e0b\u800c\u4e0a\u8c03\u6574\nint push(priority_queue *q, int val) {\n    if (q == NULL) return 0;\n    if (q->cnt == q->size) return 0;\n    q->cnt += 1;\n    q->data[q->cnt] = val;\n    int ind = q->cnt;\n    while (ind >> 1 && q->data[ind] > q->data[ind >> 1]) {\n        swap(q->data[ind], q->data[ind >> 1]);\n        ind >>= 1;\n    }\n    return 1;\n}\n\nint pop(priority_queue *q) {\n    if (q == NULL) return 0;\n    if (empty(q)) return 0;\n    q->data[1] = q->data[q->cnt--];\n    int ind = 1;\n    while ((ind << 1) <= q->cnt) {\n        int temp = ind, l = ind << 1, r = ind << 1 | 1;\n        if (q->data[l] > q->data[temp]) temp = l;\n        if (r <= q->cnt && q->data[r] > q->data[temp]) temp = r;\n        if (temp == ind) break;\n        swap(q->data[ind], q->data[temp]);\n        ind = temp;\n    }\n    return 1;\n}\n\nvoid clear(priority_queue *q) {\n    if (q == NULL) return ;\n    free(q->data);\n    free(q);\n    return ;\n}\n\nint main() {\n    srand(time(0));\n    #define max_op 20\n    priority_queue *q = init(max_op);\n    for (int i = 0; i < max_op; i++) {\n        int val = rand() % 100;\n        push(q, val);\n        printf("insert %d to queue\\n", val);\n    }\n    for (int i = 0; i < max_op; i++) {\n        printf("%d ", top(q));\n        pop(q);\n    }\n    printf("\\n");\n    clear(q);\n    return 0;\n}\n')),(0,m.kt)("h2",{id:"24-\u7ebf\u6027\u5efa\u5806\u6cd5"},"2.4. ==\u7ebf\u6027\u5efa\u5806\u6cd5=="),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"//\u81ea\u4e0a\u800c\u4e0b\nvoid downUpdate(int *arr, int n, int ind) {\n    while ((ind << 1) <= n) {\n        int temp = ind, l = ind << 1, r = ind << 1 | 1;\n        if (arr[l] > arr[temp]) temp = l;\n        if (r <= n && arr[r] > arr[temp]) temp = r;\n        if (temp == ind) break;\n        swap(arr[temp], arr[ind]);\n        ind = temp;\n    }\n    return ;\n}\n\nvoid heap_sort(int *arr, int n) {\n    arr -= 1;\n    for (int i = n >> 1; i >= 1; i--) {\n        downUpdate(arr, n, i);\n    }\n    for (int i = n; i > 1; i--) {\n        swap(arr[i], arr[1]);\n        downUpdate(arr, i - 1, 1);\n    }\n    return ;\n}\n\n")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201008200910691",src:n(24586).Z})),(0,m.kt)("h4",{id:"2401-lc-703-\u6570\u636e\u6d41\u4e2d\u7684\u7b2ck\u5927\u5143\u7d20"},"2.4.0.1. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/"},"LC-703. \u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20")),(0,m.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u627e\u5230\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u5143\u7d20\u7684\u7c7b\uff08class\uff09\u3002\u6ce8\u610f\u662f\u6392\u5e8f\u540e\u7684\u7b2cK\u5927\u5143\u7d20\uff0c\u4e0d\u662f\u7b2cK\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002"),(0,m.kt)("p",null,"\u4f60\u7684 KthLargest \u7c7b\u9700\u8981\u4e00\u4e2a\u540c\u65f6\u63a5\u6536\u6574\u6570 k \u548c\u6574\u6570\u6570\u7ec4nums \u7684\u6784\u9020\u5668\uff0c\u5b83\u5305\u542b\u6570\u636e\u6d41\u4e2d\u7684\u521d\u59cb\u5143\u7d20\u3002\u6bcf\u6b21\u8c03\u7528 KthLargest.add\uff0c\u8fd4\u56de\u5f53\u524d\u6570\u636e\u6d41\u4e2d\u7b2cK\u5927\u7684\u5143\u7d20\u3002"),(0,m.kt)("p",null,"\u793a\u4f8b:"),(0,m.kt)("p",null,"int k = 3;\nint[] arr = ","[4,5,8,2]",";\nKthLargest kthLargest = new KthLargest(3, arr);\nkthLargest.add(3);   // returns 4\nkthLargest.add(5);   // returns 5\nkthLargest.add(10);  // returns 5\nkthLargest.add(9);   // returns 8\nkthLargest.add(4);   // returns 8"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"#define swap(a, b) { \\\n    __typeof(a) __temp = a; \\\n    a = b, b = __temp; \\\n}\n\ntypedef struct {\n    int *data;\n    int cnt, size;\n} KthLargest;\n\nvoid downUpdate(int *arr, int n, int ind) {\n    while ((ind << 1) <= n) {\n        int temp = ind, l = ind << 1, r = ind << 1 | 1;\n        if (arr[l] < arr[temp]) temp = l;\n        if (r <= n && arr[r] < arr[temp]) temp = r;\n        if (temp == ind) break;\n        swap(arr[temp], arr[ind]);\n        ind = temp;\n    }\n    return ;\n}\n\nvoid upUpdate(int *arr, int ind) {\n    while (ind >> 1) {\n        if (arr[ind] >= arr[ind >> 1]) break;\n        swap(arr[ind], arr[ind >> 1]);\n        ind >>= 1;\n    }\n    return ;\n}\n\nint kthLargestAdd(KthLargest*, int);\nKthLargest* kthLargestCreate(int k, int* nums, int numsSize) {\n    KthLargest *p = (KthLargest *)malloc(sizeof(KthLargest));\n    p->data = (int *)malloc(sizeof(int) * (k + 1));\n    p->size = k;\n    p->cnt = k - 1;\n    memcpy(p->data + 1, nums, sizeof(int) * (k - 1));\n    for (int i = (k - 1) >> 1; i >= 1; --i) {\n        downUpdate(p->data, k - 1, i);\n    }\n    for (int i = k - 1; i < numsSize; i++) {\n        kthLargestAdd(p, nums[i]);\n    }\n    return p;\n}\n\nint kthLargestAdd(KthLargest* obj, int val) {\n    if (obj->cnt == obj->size) {\n        if (val > obj->data[1]) {\n            obj->data[1] = val;\n            downUpdate(obj->data, obj->size, 1);\n        }\n    } else {\n        obj->cnt += 1;\n        obj->data[obj->cnt] = val;\n        upUpdate(obj->data, obj->cnt);\n    }\n    return obj->data[1];\n}\n\nvoid kthLargestFree(KthLargest* obj) {\n    if (obj == NULL) return ;\n    free(obj->data);\n    free(obj);\n    return ;\n}\n")),(0,m.kt)("h4",{id:"2402-295-\u6570\u636e\u6d41\u7684\u4e2d\u4f4d\u6570"},"2.4.0.2. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/find-median-from-data-stream/"},"295. \u6570\u636e\u6d41\u7684\u4e2d\u4f4d\u6570")),(0,m.kt)("p",null,"\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u7ef4\u62a4\u4e24\u4e2a\u5806\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u7528\u4e8e\u5b58\u50a8\u8f93\u5165\u6570\u5b57\u4e2d\u8f83\u5c0f\u4e00\u534a\u7684\u6700\u5927\u5806"),(0,m.kt)("li",{parentName:"ol"},"\u7528\u4e8e\u5b58\u50a8\u8f93\u5165\u6570\u5b57\u7684\u8f83\u5927\u4e00\u534a\u7684\u6700\u5c0f\u5806")),(0,m.kt)("p",null,"\u8fd9\u6837\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8f93\u5165\u4e2d\u7684\u4e2d\u503c\uff1a\u5b83\u4eec\u7ec4\u6210\u5806\u7684\u9876\u90e8\uff01"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"typedef struct Heap {\n    int *data;\n    int n, size;\n} Heap;\n\nvoid expandHeap(Heap *h) {\n    h->data = realloc(h->data, 2 * h->size * sizeof(int));\n    h->size *= 2;\n    return ;\n}\n\n#define swap(a, b) { \\\n    __typeof(a) __temp = a; \\\n    a = b, b = __temp; \\\n}\n\n#define pushHeap(h, val, comp) { \\\n    if (h->size == h->n + 1) { \\\n        expandHeap(h); \\\n    } \\\n    h->data[++(h->n)] = val; \\\n    int ind = h->n; \\\n    while (ind != 1 && h->data[ind] comp h->data[ind >> 1]) { \\\n        swap(h->data[ind], h->data[ind >> 1]); \\\n        ind >>= 1; \\\n    } \\\n}\n\n#define popHeap(h, comp) do { \\\n    if (h->n == 0) break; \\\n    h->data[1] = h->data[(h->n)--]; \\\n    int ind = 1; \\\n    while (ind << 1 <= h->n) { \\\n        int temp = ind, l = ind << 1, r = ind << 1 | 1; \\\n        if (h->data[l] comp h->data[temp]) temp = l; \\\n        if (r <= h->n && h->data[r] comp h->data[temp]) temp = r; \\\n        if (temp == ind) break; \\\n        swap(h->data[temp], h->data[ind]); \\\n        ind = temp; \\\n    } \\\n} while(0);\n\nHeap *creatHeap() {\n    Heap *h = (Heap *)malloc(sizeof(Heap));\n    h->size = 100;\n    h->data = (int *)malloc(sizeof(int) * h->size);\n    h->n = 0;\n    return h;\n}\n\nvoid clearHeap(Heap *h) {\n    if (h == NULL) return ;\n    free(h->data);\n    free(h);\n    return ;\n}\n\ntypedef struct {\n    Heap *min_heap, *max_heap;\n} MedianFinder;\n\n/** initialize your data structure here. */\n\nMedianFinder* medianFinderCreate() {\n    MedianFinder* m = (MedianFinder*)malloc(sizeof(MedianFinder));\n    m->min_heap = creatHeap();\n    m->max_heap = creatHeap();\n    return m;\n}\n\nvoid medianFinderAddNum(MedianFinder* m, int num) {\n    if (m->min_heap->n == 0 || num >= m->min_heap->data[1]) {\n        pushHeap(m->min_heap, num, <);\n    } else {\n        pushHeap(m->max_heap, num, >);\n    }\n    if (m->min_heap->n - m->max_heap->n == 2) {\n        pushHeap(m->max_heap, m->min_heap->data[1], >);\n        popHeap(m->min_heap, <);\n    }\n    if (m->max_heap->n - m->min_heap->n == 2) {\n        pushHeap(m->min_heap, m->max_heap->data[1], <);\n        popHeap(m->max_heap, >);\n    }\n    return ;\n}\n\ndouble medianFinderFindMedian(MedianFinder* m) {\n    switch (m->min_heap->n - m->max_heap->n) {\n        case -1: return m->max_heap->data[1];\n        case 0: return 1.0 * (m->min_heap->data[1] + m->max_heap->data[1]) / 2.0;\n        case 1: return m->min_heap->data[1];\n    }\n    return 0.0;\n}\n\nvoid medianFinderFree(MedianFinder* obj) {\n    if (obj == NULL) return ;\n    clearHeap(obj->min_heap);\n    clearHeap(obj->max_heap);\n    free(obj);\n    return ;\n}\n")),(0,m.kt)("h4",{id:"2403-lc-264-\u4e11\u6570-ii"},"2.4.0.3. LC-264 ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/ugly-number-ii/description/"},"\u4e11\u6570 II")),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u51fa\u7b2c ",(0,m.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u4e11\u6570\u3002"),(0,m.kt)("p",{parentName:"blockquote"},"\u4e11\u6570\u5c31\u662f\u8d28\u56e0\u6570\u53ea\u5305\u542b ",(0,m.kt)("inlineCode",{parentName:"p"},"2, 3, 5")," \u7684",(0,m.kt)("strong",{parentName:"p"},"\u6b63\u6574\u6570"),"\u3002")),(0,m.kt)("p",null,"2.\u4f18\u5148\u961f\u5217 (\u5c0f\u9876\u5806)\n\u4f18\u5148\u961f\u5217/\u5c0f\u9876\u5806/\u5927\u9876\u5806\n\u5229\u7528\u4f18\u5148\u961f\u5217\u6709\u81ea\u52a8\u6392\u5e8f\u7684\u529f\u80fd\n\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\u5143\u7d20\uff0c\u5b58\u5165\u961f\u5934\u5143\u7d20",(0,m.kt)("em",{parentName:"p"},"2\u3001\u961f\u5934\u5143\u7d20"),"3\u3001\u961f\u5934\u5143\u7d20*5\n\u4f46\u6ce8\u610f\uff0c\u50cf 12 \u8fd9\u4e2a\u5143\u7d20\uff0c\u53ef\u7531 4 \u4e58 3 \u5f97\u5230\uff0c\u4e5f\u53ef\u7531 6 \u4e58 2 \u5f97\u5230\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u53bb\u91cd\n\u8fd8\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\u91c7\u7528 set \u6765\u8bc6\u522b\u6709\u65e0\u91cd\u590d"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int nthUglyNumber(int n) {\n        priority_queue <double,vector<double>,greater<double> > q;\n        set<int> s;\n        s.insert(1);\n        vector<int> mask({2,3,5});\n        double answer=1;\n        for (int i=1;i<n;++i)\n        {\n            for (int &j:mask)\n                if (s.count(answer*j)==0)\n                {\n                    q.push(answer*j);\n                    s.insert(answer*j);\n                }\n            answer=q.top();\n            q.pop();\n        }\n        return answer;\n    }\n};\n\n")),(0,m.kt)("p",null,"3.\u52a8\u6001\u89c4\u5212 (\u4e09\u6307\u9488)\n\u6211\u4eec\u5148\u6a21\u62df\u624b\u5199\u4e11\u6570\u7684\u8fc7\u7a0b\n1 \u6253\u5934\uff0c1 \u4e58 2 1 \u4e58 3 1 \u4e58 5\uff0c\u73b0\u5728\u662f {1,2,3,5}\n\u8f6e\u5230 2\uff0c2 \u4e58 2 2 \u4e58 3 2 \u4e58 5\uff0c\u73b0\u5728\u662f {1,2,3,4,5,6,10}\n\u624b\u5199\u7684\u8fc7\u7a0b\u548c\u91c7\u7528\u5c0f\u9876\u5806\u7684\u65b9\u6cd5\u5f88\u50cf\uff0c\u4f46\u662f\u600e\u4e48\u505a\u5230\u63d0\u524d\u6392\u5e8f\u5462"),(0,m.kt)("p",null,"\u5c0f\u9876\u5806\u7684\u65b9\u6cd5\u662f\u5148\u5b58\u518d\u6392\uff0cdp \u7684\u65b9\u6cd5\u5219\u662f\u5148\u6392\u518d\u5b58\n\u6211\u4eec\u8bbe 3 \u4e2a\u6307\u9488 p_2,p_3,p_5\n\u4ee3\u8868\u7684\u662f\u7b2c\u51e0\u4e2a\u6570\u76842\u500d\u3001\u7b2c\u51e0\u4e2a\u6570 3 \u500d\u3001\u7b2c\u51e0\u4e2a\u6570 5 \u500d\n\u52a8\u6001\u65b9\u7a0b dp","[i]","=min(dp","[p_2]",(0,m.kt)("em",{parentName:"p"},"2,dp","[p_3]"),"3,dp","[p_5]","*5)\n\u5c0f\u9876\u5806\u662f\u4e00\u4e2a\u5143\u7d20\u51fa\u6765\u7136\u540e\u5b58 3 \u4e2a\u5143\u7d20\n\u52a8\u6001\u89c4\u5212\u5219\u662f\u6807\u8bc6 3 \u4e2a\u5143\u7d20\uff0c\u901a\u8fc7\u6bd4\u8f83\u4ed6\u4eec\u7684 2 \u500d\u30013 \u500d\u30015 \u500d\u7684\u5927\u5c0f\uff0c\u6765\u4e00\u4e2a\u4e00\u4e2a\u5b58"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"        int t1 = 0, t2 = 0, t3 = 0;\n        vector<int> k(n);\n        k[0] = 1;\n        for (int i = 1; i < n; ++i) {\n            int f1 = k[t1] * 2, f2 = k[t2] * 3, f3 = k[t3] * 5;\n            k[i] = min(f1, min(f2, f3));\n            if (k[i] == f1) t1++;\n            if (k[i] == f2) t2++;\n            if (k[i] == f3) t3++;\n        }\n        return k[n - 1];\n")),(0,m.kt)("h4",{id:"2404-lc-23-\u5408\u5e76k\u4e2a\u5347\u5e8f\u94fe\u8868"},"2.4.0.4. LC-23 ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/merge-k-sorted-lists/description/"},"\u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868")),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5206\u6cbb\u5408\u5e76")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        if (lists.empty()) return nullptr;\n        return merge(lists, 0, lists.size() - 1);\n    }\nprivate :\n    ListNode* merge(vector<ListNode*>& lists, int l, int r) {\n        if (l == r) return lists[l];\n        if (l > r) return nullptr;\n        int mid = (l + r) >> 1;\n        return mergeTwoLists(merge(lists, l, mid), merge(lists, mid + 1, r));\n    }\n    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\n        if (!l1) return l2;\n        if (!l2) return l1;\n        ListNode dummy, *p = &dummy;\n        dummy.next = nullptr;\n        while (l1 || l2) {\n            if (!l2 || l1 && l1->val < l2->val) {\n                p->next = l1;\n                p = p->next;\n                l1 = l1->next;\n            } else {\n                p->next = l2;\n                p = p->next;\n                l2 = l2->next;\n            }\n        }\n        return dummy.next;\n    }\n};\n")),(0,m.kt)("ol",{start:2},(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u4f7f\u7528\u4f18\u5148\u961f\u5217\u5408\u5e76"),(0,m.kt)("p",{parentName:"li"},"\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u6bcf\u4e2a\u94fe\u8868\u6ca1\u6709\u88ab\u5408\u5e76\u7684\u5143\u7d20\u7684\u6700\u524d\u9762\u4e00\u4e2a\uff0ck\u4e2a\u94fe\u8868\u5c31\u6700\u591a\u6709 k\u4e2a\u6ee1\u8db3\u8fd9\u6837\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u6bcf\u6b21\u5728\u8fd9\u4e9b\u5143\u7d20\u91cc\u9762\u9009\u53d6 val \u5c5e\u6027\u6700\u5c0f\u7684\u5143\u7d20\u5408\u5e76\u5230\u7b54\u6848\u4e2d"))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    typedef pair<int, ListNode *> PII;\n    struct cmp {\n        bool operator()(const PII &a, const PII &b) const {\n          return a.first > b.first;\n      }\n    };\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        if (lists.empty()) return nullptr;\n        //return merge(lists, 0, lists.size() - 1);\n        priority_queue<PII, vector<PII>, cmp> q;\n        for (auto cur : lists) {\n            if (cur) q.push({cur->val, cur});\n        }\n        ListNode head, *tail = &head;\n        while (!q.empty()) {\n            auto cur = q.top();\n            ListNode *ptr = cur.second;\n            q.pop();\n            tail->next = ptr;\n            tail = tail->next;\n            if (ptr->next) q.push({ptr->next->val, ptr->next});\n        }\n        tail->next = nullptr;\n        return head.next;\n\n    }\n")),(0,m.kt)("h4",{id:"2405-hzoj-571-\u5173\u7cfb\u7f51\u7edc1cpp"},"2.4.0.5. HZOJ-571-\u5173\u7cfb\u7f51\u7edc1.cpp"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <set>\nusing namespace std;\n#define MAX_N 100\nint arr[MAX_N + 5][MAX_N + 5];\n\nstruct Data {\n    Data(int a, int b, int c) {\n        x = a, y = b, cnt = c;\n    }\n    int cnt, x, y;\n};\n\nstruct DataCompare {\n    bool operator()(const Data &a, const Data &b) const {\n        if (a.cnt - b.cnt) return a.cnt < b.cnt;\n        if (a.x - b.x) return a.x < b.x;\n        return a.y < b.y;\n    }\n};\n\nset<Data, DataCompare> s;\n\nint main() {\n    int n, x, y;\n    cin >> n >> x >> y;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            cin >> arr[i][j];\n            if (arr[i][j]) {\n                s.insert(Data(i, j, 1));\n            }\n        }\n    }\n    while (s.size()) {\n        int x = s.begin()->x;\n        int y = s.begin()->y;\n        int cnt = s.begin()->cnt;\n        s.erase(s.begin());\n        for (int i = 1; i <= n; i++) {\n            if (arr[y][i] != 1) continue;\n            if (arr[x][i]) continue;\n            arr[x][i] = cnt + 1;\n            s.insert(Data(x, i, cnt + 1));\n        }\n    }\n    cout << arr[x][y] - 1 << endl;\n    return 0;\n}\n")),(0,m.kt)("h4",{id:"2406-hzoj-572-\u6709\u5e8f\u8868\u7684\u6700\u5c0f\u548ccpp"},"2.4.0.6. HZOJ-572-\u6709\u5e8f\u8868\u7684\u6700\u5c0f\u548c.cpp"),(0,m.kt)("h4",{id:"2407-\u9898\u76ee\u63cf\u8ff0"},"2.4.0.7. \u9898\u76ee\u63cf\u8ff0"),(0,m.kt)("p",null," \u7ed9\u51fa\u4e24\u4e2a\u957f\u5ea6\u4e3a ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"n \u7684\u6709\u5e8f\u8868 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc34"),"A \u548c ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc35"),"B\uff0c\u5728 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc34"),"A \u548c ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc35"),"B \u4e2d\u5404\u4efb\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u5f97\u5230 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"2n2 \u4e2a\u548c\uff0c\u6c42\u8fd9\u4e9b\u548c\u4e2d\u524d ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"n \u4e2a\u6700\u5c0f\u503c\u3002"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53cc\u6307\u9488")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <set>\nusing namespace std;\n#define MAX_N 400000\nlong long a[MAX_N + 5], b[MAX_N + 5];\n\nstruct Data {\n    Data(long long val, long long i, long long j) : val(val), i(i), j(j) {}\n    long long val, i, j;\n    bool operator<(const Data &a) const {\n        if (val - a.val) return val < a.val;\n        if (i - a.i) return i < a.i;\n        return j < a.j;\n    }\n};\n\nset<Data> s;\n\nint main() {\n    int n;\n    scanf("%d", &n);\n    for (int i = 0; i < n; i++) scanf("%lld", a + i);\n    for (int i = 0; i < n; i++) scanf("%lld", b + i);\n    s.insert(Data(a[0] + b[0], 0, 0));\n    for (long long i = 0; i < n; i++) {\n        long long val = s.begin()->val;\n        long long x = s.begin()->i;\n        long long y = s.begin()->j;\n        s.erase(s.begin());\n        printf("%lld\\n", val);\n        if (x + 1 < n) s.insert(Data(a[x + 1] + b[y], x + 1, y));\n        if (y + 1 < n) s.insert(Data(a[x] + b[y + 1], x, y + 1));\n    }\n    return 0;\n}\n')),(0,m.kt)("p",null,"2.\u4f18\u5148\u961f\u5217"),(0,m.kt)("h4",{id:"2408-hzoj-284-\u8d85\u5e02\u5356\u8d27-\u4e8c\u53c9\u5806-\u5e76\u67e5\u96c6"},"2.4.0.8. hzoj-284-\u8d85\u5e02\u5356\u8d27-\u4e8c\u53c9\u5806-\u5e76\u67e5\u96c6"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u8d85\u5e02\u91cc\u6709N\u4e2a\u5546\u54c1. \u7b2ci\u4e2a\u5546\u54c1\u5fc5\u987b\u5728\u4fdd\u8d28\u671f(\u7b2cdi\u5929)\u4e4b\u524d\u5356\u6389, \u82e5\u5356\u6389\u53ef\u8ba9\u8d85\u5e02\u83b7\u5f97pi\u7684\u5229\u6da6."),(0,m.kt)("p",{parentName:"blockquote"},"\u6bcf\u5929\u53ea\u80fd\u5356\u4e00\u4e2a\u5546\u54c1."),(0,m.kt)("p",{parentName:"blockquote"},"\u73b0\u5728\u4f60\u8981\u8ba9\u8d85\u5e02\u83b7\u5f97\u6700\u5927\u7684\u5229\u6da6.")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n#include <stack>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <set>\n#include <vector>\nusing namespace std;\n#define MAX_N 10000\nstruct Data {\n    int p, d;\n} a[MAX_N + 5];\n\nbool cmp(const Data &a, const Data &b) {\n    return a.d < b.d;\n}\n\ntypedef pair<int, int> PII;\nset<PII> s;\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].p >> a[i].d;\n    }\n    sort(a, a + n, cmp);\n    for (int i = 0; i < n; i++) {\n        if (s.size() < a[i].d) {\n      //\u63d2\u5165i\u662f\u4e3a\u4e86set\u53bb\u91cd\n            s.insert(PII(a[i].p, i));\n        } else if (s.begin()->first < a[i].p) {\n            s.erase(s.begin());\n            s.insert(PII(a[i].p, i));\n        }\n    }\n    int ans = 0;\n    for (auto iter = s.begin(); iter != s.end(); iter++) {\n        ans += iter->first;\n        cout << iter->first << endl;\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 10000\n\nstruct Data {\n    int p, d;\n} arr[MAX_N + 5];\n \nstruct UnionSet {\n    int fa[MAX_N + 5];\n    void init(int n) {\n        for (int i = 0; i <= n; ++i) fa[i] = i;\n    }\n    int get(int x) {\n        return (fa[x] = (x - fa[x] ? get(fa[x]) : x));\n    }\n    //\u6839\u8282\u70b9\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u524d\u9762\u7b2c\u4e00\u4e2a\u7a7a\u4f4d\u7f6e\n    //\u524d\u9762\u505a\u513f\u5b50\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nbool cmp(const Data &a, const Data &b) {\n    return a.p > b.p;\n}\n\nUnionSet u;\n\nint solve(int n) {\n    for (int i = 0; i < n; ++i) {\n        cin >> arr[i].p >> arr[i].d;\n    }\n    sort(arr, arr + n, cmp);\n    u.init(MAX_N);\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n        if (u.get(arr[i].d) == 0) continue;\n        ans += arr[i].p;\n        int day = u.get(arr[i].d);\n        //\u8ba9day\u4f5c\u4e3aday-1\u7684\u5b50\u96c6\uff0cday\u88ab\u5360\u7528\n        u.merge(day, day - 1);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\nint main() {\n    int n;\n    while (cin >> n) solve(n);\n    return 0;\n}\n\n")),(0,m.kt)("h4",{id:"2409-hzoj-286-\u6570\u636e\u5907\u4efd"},"2.4.0.9. hzoj-286. \u6570\u636e\u5907\u4efd"),(0,m.kt)("p",null,"\u7b49\u6548\u6743\u503c\u66ff\u6362"),(0,m.kt)("p",null,"\u53cd\u6094\u7b56\u7565"),(0,m.kt)("p",null,"\u57fa\u4e8e\u9009\u62e9\u4e00\u6761\u7535\u7f06\u7684\u60c5\u51b5\u53bb\u9009\u62e9\u7b2c\u4e8c\u6761\u7535\u7f06"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210121192544196",src:n(9903).Z})),(0,m.kt)("p",null,"\u82e5\u8981\u9009\u62e9\u5468\u56f4\u76843-4\u5219\u5fc5\u987b\u9009\u62e91-2"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210121192854505",src:n(59530).Z})),(0,m.kt)("p",null,"\u7b49\u6548\u56fe\u7684\u751f\u6210\uff0c\u53cd\u6094\u4fa7\u7387"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 100000\n#define inf 0x3f3f3f\n\nint a[MAX_N + 5];\nint l[MAX_N + 5], pre[MAX_N + 5], nxt[MAX_N + 5];\ntypedef pair<int, int> PII;\nset<PII> s;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    a[0] = 0;\n    for (int i = 1; i <= n; ++i) {\n        cin >> a[i];\n        l[i] = a[i] - a[i - 1];\n        pre[i] = i - 1;\n        nxt[i] = i + 1 > n ? 0 : i + 1;\n        s.insert(PII(l[i], i));\n    }\n    int sum = 0;\n    while (k) {\n        int t0 = s.begin()->second, t1 = pre[t0], t2 = nxt[t0];\n        if (t1 == 0 || l[t0] != s.begin()->first) {\n            s.erase(s.begin());\n            continue;\n        }\n        s.erase(s.begin());\n        sum += l[t0];\n        k--;\n        l[t0] = l[t1] + l[t2] - l[t0];\n        l[t1] = l[t2] = inf;\n        if (t2 == 0) continue;\n        pre[t0] = pre[t1];\n        nxt[t0] = nxt[t2];\n        nxt[pre[t1]] = t0;\n        pre[nxt[t2]] = t0;\n        s.insert(PII(l[t0], t0));\n    }\n    cout << sum << endl;\n\n    return 0;\n}\n\n")),(0,m.kt)("h4",{id:"24010-hzoj-289-\u751f\u65e5\u793c\u7269cpp"},"2.4.0.10. HZOJ-289-\u751f\u65e5\u793c\u7269.cpp"),(0,m.kt)("p",null,(0,m.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/zyfzyf/p/4114774.html"},"BZOJ2288")),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"}," \u674e\u534e 1818 \u5c81\u751f\u65e5\u7684\u65f6\u5019\uff0c\u5c0f\u660e\u7ed9\u5979\u770b\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u5e8f\u5217 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc34"),"1,",(0,m.kt)("em",{parentName:"p"},"\ud835\udc34"),"2,...,",(0,m.kt)("em",{parentName:"p"},"\ud835\udc34**\ud835\udc41"),"A1,A2,...,AN\u3002 \u5979\u88ab\u5141\u8bb8\u9009\u62e9\u4e0d\u8d85\u8fc7 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc40"),"M \u4e2a\u8fde\u7eed\u7684\u90e8\u5206\u4f5c\u4e3a\u81ea\u5df1\u7684\u751f\u65e5\u793c\u7269\u3002\u81ea\u7136\u5730\uff0c\u674e\u534e\u60f3\u8981\u77e5\u9053\u9009\u62e9\u5143\u7d20\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\u4f60\u80fd\u5e2e\u52a9\u5979\u5417\uff1f\n\u9996\u5148\u8fde\u5728\u4e00\u5757\u7684\u6b63\u8d1f\u76f8\u540c\u7684\u80af\u5b9a\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6b63\u8d1f\u4ea4\u66ff\u7684\u6570\u5217\uff0c\u5e76\u4e14\u9996\u4f4d\u4e24\u9879\u90fd\u662f\u6b63\u6570\uff08\u8d1f\u6570\u53bb\u6389\uff09")),(0,m.kt)("p",null,"\u7136\u540e\u5982\u679c\u6b63\u7684\u9879\u6570<=m\uff0c\u90a3\u663e\u7136\u6211\u4eec\u5168\u90e8\u9009\u8d70\u5c31\u83b7\u5f97\u4e86\u6700\u5927\u6743\u503c\uff0c\u5426\u5219\u6211\u4eec\u9700\u8981\u505a\u4e00\u70b9\u727a\u7272\u3002"),(0,m.kt)("p",null,"1\uff09\u4e0d\u9009\u67d0\u4e9b\u6b63\u9879"),(0,m.kt)("p",null,"2\uff09\u9009\u4e00\u4e9b\u8d1f\u9879\u4f7f\u5f97\u76f8\u90bb\u7684\u6b63\u9879\u6210\u4e3a1\u5757"),(0,m.kt)("p",null,"\u8bb0\u6240\u6709\u6b63\u6570\u4e4b\u548c\u4e3asum\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e0a\u9762\u4e24\u79cd\u64cd\u4f5c\u4f7f\u5f97sum\u51cf\u6389\u7684\u6570\u6700\u5c0f\u5e76\u4e14\u6ee1\u8db3\u53ea\u6709m\u5757\u3002"),(0,m.kt)("p",null,"\u6211\u4eec\u628a\u6240\u6709\u6570\u7684\u7edd\u5bf9\u503c\u653e\u5165\u4e00\u4e2a\u5806\uff0c\u6bcf\u6b21\u53d6\u6700\u5c0f\u5143\u7d20x\u3002sum'-=x"),(0,m.kt)("p",null,"\u90a3\u4e48\u5982\u679c\u8be5\u6570\u539f\u6765\u662f\u6b63\u7684\uff0c\u610f\u601d\u662f\u4e0d\u9009\u5b83\uff1b"),(0,m.kt)("p",null,"\u5982\u679c\u662f\u8d1f\u7684\uff0c\u610f\u601d\u662f\u628a\u5b83\u4e24\u8fb9\u7684\u6b63\u6570\u5408\u5e76\u3002"),(0,m.kt)("p",null,"\u4f46\u76f4\u63a5\u8fd9\u6837\u505a\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u53d6\u8d1f\u7684\u65f6\u5019\u4e24\u8fb9\u7684\u6b63\u7684\u5fc5\u987b\u4e0d\u88ab\u53d6\uff0c\u53d6\u6b63\u7684\u65f6\u5019\u4e24\u8fb9\u7684\u8d1f\u7684\u4e0d\u88ab\u53d6\u3002"),(0,m.kt)("p",null,"\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0d\u80fd\u9009\u62e9\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff01\u6211\u4eec\u6210\u529f\u7684\u5c06\u6b64\u9898\u8f6c\u5316\u6210\u4e86\u6570\u636e\u5907\u4efd\u95ee\u9898\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <set>\nusing namespace std;\n#define MAX_N 100000\nlong long arr[MAX_N + 5];\n\nstruct Node {\n    long long val, id, f;\n    long long pre, next;\n    bool operator<(const Node &a) const {\n        if (abs(val) - abs(a.val)) return abs(val) < abs(a.val);\n        return id < a.id;\n    }\n} list[MAX_N + 5];\n\nset<Node> s;\n\nvoid del(long long k) {\n    if (list[k].f == 0) return ;\n    if (list[k].pre)  list[list[k].pre].next = list[k].next;\n    if (list[k].next) list[list[k].next].pre = list[k].pre;\n    list[k].f = 0;\n    return ;\n}\n\nint main() {\n    long long n, m, cnt = 0, sum = 0;\n    cin >> n >> m;\n    for (long long i = 0; i < n; i++) cin >> arr[i];\n    for (long long i = 0, k = 1; i < n; k++) {\n        list[k].val = 0;\n        list[k].id = k;\n        list[k].f = 1;\n        while (i < n && arr[i] == 0) i++;\n        long long val = arr[i];\n        while (i < n && arr[i] * val >= 0) {\n            list[k].val += arr[i++];\n        }\n        if (k - 1) list[k - 1].next = k;\n        list[k].pre = k - 1;\n        list[k].next = 0;\n        if (list[k].val > 0) cnt += 1, sum += list[k].val;\n        s.insert(list[k]);\n    }\n    while (cnt > m) {\n        long long k = s.begin()->id;\n        s.erase(s.begin());\n        if (list[k].f == 0) continue;\n        if (list[k].pre && list[k].next) {\n            sum -= abs(list[k].val);\n            cnt -= 1;\n            list[k].val += list[list[k].pre].val;\n            list[k].val += list[list[k].next].val;\n            del(list[k].pre);\n            del(list[k].next);\n            s.insert(list[k]);\n        } else {\n            if (list[k].val > 0) sum -= list[k].val, cnt -= 1;\n            del(k);\n        }\n    }\n    cout << sum << endl;\n    return 0;\n}\n")),(0,m.kt)("h4",{id:"24011-hzoj-285-\u5e8f\u5217m\u5c0f\u548c"},"2.4.0.11. HZOJ-285 \u5e8f\u5217M\u5c0f\u548c"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"  \u7ed9\u51fa\u4e00\u4e2a ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"\u2217",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5a"),"n\u2217m \u7684\u77e9\u9635\uff0c\u6bcf\u884c\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u7ec4\u6210\u4e00\u4e2a\u5305\u542b ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"n \u4e2a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u4e00\u5171\u6709 ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5a**\ud835\udc5b"),"mn \u79cd\u5e8f\u5217\uff0c\u6c42\u51fa\u5e8f\u5217\u548c\u6700\u5c0f\u7684\u524d ",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5a"),"m \u4e2a\u5e8f\u5217\u7684\u5e8f\u5217\u548c\u3002")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define INF 0x3f3f3f3f\n#define MAX_M 2000\nint nums[MAX_M + 5];\n//\u65f6\u95f4\u6233, \u52a0\u8d1f\u53f7\u6a21\u62df\u5927\u9876\u5806\ntypedef pair<int, int> PII;\n\nstruct BigSet : set<PII> {\npublic :\n    BigSet() : t(0) {}\n    void insert(int &a) {\n        this->set<PII>::insert(PII(-a, t++));\n    }\n    void pop() {\n        erase(begin());\n    }\n    int top() {\n        return -(begin()->first);\n    }\n\nprivate :\n    int t;\n};\n\nBigSet s;\n\nvoid extract(int m) {\n    for (int i = m - 1; i >= 0; --i) {\n        nums[i] = s.top();\n        s.pop();\n    }\n}\n\nint main() {\n    int n, m, x;\n    cin >> n >> m;\n    for (int i = 0; i < m; ++i) {\n        cin >> x;\n        s.insert(x);\n    }\n    for (int i = 1; i < n; ++i) {\n        extract(m);\n        for (int j = 0; j < m; ++j) {\n            cin >> x;\n            for (int k = 0; k < m; ++k) {\n                int y = x + nums[k];\n                if (s.size() == m && y >= s.top()) break;\n                if (s.size() == m) s.pop();\n                s.insert(y);\n            }\n        }\n    }\n    extract(m);\n    for (int i = 0; i < m; ++i) {\n        i && cout << " ";\n        cout << nums[i];\n    }\n    cout << endl;\n    return 0;\n}\n\n')),(0,m.kt)("h2",{id:"25-hashtable"},"2.5. ==HashTable=="),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},'typedef struct Node {\n    char *str;\n    struct Node *next;\n} Node;\n\ntypedef struct HashTable {\n    Node **data;\n    int size;\n} HashTable;\n\nNode *init_node(char *str, Node *head) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->str = strdup(str);\n    p->next = head;\n    return p;\n}\n\nHashTable *init_hashtable(int n) {\n    HashTable *h = (HashTable *)malloc(sizeof(HashTable));\n    h->size = n * 2;\n    h->data = (Node **)calloc(h->size, sizeof(Node *));\n    return h;\n}\n\nint BKDRHash(char *str) {\n    int hash = 0, seed = 31;\n    for (int i = 0; str[i]; ++i) hash = hash * seed + str[i];\n    return hash & 0x7fffffff;\n}\n\nint search(HashTable *h, char *str) {\n    int hash = BKDRHash(str);\n    int ind = hash % h->size;\n    Node *head = h->data[ind];\n    while (head && strcmp(str, head->str)) head = head->next;\n    return head != NULL;\n}\n\nint insert(HashTable *h, char *str) {\n    if (search(h, str)) return 0;\n    int hash = BKDRHash(str);\n    int ind = hash % h->size;\n    h->data[ind] = init_node(str, h->data[ind]);\n    return 1;\n}\n\nvoid clear_node(Node *head) {\n    if (head == NULL) return ;\n    Node *p = head, *q;\n    while(p) {\n        q = p->next;\n        free(p->str);\n        free(p);\n        p = q;\n    }\n    return ;\n}\n\nvoid clear_hashtable(HashTable *h) {\n    if (h == NULL) return ;\n    for (int i = 0; i < h->size; ++i) clear_node(h->data[i]);\n    free(h);\n    return ;\n}\n\nint main() {\n    #define max_n 1000\n    HashTable *h = init_hashtable(max_n + 5);\n    char *str = (char *)malloc(sizeof(char) * (max_n + 5));\n    int op;\n    while (~scanf("%d%s", &op, str)) {\n        switch (op) {\n            case 0 : \n                printf("%s insert to the HashTable = %d\\n", str, insert(h, str));\n            break;\n            default : \n                printf("search %s from the HashTable = %d\\n", str, search(h, str));\n            break;\n        }\n    }\n    clear_hashtable(h);\n    #undef max_n\n\n    return 0;\n}\n\n')),(0,m.kt)("h2",{id:"26-sort"},"2.6. ==sort=="),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"849589-20171015223238449-2146169197",src:n(93544).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"849589-20180402133438219-1946132192",src:n(93073).Z})),(0,m.kt)("p",null,"Code:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define swap(a, b) {\\\n    __typeof(a) __temp = a;\\\n    a = b; b = __temp; \\\n}\n\n#define TEST(arr, n, func, args...) {\\\n    int *num = (int *)malloc(sizeof(int) * n);\\\n    memcpy(num, arr, sizeof(int) * n);\\\n    output(num, n);\\\n    printf("%s\\t= ", #func);\\\n    func(num, args);\\\n    output(num, n);\\\n    free(num);\\\n}\n\n\nint insert_sort(int *arr, int n) {\n    for (int i = 1; i < n; ++i) {\n        for (int j = i; j > 0 && arr[j] < arr[j - 1]; --j) {\n            swap(arr[j], arr[j - 1]);\n        }\n    }\n    return 1;\n}\n\nint bubble_sort(int *arr, int n) {\n    int times = 1;\n    for (int i = 1; times && i < n; ++i) {\n        times = 0;\n        for (int j = 0; j < n - i; ++j) {\n            if (arr[j] <= arr[j + 1]) continue;\n            swap(arr[j], arr[j + 1]);\n            times++;\n        }\n    }\n    return 1;\n}\n\nint merge_sort(int *arr, int l , int r) {\n    if (r - l <= 1) {\n        if (r - l == 1 && arr[r] < arr[l]) {\n            swap(arr[r], arr[l]);\n        }\n        return 1;\n    }\n    int mid =  (l + r) >> 1;\n    merge_sort(arr, l, mid);\n    merge_sort(arr, mid + 1, r);\n    int p1 = l, p2 = mid + 1, ind = 0;\n    int *tmp =  (int *)malloc(sizeof(int) * (r - l + 1));\n    while (p1 <= mid || p2 <= r) {\n        if (p2 > r || p1 <= mid && arr[p1] < arr[p2]) tmp[ind++] = arr[p1++];\n        else tmp[ind++] = arr[p2++];\n    }\n    memcpy(arr + l, tmp, sizeof(int) * (r - l + 1));\n    free(tmp);\n    return 1;\n}\n\nint select_sort(int *arr, int n) {\n    for (int i = 0; i < n - 1; ++i) {\n        int ind = i;\n        for (int j = i + 1; j < n; ++j) {\n            if (arr[ind] <= arr[j]) continue;\n            ind = j;\n        }\n        swap(arr[ind], arr[i]);\n    }\n    return 1;\n}\n\nint quick_sort(int *arr, int l, int r) {\n    if (l >= r) return 0;\n    int x = l, y = r, z = arr[l];\n    while (x  < y) {\n        while (x < y && arr[y] > z) --y;\n        if (x < y) arr[x++] = arr[y];\n        while (x < y && arr[x] < z) ++x;\n        if (x < y) arr[y--] = arr[x];\n    }\n    arr[x] = z;\n    quick_sort(arr, l, x - 1);\n    quick_sort(arr, x + 1, r);\n    return 1;\n}\n\nvoid output(int *arr, int n) {\n    for (int i = 0; i < n; ++i) {\n        printf(" %d", arr[i]);\n    }\n    printf("\\n");\n}\n\nint *init(int n) {\n    int *arr = (int *)malloc(sizeof(int) * n);\n    while (n--) arr[n] = rand() % 100;\n    return arr;\n}\n\nvoid downUpdate(int *arr, int ind, int n) {\n    while ((ind << 1) <= n) {\n        int temp = ind, l = ind << 1, r = ind << 1 | 1;\n        if (arr[l] > arr[temp]) temp = l;\n        if (r <= n && arr[r] > arr[temp]) temp = r;\n        if (temp == ind ) break;\n        swap(arr[temp], arr[ind]);\n        ind = temp;\n    }\n    return ;\n}\n\nint heap_sort(int *arr, int n) {\n    arr -= 1;\n    for (int i = n >> 1; i > 0; --i) {\n        downUpdate(arr, i, n);\n    }\n    for (int i = n; i > 1; --i) {\n        swap(arr[i], arr[1]);\n        downUpdate(arr, 1, i - 1);\n    }\n    return 1;\n}\n\n\nint main() {\n    srand(time(0));\n    #define max_op 20\n    int *arr = init(max_op);\n    TEST(arr, max_op, insert_sort, max_op);\n    TEST(arr, max_op, bubble_sort, max_op);\n    TEST(arr, max_op, merge_sort, 0, max_op - 1);\n    TEST(arr, max_op, select_sort, max_op);\n    TEST(arr, max_op, quick_sort, 0, max_op - 1);\n    TEST(arr, max_op, heap_sort, max_op);\n    #undef max_op\n    return 0;\n}\n\n')),(0,m.kt)("h4",{id:"26012-lc-2\u5bfb\u627e\u6307\u5b9a\u548c"},"2.6.0.12. lc-2\u5bfb\u627e\u6307\u5b9a\u548c"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    typedef pair<int, int> PII;\n    vector<int> twoSum(vector<int>& nums, int target) {\n        vector<int> ret;\n        vector<PII> nums2;\n        for (int i = 0; i < nums.size(); i++) {\n            nums2.push_back(PII(nums[i], i));\n        }\n        sort(nums2.begin(), nums2.end());\n        int i = 0, j = nums2.size() - 1;\n        while (nums2[i].first + nums2[j].first - target) {\n            if (nums2[i].first + nums2[j].first > target) --j;\n            if (nums2[i].first + nums2[j].first < target) ++i;\n        }\n        if (nums2[i].second > nums2[j].second) swap(i, j);\n        ret.push_back(nums2[i].second);\n        ret.push_back(nums2[j].second);\n        return ret;\n    }\n};\n")),(0,m.kt)("h4",{id:"26013-lc-11\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668"},"2.6.0.13. lc-11",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/container-with-most-water/description/"},"\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668")),(0,m.kt)("h4",{id:"26014-3-\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},"2.6.0.14. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/"},"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        int *map = (int *)malloc(sizeof(int) * 256);\n        for (int i = 0 ; i < 256; ++i) {\n            map[i] =  -1;\n        }\n        int ans = 0, cur = 0, pre  = -1;\n        for (int i = 0; i < s.size(); ++i) {\n            pre = max(pre, map[s[i]]);\n            cur = i - pre;\n            ans = max(ans, cur);\n            map[s[i]] = i;\n        }\n        return ans;\n    }\n};\n\n\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic: \n    int check(string &s, int l) {\n        unordered_map<char, int> m;\n        int cnt = 0;\n        for (int i = 0; s[i]; i++) {\n            m[s[i]] += 1;\n            if (m[s[i]] == 1) cnt += 1;\n            if (i >= l) {\n                m[s[i - l]] -= 1;\n                if (m[s[i - l]] == 0) cnt -= 1;\n            }\n            if (cnt == l) return 1;\n        }\n        return 0;\n    }\n    \n    int lengthOfLongestSubstring(string s) {\n        int head = 0, tail = s.length(), mid;\n        while (head < tail) {\n            mid = (head + tail + 1) >> 1;\n            if (check(s, mid)) head = mid;\n            else tail = mid - 1;\n        }\n        return head;\n    }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        unordered_map<char, int> m;\n        int pre_l = 0, ans = 0;\n        for (int i = 0; s[i]; i++) {\n            if (m.find(s[i]) == m.end()) pre_l += 1;\n            else pre_l = min(pre_l + 1, i - m[s[i]]);\n            ans = max(ans, pre_l);\n            m[s[i]] = i;\n        }\n        return ans;\n    }\n};\n")),(0,m.kt)("h4",{id:"26015-4-\u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},"2.6.0.15. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/median-of-two-sorted-arrays/"},"4. \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570")),(0,m.kt)("p",null,"\u65b9\u6cd5\u4e00\uff1a\u4e8c\u5206\u67e5\u627e\n\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u8981\u6c42\u627e\u5230\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u6700\u76f4\u89c2\u7684\u601d\u8def\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a"),(0,m.kt)("p",null,"\u4f7f\u7528\u5f52\u5e76\u7684\u65b9\u5f0f\uff0c\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u5f97\u5230\u4e00\u4e2a\u5927\u7684\u6709\u5e8f\u6570\u7ec4\u3002\u5927\u7684\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u95f4\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5373\u4e3a\u4e2d\u4f4d\u6570\u3002"),(0,m.kt)("p",null,"\u4e0d\u9700\u8981\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u53ea\u8981\u627e\u5230\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\u7531\u4e8e\u4e24\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u5df2\u77e5\uff0c\u56e0\u6b64\u4e2d\u4f4d\u6570\u5bf9\u5e94\u7684\u4e24\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u4e4b\u548c\u4e5f\u662f\u5df2\u77e5\u7684\u3002\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u521d\u59cb\u65f6\u5206\u522b\u6307\u5411\u4e24\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807 00 \u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u5c06\u6307\u5411\u8f83\u5c0f\u503c\u7684\u6307\u9488\u540e\u79fb\u4e00\u4f4d\uff08\u5982\u679c\u4e00\u4e2a\u6307\u9488\u5df2\u7ecf\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\uff0c\u5219\u53ea\u9700\u8981\u79fb\u52a8\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u6307\u9488\uff09\uff0c\u76f4\u5230\u5230\u8fbe\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e\u3002",(0,m.kt)("img",{alt:"fig1",src:n(83236).Z})),(0,m.kt)("p",null,"\u5982\u679c",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,m.kt)("mo",{parentName:"mrow"},"<"),(0,m.kt)("mi",{parentName:"mrow"},"B"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]<B[k/2\u22121]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"<"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]"))))),"\uff0c\u5219\u6bd4",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u5c0f\u7684\u6570\u6700\u591a\u53ea\u6709 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A")))))," \u7684\u524d$ k/2-1",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Can't use function '$' in math mode at position 8: \u4e2a\u6570\u548cB\u7684\u524d $\u0332k/2-1",style:{color:"#cc0000"}},(0,m.kt)("span",{parentName:"span",className:"cjk_fallback"},"\u4e2a\u6570\u548cB\u7684\u524d $k/2-1"))),"\u4e2a\u6570\uff0c\u5373\u6bd4 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]"))))),"\u5c0f\u7684\u6570\u6700\u591a\u53ea\u6709",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"2")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k\u22122")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.77777em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2")))))," \u4e2a\uff0c\u56e0\u6b64 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[k/2\u22121]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u4e0d\u53ef\u80fd\u662f\u7b2c ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"))))),"\u4e2a\u6570\uff0c",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mn",{parentName:"mrow"},"0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A[0]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u5230 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Can't use function '$' in math mode at position 10: A[k/2\u22121] $\u0332\u4e5f\u90fd\u4e0d\u53ef\u80fd\u662f\u7b2c",style:{color:"#cc0000"}},"A[k/2\u22121] $\u4e5f\u90fd\u4e0d\u53ef\u80fd\u662f\u7b2c")),"k$\u4e2a\u6570\uff0c\u53ef\u4ee5\u5168\u90e8\u6392\u9664"),(0,m.kt)("p",null,"\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u9700\u8981\u7279\u6b8a\u5904\u7406\uff1a"),(0,m.kt)("p",null,"\u5982\u679c ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{A}[k/2-1]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A")),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u6216\u8005 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"B"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"B[k/2\u22121]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"/"),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u8d8a\u754c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u53d6\u5bf9\u5e94\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002",(0,m.kt)("strong",{parentName:"p"},"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u6839\u636e\u6392\u9664\u6570\u7684\u4e2a\u6570\u51cf\u5c11 k \u7684\u503c\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u5c06 k \u51cf\u53bb k/2"),"\u3002"),(0,m.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e3a\u7a7a\uff0c\u8bf4\u660e\u8be5\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u6392\u9664\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7b2c k \u5c0f\u7684\u5143\u7d20\u3002"),(0,m.kt)("p",null,"\u5982\u679c k=1\uff0c\u6211\u4eec\u53ea\u8981\u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u9996\u5143\u7d20\u7684\u6700\u5c0f\u503c\u5373\u53ef"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    double kth(vector<int> &n1, vector<int> &n2, int k) {\n        int len1 = n1.size(), len2 = n2.size();\n        int t1 = 0, t2 = 0, res = 0;\n        while (true) {\n            if (t1 == len1) {\n                res = n2[t2 + k - 1];\n                break;\n            }\n            if (t2 == len2) {\n                res = n1[t1 + k - 1];\n                break;\n            }\n            if (k == 1) {\n                res = min(n1[t1], n2[t2]);\n                break;\n            }\n            int idx1 = min(t1 + k / 2 - 1, len1 - 1);\n            int idx2 = min(t2 + k / 2 - 1, len2 - 1);\n            if (n1[idx1] <= n2[idx2]) {\n                k -= idx1 - t1 + 1;\n                t1 = idx1 + 1;\n            } else {\n                k -= idx2 - t2 + 1;\n                t2 = idx2 + 1;\n            }\n        }\n        return res;\n    }\n\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        int len1 = nums1.size(), len2 = nums2.size();\n        int k = (len1 + len2) >> 1;\n        double m1 = kth(nums1, nums2, k + 1);\n        if ((len1 + len2) & 1 == 1) {\n            return m1;\n        }\n        double m2 = kth(nums1, nums2, k);\n        return (m1 + m2) / 2.0;\n    }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    double bs(vector<int> &n1, vector<int> &n2, int i, int j, int k) {\n        if (i == n1.size()) return n2[k - 1];\n        if (j == n2.size()) return n1[k - 1];\n        if (k == 1) return min(n1[i], n2[j]);\n        int a, b;\n        a = k / 2 > n1.size() - i ? n1.size() - i : k / 2;\n        b = k - a > n2.size() - j ? n2.size() - j : k - a;\n        a = k - b;\n        if (n1[i + a - 1] < n2[j + b - 1]) {\n            return bs(n1, n2, i + a, j, k - a);\n        }\n        return bs(n1, n2, i, j + b, k - b);\n    }\n\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        int n = nums1.size(), m = nums2.size();\n        double val1 = bs(nums1, nums2, 0, 0, (n + m + 1) / 2);\n        if ((n + m) % 2 == 0) {\n            double val2 = bs(nums1, nums2, 0, 0, (n + m) / 2 + 1);\n            return (val1 + val2) / 2;\n        }\n        return val1;\n    }\n};\n")),(0,m.kt)("p",null,"\u65b9\u6cd5\u4e8c\uff1a\u5212\u5206\u6570\u7ec4\n\u8bf4\u660e"),(0,m.kt)("p",null,"\u65b9\u6cd5\u4e00\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u5f88\u4f18\u79c0\u4e86\uff0c\u4f46\u672c\u9898\u5b58\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u8fd9\u91cc\u7ed9\u51fa\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u52c7\u4e8e\u6311\u6218\u81ea\u5df1\u7684\u8bfb\u8005\u53ef\u4ee5\u8fdb\u884c\u5c1d\u8bd5\u3002"),(0,m.kt)("p",null,"\u601d\u8def\u4e0e\u7b97\u6cd5"),(0,m.kt)("p",null,"\u4e3a\u4e86\u4f7f\u7528\u5212\u5206\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u7406\u89e3\u300c\u4e2d\u4f4d\u6570\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\u300d\u3002\u5728\u7edf\u8ba1\u4e2d\uff0c\u4e2d\u4f4d\u6570\u88ab\u7528\u6765\uff1a"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u5c06\u4e00\u4e2a\u96c6\u5408\u5212\u5206\u4e3a\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u5b50\u96c6\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u5143\u7d20\u603b\u662f\u5927\u4e8e\u53e6\u4e00\u4e2a\u5b50\u96c6\u4e2d\u7684\u5143\u7d20")),(0,m.kt)("h4",{id:"26016-38-\u5916\u89c2\u6570\u5217"},"2.6.0.16. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/count-and-say/"},"38. \u5916\u89c2\u6570\u5217")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    string countAndSay(int n) {\n        if (n == 1) return "1";\n        string ret = "", str = countAndSay(n - 1);\n        char tmp[10];\n        int cnt = 1;\n        for (int i = 1, j = 0; str[i]; i++) {\n            if (str[i] == str[j]) cnt += 1;\n            else {\n                sprintf(tmp, "%d%c", cnt, str[j]);\n                ret += tmp;\n                cnt = 1, j = i;\n            }\n        }\n        sprintf(tmp, "%d%c", cnt, str[str.size() - 1]);\n        ret += tmp;\n        return ret;\n    }\n};\n')),(0,m.kt)("h4",{id:"26017-217\u5b58\u5728\u91cd\u590d\u5143\u7d20"},"2.6.0.17. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate/description/"},"217\u5b58\u5728\u91cd\u590d\u5143\u7d20")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n        return nums.size() > set<int>(nums.begin(), nums.end()).size();        \n    }\n};\n\n")),(0,m.kt)("h4",{id:"26018-219-\u5b58\u5728\u91cd\u590d\u5143\u7d20-ii"},"2.6.0.18. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate-ii/"},"219. \u5b58\u5728\u91cd\u590d\u5143\u7d20 II")),(0,m.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570 ",(0,m.kt)("em",{parentName:"p"},"k"),"\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 ",(0,m.kt)("em",{parentName:"p"},"i")," \u548c ",(0,m.kt)("em",{parentName:"p"},"j"),"\uff0c\u4f7f\u5f97 ",(0,m.kt)("strong",{parentName:"p"},"nums ","[i]"," = nums ","[j]"),"\uff0c\u5e76\u4e14 ",(0,m.kt)("em",{parentName:"p"},"i")," \u548c ",(0,m.kt)("em",{parentName:"p"},"j")," \u7684\u5dee\u7684 ",(0,m.kt)("strong",{parentName:"p"},"\u7edd\u5bf9\u503c")," \u81f3\u591a\u4e3a ",(0,m.kt)("em",{parentName:"p"},"k"),"\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\n        k += 1;\n        unordered_map<int, int> s;\n        for (int i = 0; i < nums.size(); i++) {\n            s[nums[i]] += 1;\n            if (i >= k) s[nums[i - k]] -= 1;\n            if (s[nums[i]] == 2) return true;\n        }\n        return false;\n    }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\n        int n = nums.size();\n        int l = 0,  r = -1;\n        while (l < n) {\n            if (r + 1 < n && r + 1 <= l + k) {\n                ++r;\n            } else {\n                ++l;\n            }\n            if (r <= l) continue;\n            if (nums[r] == nums[l]) return true;\n        }\n        return false;\n    }\n};\n")),(0,m.kt)("h4",{id:"26019-349-\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6"},"2.6.0.19. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/intersection-of-two-arrays/"},"349. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> intersection(vector<int> &nums1, vector<int> &nums2) {\n        set<int> record;\n        for (int i = 0; i < nums1.size(); i++) {\n            record.insert(nums1[i]);\n        }\n\n        set<int> resultSet;\n        for (int i = 0; i < nums2.size(); ++i) {\n            if (record.find(nums2[i]) != record.end()) {\n                resultSet.insert(nums2[i]);\n            }\n        }\n\n        vector<int> res;\n        for (set<int>::iterator iter = resultSet.begin(); iter != resultSet.end(); iter++) {\n            res.push_back(*iter);\n        }\n        return res;\n    }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"\u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e00\u81f4\u3002\nclass Solution {\npublic:\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        if (nums1.size() > nums2.size()) return intersect(nums2,nums1);\n        unordered_map<int,int> mp;\n        for (int i:nums1)\n        {\n            mp[i]++;\n        }\n        vector<int> nums;\n        for (int j:nums2)\n        {\n            if (mp[j] > 0)\n            {\n                nums.push_back(j);\n                mp[j]--;\n            }\n        }\n        return nums;\n\n\n    }\n};\n")),(0,m.kt)("h4",{id:"26020-lc-375\u731c\u6570\u5b57\u5927\u5c0f-ii"},"2.6.0.20. LC-375",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/description/"},"\u731c\u6570\u5b57\u5927\u5c0f II")),(0,m.kt)("p",null,"\u6211\u4eec\u6b63\u5728\u73a9\u4e00\u4e2a\u731c\u6570\u6e38\u620f\uff0c\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a"),(0,m.kt)("p",null,"\u6211\u4ece ",(0,m.kt)("strong",{parentName:"p"},"1")," \u5230 ",(0,m.kt)("strong",{parentName:"p"},"n")," \u4e4b\u95f4\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u4f60\u6765\u731c\u6211\u9009\u4e86\u54ea\u4e2a\u6570\u5b57\u3002"),(0,m.kt)("p",null,"\u6bcf\u6b21\u4f60\u731c\u9519\u4e86\uff0c\u6211\u90fd\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u9009\u7684\u6570\u5b57\u6bd4\u4f60\u7684\u5927\u4e86\u6216\u8005\u5c0f\u4e86\u3002"),(0,m.kt)("p",null,"\u7136\u800c\uff0c\u5f53\u4f60\u731c\u4e86\u6570\u5b57 x \u5e76\u4e14\u731c\u9519\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u652f\u4ed8\u91d1\u989d\u4e3a x \u7684\u73b0\u91d1\u3002\u76f4\u5230\u4f60\u731c\u5230\u6211\u9009\u7684\u6570\u5b57\uff0c\u4f60\u624d\u7b97\u8d62\u5f97\u4e86\u8fd9\u4e2a\u6e38\u620f\u3002"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u793a\u4f8b:")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre"},"n = 10, \u6211\u9009\u62e9\u4e868.\n\n\u7b2c\u4e00\u8f6e: \u4f60\u731c\u6211\u9009\u62e9\u7684\u6570\u5b57\u662f5\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u7136\u540e\u4f60\u9700\u8981\u652f\u4ed85\u5757\u3002\n\u7b2c\u4e8c\u8f6e: \u4f60\u731c\u662f7\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5927\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed87\u5757\u3002\n\u7b2c\u4e09\u8f6e: \u4f60\u731c\u662f9\uff0c\u6211\u544a\u8bc9\u4f60\uff0c\u6211\u7684\u6570\u5b57\u66f4\u5c0f\u4e00\u4e9b\uff0c\u4f60\u652f\u4ed89\u5757\u3002\n\n\u6e38\u620f\u7ed3\u675f\u30028 \u5c31\u662f\u6211\u9009\u7684\u6570\u5b57\u3002\n\n\u4f60\u6700\u7ec8\u8981\u652f\u4ed8 5 + 7 + 9 = 21 \u5757\u94b1\u3002\n")),(0,m.kt)("p",null,"\u7ed9\u5b9a ",(0,m.kt)("strong",{parentName:"p"},"n \u2265 1\uff0c"),"\u8ba1\u7b97\u4f60\u81f3\u5c11\u9700\u8981\u62e5\u6709\u591a\u5c11\u73b0\u91d1\u624d\u80fd\u786e\u4fdd\u4f60\u80fd\u8d62\u5f97\u8fd9\u4e2a\u6e38\u620f\u3002"),(0,m.kt)("p",null,"\u52a8\u6001\u89c4\u5212 \u6781\u5c0f\u6781\u5927\u5316\u601d\u8def\uff1a\u8fd9\u662f\u4e00\u9053Minimax\u7b97\u6cd5 \u53c8\u540d\u6781\u5c0f\u5316\u6781\u5927\u7b97\u6cd5\u95ee\u9898\u3002\u5c40\u90e8\u6700\u5927\u503c\uff0c\u5168\u5c40\u6700\u5c0f\u503c\u3002"),(0,m.kt)("p",null,"\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u597d\u5904\u5728\u4e8e\u6211\u53ef\u4ee5\u7a77\u4e3e\u6240\u6709\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u6765\u8bf4\uff0c\u5c31\u662f\u6307\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u5f53\u4f5c\u5206\u5272\u70b9\uff0c\u800c\u4e8c\u5206\u53ea\u80fd\u628a\u4e2d\u95f4\u7684\u6570\u5b57\u5f53\u4f5c\u5206\u5272\u70b9\u3002"),(0,m.kt)("p",null,"\u5bf9\u4e8e\u52a8\u6001\u89c4\u5212\u6765\u8bf4\uff0c\u9700\u8981\u660e\u767ddp","[i][j]","\u7684\u542b\u4e49\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u5c1d\u8bd5\u89e3\u91cadp","[","i]","[j]","\u7684\u542b\u4e49:\ndp","[","i]","[j]","\u662f\u8bf4\u4f9d\u6b21\u4ee5\u4ecei\u5230j\u7684\u6570\u5b57\u4f5c\u4e3a\u5206\u5272\u70b9(\u731c\u7684\u6570)\uff0c\u5fc5\u5b9a\u8d62\u7684\u6e38\u620f\u6240\u7528\u94b1\u7684\u6700\u5c0f\u503c\u3002"),(0,m.kt)("p",null,"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u5272\u70b9\uff0c\u6211\u4eec\u53d6\u5b83\u5de6\u53f3\u4e24\u8fb9\u533a\u95f4\u7684\u6700\u5927\u503c\u52a0\u4e0a\u5206\u5272\u70b9\u672c\u8eab\u4f5c\u4e3a\u53d6\u6b64\u5206\u5272\u70b9\u7684dp","[i][j]","\u503c\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u53d6\u6240\u6709\u5206\u5272\u70b9\u7684dp","[i][j]","\u7684\u6700\u5c0f\u503c\u4f5c\u4e3adp","[i][j]","\u7684\u771f\u6b63\u7684\u503c\n\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u4ee5i\u4f5c\u4e3a\u5206\u5272\u70b9\u7684dp","[i][j]","\uff0c\u53ea\u53d6i\u53f3\u8fb9\u7684\u533a\u95f4\uff1b\u5bf9\u4e8e\u4ee5j\u4f5c\u4e3a\u5206\u5272\u70b9\u7684dp","[i][j]","\uff0c\u53ea\u53d6j\u5de6\u8fb9\u7684\u533a\u95f4"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"i i+1 i+2 ... ... j-2 j-1 j\n\u4ee5i+1\u4e3a\u5206\u5272\u70b9\u5bf9\u5e94\u7684\uff1adp1=max(dp","[","i]","[i]",",dp","[","i+2]","[j]",")+i+1\n\u4ee5j-1\u4e3a\u5206\u5272\u70b9\u5bf9\u5e94\u7684: dp2=max(dp","[","i]","[j-2]",",dp","[","j]","[j]",")+j-1\n\u7279\u522b\u5730,\u4ee5i\u4e3a\u5206\u5272\u70b9\uff1adp0=i+dp","[","i+1]","[j]",";\u4ee5j\u4e3a\u5206\u5272\u70b9: dp3=j+dp","[i][j-1]","\ndp","[","i]","[j]","=min(dp0,dp1,dp2,dp3)")),(0,m.kt)("p",null,"\u7ed9\u51fa\u4e00\u4e2adp\u4e8c\u7ef4\u6570\u7ec4\u6765\u7528\u4ee3\u7801\u586b\u5145\u5b83\uff0c\u201c\\\u201d\u8868\u793a\u6b63\u65e0\u7a77"),(0,m.kt)("p",null,"(1)\u521d\u59cb\u5316\uff1a         (2)\u6613\u77e5dp","[","i]","[i]","=0   "),(0,m.kt)("p",null,"| \\ \\ \\ \\ |         | 0 \\ \\ \\ |\n| \\ \\ \\ \\ |         | \\ 0 \\ \\ |\n| \\ \\ \\ \\ |         | \\ \\ 0 \\ |\n| \\ \\ \\ \\ |         | \\ \\ \\ 0 |\n\u63a5\u4e0b\u6765\u8981\u8003\u8651\u600e\u4e48\u586b\u5145\u77e9\u9635\u4ee5\u5f97\u5230dp","[","1]","[n]",":\n\u5f88\u5bb9\u6613\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u548c\u4e0b\u8fb9\u5730\u6570\u636e\u6765\u8ba1\u7b97\u5b83\u672c\u8eab\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fd9\u6837\u586b\u5145"),(0,m.kt)("p",null,"(3)\u586b\u51451\u5217\uff1a\n| 0 1 \\ \\ |  dp","[","1]","[2]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b\n| \\ 0 \\ \\ |\n| \\ \\ 0 \\ |\n| \\ \\ \\ 0 |\n(4)\u518d\u586b\u51451\u5217\uff1a\n| 0 1 x \\ |  dp","[","1]","[3]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b\n| \\ 0 2 \\ |  dp","[","2]","[3]","\u8ba1\u7b97\u6b65\u9aa4\u5411\u4e0a\u770b(\u5148\u586b\u5145)\n| \\ \\ 0 \\ |\n| \\ \\ \\ 0 |"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int getMoneyAmount(int n) {\n        if (n == 1) return 0;\n        int dp[n + 1][n + 1];\n        for (int i = 0; i <= n; ++i) {\n            for (int j = 0; j <= n; ++j) {\n                dp[i][j] = INT_MAX;\n            }\n        }\n        for (int i = 0; i <= n; ++i) dp[i][i] = 0;\n        for (int j = 2; j <= n; j++) {\n            for (int i = j - 1; i >= 1; i--) {\n                for (int k = i + 1; k <= j - 1; k++) {\n                    dp[i][j] = min(dp[i][j], k + max(dp[i][k - 1], dp[k + 1][j]));\n\n                }\n                dp[i][j] = min(dp[i][j], i + dp[i + 1][j]);\n                dp[i][j] = min(dp[i][j], j + dp[i][j - 1]);\n\n            }\n        }\n\n        return dp[1][n];\n    }\nprivate :\n    int calculate(int low, int high) {\n        if (low >= high) return 0;\n        int minres = 0x7fffffff;\n        for (int i = (low + high) / 2; i <= high; ++i) {\n            int res = max(calculate(low, i - 1), calculate(i + 1, high)) + i;\n            minres = min(minres, res);\n        }\n        return minres;\n    }\n};\n")),(0,m.kt)("h4",{id:"26021-378-\u6709\u5e8f\u77e9\u9635\u4e2d\u7b2ck\u5c0f\u7684\u5143\u7d20"},"2.6.0.21. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/"},"378. \u6709\u5e8f\u77e9\u9635\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20")),(0,m.kt)("p",null,"\u96be\u5ea6\u4e2d\u7b49443"),(0,m.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a ",(0,m.kt)("em",{parentName:"p"},(0,m.kt)("inlineCode",{parentName:"em"},"n x n"))," \u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u884c\u548c\u6bcf\u5217\u5143\u7d20\u5747\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u627e\u5230\u77e9\u9635\u4e2d\u7b2c ",(0,m.kt)("inlineCode",{parentName:"p"},"k")," \u5c0f\u7684\u5143\u7d20\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u6392\u5e8f\u540e\u7684\u7b2c ",(0,m.kt)("inlineCode",{parentName:"p"},"k")," \u5c0f\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c ",(0,m.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"\nclass Solution {\npublic:\n   bool check(vector<vector<int>>& matrix,int k,int mid,int n){\n       int i=n-1,j=0;\n       int num=0;\n       while(i>=0 && j<n){\n           if(matrix[i][j]<=mid){\n               num+=i+1;\n               j++;\n           }\n           else    i--;\n       }\n       return num>=k;\n   }\n   int kthSmallest(vector<vector<int>>& matrix, int k) {\n       int n=matrix.size();\n       int left=matrix[0][0],right=matrix[n-1][n-1];\n       while(left<right){\n           int mid=left+(right-left)/2;\n           if(check(matrix,k,mid,n)) right=mid;\n           else left=mid+1;\n       }\n       return left;\n   }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int bs_max(vector<vector<int>> &g, int val) {\n        int cnt = 0, i = g.size();\n        while (i > 0 && g[i - 1][0] > val) i -= 1;\n        cnt += g.size() - i;\n        for (int j = 1; j < g.size(); j++) {\n            while (i > 0 && g[i - 1][j] > val) --i;\n            cnt += g.size() - i;\n        }\n        return cnt;\n    }\n    int bs_min(vector<vector<int>> &g, int val) {\n        int cnt = 0, i = -1;\n        while (i + 1 < g.size() && g[i + 1][0] < val) i += 1;\n        cnt += i + 1;\n        for (int j = 1; j < g.size(); j++) {\n            while (i >= 0 && g[i][j] >= val) --i;\n            cnt += i + 1;\n        }\n        return cnt;\n    }\n    int kthSmallest(vector<vector<int>>& matrix, int k) {\n        int n = matrix.size();\n        int head = matrix[0][0], tail = matrix[n - 1][n - 1], mid;\n        while (head <= tail) {\n            mid = ((head ^ tail) >> 1) + (head & tail);\n            int a = bs_min(matrix, mid);\n            int b = bs_max(matrix, mid);\n            int c = n * n - a - b;\n            if (k <= a + c && k > a) return mid;\n            if (a + c < k) head = mid + 1;\n            else tail = mid - 1;\n        }\n        return -1;\n    }\n};\n")),(0,m.kt)("h4",{id:"26022-lc-88-\u5408\u5e76\u6570\u7ec4"},"2.6.0.22. LC-88 \u5408\u5e76\u6570\u7ec4"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u7ed9\u4f60\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4 ",(0,m.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,m.kt)("inlineCode",{parentName:"p"},"nums2"),"\uff0c\u8bf7\u4f60\u5c06 ",(0,m.kt)("inlineCode",{parentName:"p"},"nums2")," \u5408\u5e76\u5230 ",(0,m.kt)("inlineCode",{parentName:"p"},"nums1")," \u4e2d",(0,m.kt)("em",{parentName:"p"},"\uff0c"),"\u4f7f ",(0,m.kt)("inlineCode",{parentName:"p"},"nums1")," \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002"),(0,m.kt)("p",{parentName:"blockquote"},"\u521d\u59cb\u5316 ",(0,m.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,m.kt)("inlineCode",{parentName:"p"},"nums2")," \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a ",(0,m.kt)("inlineCode",{parentName:"p"},"m")," \u548c ",(0,m.kt)("inlineCode",{parentName:"p"},"n")," \u3002\u4f60\u53ef\u4ee5\u5047\u8bbe ",(0,m.kt)("inlineCode",{parentName:"p"},"nums1")," \u7684\u7a7a\u95f4\u5927\u5c0f\u7b49\u4e8e ",(0,m.kt)("inlineCode",{parentName:"p"},"m + n"),"\uff0c\u8fd9\u6837\u5b83\u5c31\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u4fdd\u5b58\u6765\u81ea ",(0,m.kt)("inlineCode",{parentName:"p"},"nums2")," \u7684\u5143\u7d20\u3002")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        int i = m - 1, j = n - 1, tar = m + n - 1;\n        while (j >= 0) {\n            nums1[tar--] = i >= 0 && nums1[i] > nums2[j] ? nums1[i--] : nums2[j--];\n        }\n    }\n};\n")),(0,m.kt)("h4",{id:"26023-\u6700\u5927\u5e73\u5747\u503c"},"2.6.0.23. \u6700\u5927\u5e73\u5747\u503c"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u9898\u76ee\u63cf\u8ff0")),(0,m.kt)("p",null," \u7ed9\u5b9a\u4e00\u4e2a\u6709 N\u4e2a\u5143\u7d20\u7684\u975e\u8d1f\u5e8f\u5217\uff0c\u6c42\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e M \u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u6700\u5927\u5e73\u5747\u503c\u3002"),(0,m.kt)("p",null,"\u6700\u5927\u5e73\u5747\u503c\u4ecb\u4e8e\u5143\u7d20\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e4b\u95f4->\u4e8c\u5206\u6cd5"),(0,m.kt)("p",null,"\u533a\u95f4\u548c->\u524d\u7f00\u548c->\u6c42\u89e3\u5224\u65ad\u662f\u5426\u5b58\u5728\u957f\u5ea6>=M\u7684\u8fde\u7eed\u5b50\u5e8f\u5217 >= LA(\u7ed9\u5b9a\u503c)"),(0,m.kt)("p",null,"\u65b9\u6cd5:\u5728\u524d\u7f00\u548c\u6570\u7ec4\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c->\u5224\u5b58\u5728\u6027"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mo",{parentName:"mrow"},"\u22ef"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"L"))),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"A"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"b"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"b"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mo",{parentName:"mrow"},"\u22ef"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"L"))),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"0")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a_{i+1} + \\cdots + a_{i + L} >= AL \\\\ b_i = a_i - L \\\\ b_{i + 1} + \\cdots + a_{i + L} >= 0")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.791661em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"minner"},"\u22ef"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.747431em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.328331em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"L"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">")),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L")),(0,m.kt)("span",{parentName:"span",className:"mspace newline"}),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.84444em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L")),(0,m.kt)("span",{parentName:"span",className:"mspace newline"}),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.902771em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"minner"},"\u22ef"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.747431em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.328331em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"+"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"L"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">")),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0")))))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 100000\nlong long arr[MAX_N + 5];\nlong long b[MAX_N + 5];\nbool check(long long n, long long m, long long val) {\n    for (long long i = 1; i <= n; ++i) b[i] = arr[i] - val;\n    for (long long i = 1; i <= n; ++i) b[i] += b[i - 1];\n    long long pre = 0;\n    for (long long i = m; i <= n; ++i) {\n        pre = min(pre, b[i - m]);\n        if (b[i] - pre >= 0) return true;\n    }\n    return false;\n}\n\nlong long bs(long long l, long long r, long long n, long long m) {\n    if (l == r) return l;\n    long long mid = (l + r + 1) >> 1;\n    if (check(n, m, mid)) return bs(mid, r, n, m);\n    return bs(l, mid - 1, n, m);\n\n}\n\nint main() {\n    long long n, m, s, t;\n    cin >> n >> m;\n    for (long long i = 1; i <= n; ++i) {\n        cin >> arr[i];\n        arr[i] *= 1000;\n        if (i == 1) s = t = arr[i];\n        s = min(s, arr[i]);\n        t = max(t, arr[i]);\n    }\n    cout << bs(s, t, n, m) << endl;\n    return 0;\n}\n\n")),(0,m.kt)("h4",{id:"26024-\u79e6\u817e\u4e0e\u6559\u5b66\u8bc4\u4f30cpp"},"2.6.0.24. \u79e6\u817e\u4e0e\u6559\u5b66\u8bc4\u4f30.cpp"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u4e2a\u6574\u6570S,E,D \u6765\u63cf\u8ff0\u8bc4\u4f30\u56e2\u7684\u5c0f\u7ec4: \u65e2\u8be5\u5c0f\u7ec4\u7684\u6210\u5458\u5728\u4ece\u5bbf\u820d\u5230\u6559\u5b66\u697c\u7684\u8def\u4e0a\u7684:S,S+D,S+2D,\u2026,S+KD(K\u2208Z,S+KD\u2264E,S+(K+1)D>E) \u4f4d\u7f6e\u3002"),(0,m.kt)("p",{parentName:"blockquote"},"\u627e\u51fa\u5947\u6570\u4eba\u6570\u7684\u4f4d\u7f6e\u6700\u591a\u6709\u4e00\u4e2a"),(0,m.kt)("p",{parentName:"blockquote"},(0,m.kt)("img",{alt:"image-20210125213921849",src:n(70661).Z}))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N  200000\n\nstruct Node {\n    long long s, e, d;\n} data[MAX_N + 5];\n\nlong long count(long long n, long long pos) {\n    long long sum = 0;\n    for (long long i = 0; i < n; ++i) {\n        if (data[i].s > pos) continue;\n        if (data[i].e <= pos) {\n            sum += (data[i].e - data[i].s) / data[i].d + 1;\n            continue;\n        }\n        sum += (pos - data[i].s) / data[i].d + 1;\n    }\n    return sum;\n}\n\nlong long check(long long n, long long pos) {\n   return count(n, pos) % 2; \n}\n\nlong long bs(long long l, long long r, long long n) {\n    if (l == r) return l;\n    long long mid = (l + r) >> 1;\n    if (check(n, mid)) return bs(l, mid, n);\n    else bs(mid + 1, r, n);\n}\n\nlong long calc(long long n) {\n    long long l, r, mid;\n    for (long long i = 0; i < n; ++i) {\n        cin >> data[i].s >> data[i].e >> data[i].d;\n        if (i == 0) l = data[i].s, r = data[i].e;\n        l = min(l, data[i].s);\n        r = max(r, data[i].e);\n    }\n    long long pos = bs(l, r, n);\n    long long cnt = count(n, pos) - count(n, pos - 1);\n    if (cnt & 1) {\n        cout << pos << " " << cnt << endl;\n    } else {\n        cout << "Poor QIN Teng:(" << endl;\n    }\n    return 0;\n}\n\n\nint main() {\n    long long t, n;\n    cin >> t;\n    for (long long i = 0; i < t; ++i) {\n        cin >> n;\n        calc(n);\n    }\n    return 0;\n}\n\n')),(0,m.kt)("h4",{id:"26025-hzoj-244-\u5976\u725b\u56f4\u680f"},"2.6.0.25. HZOJ-244-\u5976\u725b\u56f4\u680f"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210125233324739",src:n(22359).Z})),(0,m.kt)("p",null,"10000->\u4e8c\u7ef4\u6570\u7ec4,\u79bb\u6563\u5316\u5747\u4e0d\u53ef"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 500\n\nstruct Data {\n    int x, y;\n} arr[MAX_N + 5];\nint tmp[MAX_N + 5];\n\nbool check_y(int l, int r, int c, int len) {\n    int cnt = 0;\n    for (int i = l; i <= r; ++i) {\n        tmp[cnt++] = arr[i].y;\n    }\n    sort(tmp, tmp + cnt);\n    for (int i = c - 1; i < cnt; ++i) {\n        if (tmp[i] - tmp[i - c + 1] < len)  return true;\n    }\n    return false;\n}\n\nbool check(int n, int len, int c) {\n    int j = 0;\n    for (int i = 0; i < n; ++i) {\n        while (arr[i].x - arr[j].x >= len) j++;\n        if (arr[i].x - arr[j].x + 1 < c) continue;\n        if (check_y(j, i, c, len)) return true;\n    }\n    return false;\n}\n\nbool cmp(const Data &a, const Data &b) {\n    return a.x < b.x;\n}\n\nint main() {\n    int c, n;\n    cin >> c >> n;\n    for (int i = 0; i < n; ++i) cin >> arr[i].x >> arr[i].y;\n    sort(arr, arr + n, cmp);\n    int l = 1, r = 10000;\n    while (l < r) {\n        int mid = (l + r) >> 1;\n        if (check(n, mid, c)) r = mid;\n        else l = mid + 1;\n    }\n    cout << l << endl;\n    return 0;\n}\n\n")),(0,m.kt)("h4",{id:"26026-199-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"},"2.6.0.26. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/binary-tree-right-side-view/"},"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        queue<TreeNode*> que;\n        if(root!=NULL)\n            que.push(root);\n        while(!que.empty())\n        {\n            int size=que.size();\n            for(int i=0;i<size;i++)\n            {\n                TreeNode* p=que.front();\n                que.pop();\n                if(i==size-1)\n                    res.push_back(p->val);\n                if(p->left!=NULL)\n                    que.push(p->left);\n                if(p->right!=NULL)\n                    que.push(p->right);\n            }\n        }\n        return res;\n    }\n};\n")),(0,m.kt)("h4",{id:"26027-515-\u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c"},"2.6.0.27. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/"},"515. \u5728\u6bcf\u4e2a\u6811\u884c\u4e2d\u627e\u6700\u5927\u503c")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        if(nullptr == root) return ans;\n        dfs(root, 0);\n        return ans;\n    }\nprivate:\n    vector<int> ans;\n    void dfs(TreeNode* root, int depth){\n        if(nullptr == root) return;\n        if(depth >= ans.size()) ans.push_back(root->val);\n        if(root->val > ans[depth]) ans[depth] = root->val;\n        dfs(root->left, depth + 1);\n        dfs(root->right, depth + 1);\n    }\n};\n")),(0,m.kt)("h1",{id:"3-\u5355\u8c03\u6808\u5355\u8c03\u961f\u5217"},"3. ==\u5355\u8c03\u6808&\u5355\u8c03\u961f\u5217=="),(0,m.kt)("h3",{id:"301-\u3001hzoj-261-\u6570\u636e\u7ed3\u6784"},"3.0.1. \u3001HZOJ-261-\u6570\u636e\u7ed3\u6784"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5173\u952e\u5c31\u662f\u65b0\u9020\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u7ed3\u6784\u5b9a\u4e49 + \u7ed3\u6784\u64cd\u4f5c"),(0,m.kt)("li",{parentName:"ol"},"\u6a21\u62df\u5149\u6807\u7684\u529f\u80fd\uff0c\u5de6\u79fb\u52a8\u3001\u53f3\u79fb\u52a8\u3001\u63d2\u5165\u3001\u5220\u9664\uff0c\u7528\u5bf9\u9876\u6808\u6a21\u62df"),(0,m.kt)("li",{parentName:"ol"},"\u5b9e\u73b0\u5bf9\u9876\u6808\uff0c\u7528\u6570\u7ec4\u6a21\u62df\u3001\u7528\u94fe\u8868\u6a21\u62df"),(0,m.kt)("li",{parentName:"ol"},"\u9898\u76ee\u4e2d\u7684 BUG\uff1aQuery K \u4e2d\uff0cK \u53ef\u80fd\u5927\u4e8e\u5f53\u524d\u4f4d\u7f6e")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <cinttypes>\nusing namespace std;\n\nclass NewStruct {\npublic :\n    NewStruct() {\n        sum[0] = 0;\n        ans[0] = INT64_MIN;\n    }\n    void insert(long long x) {\n        s1.push(x);\n        int ind = s1.size();\n        long long val = x + sum[ind - 1];\n        long long val1 = max(ans[ind - 1], val);\n        sum[ind] = val;\n        ans[ind] = val1;\n        return ;\n    }\n    void del() {\n        if (s1.empty()) return ;\n        s1.pop();\n        return ;\n    }\n    void move_left() {\n        if (s1.empty()) return ;\n        s2.push(s1.top());\n        del();\n        return ;\n    }\n    void move_right() {\n        if (s2.empty()) return ;\n        insert(s2.top());\n        s2.pop();\n        return ;\n    }\n    long long query(long long k) {\n        return ans[k];\n    }\nprivate:\n    stack<long long> s1, s2;\n    long long sum[1005];\n    long long ans[1005];\n};\n\nint main() {\n    long long n;\n    cin >> n;\n    string op;\n    int val;\n    NewStruct s;\n    for (int i = 0; i < n; i++) {\n        cin >> op;\n        switch (op[0]) {\n            case 'I': cin >> val; s.insert(val); break;\n            case 'D': s.del(); break;\n            case 'L': s.move_left(); break;\n            case 'R': s.move_right(); break;\n            case 'Q': {\n                cin >> val; \n                cout << s.query(val) << endl;\n            } break;\n        }\n    }\n    return 0;\n}\n")),(0,m.kt)("h3",{id:"302-hzoj-262-\u5361\u7279\u5170\u6570"},"3.0.2. hzoj-262 \u5361\u7279\u5170\u6570"),(0,m.kt)("p",null,"f(n)\u8868\u793a\u8fdb\u6808\u987a\u5e8f\u4e3a1,2,...,N\u65f6\u53ef\u80fd\u7684\u51fa\u6808\u65b9\u6848\u6570\uff0c\u6839\u636e\u4ee5\u524d\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b83\u5212\u5206\u6210\u8303\u56f4\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002\n\u8003\u8651\u201c1\u201d\u201c1\u201d\u8fd9\u4e2a\u6570\u6392\u5728\u6700\u7ec8\u5e8f\u5217\u7684\u4f4d\u7f6e\uff0c\u53ef\u77e5\u53ea\u8981\u201c1\u201d\u201c1\u201d\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5e8f\u5217\u5c31\u4e0d\u540c\u3002\u5982\u679c\u201c1\u201d\u201c1\u201d\u8fd9\u4e2a\u6570\u6392\u5728\u7b2c",(0,m.kt)("em",{parentName:"p"},"\ud835\udc58"),"k\u4e2a\uff0c\u90a3\u4e48\u6574\u4e2a\u5e8f\u5217\u8fdb\u51fa\u6808\u7684\u8fc7\u7a0b\u5373\u4e3a\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u201c1\u201d",(0,m.kt)("strong",{parentName:"p"},"\u5165\u6808"),"\u3002")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},'\u201c2,3,...,k"\u8fd9',(0,m.kt)("em",{parentName:"p"},"\ud835\udc58"),"\u22121k\u22121\u4e2a\u6570\u6309\u67d0\u79cd\u987a\u5e8f",(0,m.kt)("strong",{parentName:"p"},"\u8fdb\u51fa\u6808"),"\u3002")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u201c1\u201d",(0,m.kt)("strong",{parentName:"p"},"\u51fa\u6808"),"\u3002")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u201ck+1,k+2,...,N\u201d\u8fd9",(0,m.kt)("em",{parentName:"p"},"\ud835\udc41"),"\u2212",(0,m.kt)("em",{parentName:"p"},"\ud835\udc58"),"N\u2212k\u4e2a\u6570\u6309\u67d0\u79cd\u987a\u5e8f",(0,m.kt)("strong",{parentName:"p"},"\u8fdb\u51fa\u6808"),"\u3002"),(0,m.kt)("p",{parentName:"li"},"\u7531\u4e8e k  \u6700\u540e\u51fa\u6808\uff0c\u5219\u5728 k \u5165\u6808\u4e4b\u524d\u6240\u6709\u6bd4\u4ed6\u5c0f\u7684\u90fd\u51fa\u6808\u4e86\uff0c\u8fd9\u91cc\u7684\u60c5\u51b5\u4e3a F\uff08k-1\uff09\uff0c\u6240\u6709\u6bd4 k \u5927\u7684\u5143\u7d20\u90fd\u5728 k \u4e4b\u524d\u51fa\u6808\uff0c\u4e3a F\uff08n-k\uff09\u79cd\u60c5\u51b5"))),(0,m.kt)("p",null,"\u4e8e\u662f\u8fd9\u6837\u5c31\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u4e86\u8303\u56f4\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u5f97\u5230\u516c\u5f0f\uff1a"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"f"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"N")),(0,m.kt)("mi",{parentName:"mrow"},"f"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"f"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"N"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(n)=\u2211_{i=1}^Nf(k\u22121)\u2217f(N\u2212k)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.2809409999999999em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.981231em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("p",null,"\u5f53\u7136\uff0c\u8fb9\u754c\u6761\u4ef6\u4e3a\uff1a",(0,m.kt)("em",{parentName:"p"},"\ud835\udc53"),"(0)=1,",(0,m.kt)("em",{parentName:"p"},"\ud835\udc53"),"(1)=1f(0)=1,f(1)=1"),(0,m.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,m.kt)("em",{parentName:"p"},"\ud835\udc42"),"(",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"2)O(n2)\u3002"),(0,m.kt)("h3",{id:"303-\u3001hzoj-263-\u706b\u8f66\u8fdb\u6808"},"3.0.3. \u3001HZOJ-263-\u706b\u8f66\u8fdb\u6808"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5f53\u524d\u8fdb\u6808\u7684\u6700\u5927\u6570\u5b57\u662f x\uff0c\u5e8f\u5217\u4e2d\u5f53\u524d\u5f85\u51fa\u6808\u7684\u6570\u5b57\u662f y"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"<"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"x")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"y <= x")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7335400000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"<")),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))),"\uff0c\u8bf4\u660e y \u4e00\u5b9a\u662f\u6808\u9876\u5143\u7d20"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow"},"x")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"y > x")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7335400000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))),"\uff0c\u5c06 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"[x + 1, y]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]")))))," \u5165\u6808\uff0c\u6b64\u65f6\u6808\u9876\u5143\u7d20\u4e00\u5b9a\u662f y")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"int a[30], s[30], top;\n\nbool is_valid(int *a, int n) {\n    int j = 0;\n    top = -1;\n    for (int i = 0; i < n; i++) {\n        while (j < a[i]) { s[++top] = (++j); }\n        if (top == -1 || s[top] - a[i]) return false;\n        --top;\n    }\n    return true;\n}\n\nint main() {\n    int n, ans = 20;\n    cin >> n; \n    for (int i = 0; i < n; i++) a[i] = i + 1;\n    do {\n        if (!is_valid(a, n)) continue;\n        for (int i = 0; i < n; i++) {\n            cout << a[i];\n        }\n        cout << endl;\n        --ans;\n    } while (ans && next_permutation(a, a + n));\n    return 0;\n}\n")),(0,m.kt)("h3",{id:"304-hzoj-68-\u670b\u53cb\u961f\u5217"},"3.0.4. hzoj-68. \u670b\u53cb\u961f\u5217"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210308140505286",src:n(85948).Z})),(0,m.kt)("p",null,"Code:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <set>\n#include <queue>\n#include <map>\nusing namespace std;\n#define MAX_N 200000\n\nmap<int, int> q_ind;\nqueue<int> main_q;\nqueue<int> q[MAX_N + 5];\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 1, m; i <= n; i++) {\n        cin >> m;\n        for (int j = 1, a; j <= m; j++) {\n            cin >> a;\n            q_ind[a] = i;\n        }\n    }\n    string op;\n    while (cin >> op) {\n        if (op == "STOP") break;\n        if (op == "ENQUEUE") {\n            int x;\n            cin >> x;\n            q[q_ind[x]].push(x);\n            if (q[q_ind[x]].size() == 1) {\n                main_q.push(q_ind[x]);\n            }\n        } else {\n            cout << q[main_q.front()].front() << endl;\n            q[main_q.front()].pop();\n            if (q[main_q.front()].empty()) main_q.pop();\n        }\n    }\n    return 0;\n}\n\n')),(0,m.kt)("h2",{id:"31-\u4e8c\u3001\u5355\u8c03\u961f\u5217"},"3.1. \u4e8c\u3001\u5355\u8c03\u961f\u5217"),(0,m.kt)("h2",{id:"31-\u4e8c\u3001\u5355\u8c03\u961f\u5217-1"},"3.1. \u4e8c\u3001\u5355\u8c03\u961f\u5217"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u672c\u8d28\u95ee\u9898\u662f\uff1a\u56fa\u5b9a\u67e5\u8be2\u7ed3\u5c3e\u7684 RMQ \u95ee\u9898\uff0c\u4f8b\u5982 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mi",{parentName:"mrow"},"M"),(0,m.kt)("mi",{parentName:"mrow"},"Q"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mn",{parentName:"mrow"},"7"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"RMQ(x, 7)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"M"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"Q"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"7"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("li",{parentName:"ol"},"\u95ee\u9898\u6027\u8d28\uff1a\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u6700\u503c\u95ee\u9898"),(0,m.kt)("li",{parentName:"ol"},"\u5165\u961f\uff1a\u5c06\u961f\u5c3e\u8fdd\u53cd\u5355\u8c03\u6027\u7684\u5143\u7d20\u6dd8\u6c70\u51fa\u5c40\uff0c\u518d\u5c06\u5f53\u524d\u5143\u7d20\u5165\u961f"),(0,m.kt)("li",{parentName:"ol"},"\u51fa\u961f\uff1a\u5982\u679c\u961f\u9996\u5143\u7d20\u8d85\u51fa\u4e86\u6ed1\u52a8\u7a97\u53e3\u7684\u8303\u56f4\uff0c\u961f\u9996\u51fa\u961f"),(0,m.kt)("li",{parentName:"ol"},"\u961f\u9996\u5143\u7d20\uff1a\u6ed1\u52a8\u7a97\u53e3\u5185\u7684\u6700\u503c"),(0,m.kt)("li",{parentName:"ol"},"\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 300000\nint q[MAX_N + 5], head = 0, tail = 0;\nint val[MAX_N + 5];\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    for (int i = 1; i <= n; i++) {\n        cin >> val[i];\n    }\n    for (int i = 1; i <= n; i++) {\n        while (tail - head && val[q[tail - 1]] > val[i]) --tail;\n        q[tail++] = i;\n        if (q[head] <= i - k) head++;\n        if (i >= k) {\n            i > k && cout << " ";\n            cout << val[q[head]];\n        }\n    }\n    cout << endl;\n    head = tail = 0;\n    for (int i = 1; i <= n; i++) {\n        while (tail - head && val[q[tail - 1]] < val[i]) --tail;\n        q[tail++] = i;\n        if (q[head] <= i - k) head++;\n        if (i >= k) {\n            i > k && cout << " ";\n            cout << val[q[head]];\n        }\n    }\n    cout << endl;\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"311-hzoj-271-\u6ed1\u52a8\u7a97\u53e3"},"3.1.1. HZOJ-271-\u6ed1\u52a8\u7a97\u53e3"),(0,m.kt)("p",null,"\u5355\u8c03\u961f\u5217\u7684\u88f8\u9898\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u4e3b\u8981\u8981\u5b66\u4e60\u4ee3\u7801\u5b9e\u73b0"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u601d\u8003\uff1a"),"\u5355\u8c03\u961f\u5217\u4e2d\u662f\u8bb0\u5f55\u503c\u8fd8\u662f\u8bb0\u5f55\u4e0b\u6807\u7684\u95ee\u9898"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u7ed3\u8bba\uff1a"),"\u8bb0\u5f55\u4e0b\u6807\uff0c\u56e0\u4e3a\u6709\u4e86\u4e0b\u6807\u53ef\u4ee5\u7d22\u5f15\u5230\u503c\uff0c\u8bb0\u5f55\u503c\u5219\u53cd\u5411\u4e0d\u53ef\u67e5"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 100000\nlong long s[MAX_N + 5], top;\nlong long h[MAX_N + 5], n;\nlong long l[MAX_N + 5], r[MAX_N + 5];\n\nvoid read() {\n    scanf("%lld", &n);\n    for (long long i = 1; i <= n; i++) scanf("%lld", h + i);\n    return ;\n}\n\nlong long solve() {\n    h[0] = h[n + 1] = -1;\n    top = -1;\n    s[++top] = 0;\n    for (long long i = 1; i <= n; i++) {\n        while (top != -1 && h[s[top]] >= h[i]) --top;\n        l[i] = s[top];\n        s[++top] = i;\n    }\n    top = -1;\n    s[++top] = n + 1;\n    for (long long i = n; i >= 1; i--) {\n        while (top != -1 && h[s[top]] >= h[i]) --top;\n        r[i] = s[top];\n        s[++top] = i;\n    }\n    long long ans = 0;\n    for (long long i = 1; i <= n; i++) {\n        ans = max(ans, h[i] * (r[i] - l[i] - 1));\n    }\n    return ans;\n}\n\nint main() {\n    read();\n    cout << solve() << endl;\n    return 0;\n}\n')),(0,m.kt)("h2",{id:"32-\u4e09\u3001\u5355\u8c03\u6808"},"3.2. \u4e09\u3001\u5355\u8c03\u6808"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5355\u8c03\u6808\u4fdd\u7559\u4e86\u5355\u8c03\u961f\u5217\u7684\u300e\u5165\u961f\u300f\u64cd\u4f5c"),(0,m.kt)("li",{parentName:"ol"},"\u5355\u8c03\u6808\u4f9d\u7136\u662f\u7ef4\u62a4\u4e86\u4e00\u79cd\u5355\u8c03\u6027"),(0,m.kt)("li",{parentName:"ol"},"\u95ee\u9898\u6027\u8d28\uff1a\u6700\u8fd1\uff08\u5927\u4e8e/\u5c0f\u4e8e\uff09\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u5165\u6808\u4e4b\u524d\uff0c\u7b26\u5408\u5355\u8c03\u6027\u7684\u6808\u9876\u5143\u7d20\uff0c\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\u6700\u8fd1\uff08\u5927\u4e8e/\u5c0f\u4e8e\uff09\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,m.kt)("h3",{id:"321-hzoj-264-\u6700\u5927\u77e9\u5f62\u9762\u79ef"},"3.2.1. HZOJ-264-\u6700\u5927\u77e9\u5f62\u9762\u79ef"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5206\u6790\u6700\u4f18\u89e3\u7684\u6027\u8d28\uff0c\u662f\u89e3\u51b3\u95ee\u9898\u7684\u7b2c\u4e00\u6b65"),(0,m.kt)("li",{parentName:"ol"},"\u6700\u5927\u77e9\u5f62\u7684\u6027\u8d28\uff1a\u4e00\u5b9a\u662f\u4ee5\u5176\u6240\u5728\u533a\u57df\u4e2d\u6700\u77ee\u7684\u6728\u677f\u4e3a\u9ad8\u5ea6\u7684"),(0,m.kt)("li",{parentName:"ol"},"\u4ee5\u6bcf\u4e00\u5757\u6728\u677f\u505a\u4e3a\u77e9\u5f62\u9ad8\u5ea6\uff0c\u6c42\u80fd\u5f97\u5230\u7684\u6700\u5927\u77e9\u5f62\u9762\u79ef\uff0c\u6700\u540e\u5728\u6240\u6709\u9762\u79ef\u4e2d\uff0c\u53d6\u4e00\u4e2a\u6700\u5927\u503c"),(0,m.kt)("li",{parentName:"ol"},"\u9700\u8981\u6c42\u89e3\uff1a\u6bcf\u4e00\u5757\u6728\u677f\u6700\u8fd1\u7684\u9ad8\u5ea6\u5c0f\u4e8e\u5f53\u524d\u6728\u677f\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5355\u8c03\u6808")),(0,m.kt)("h1",{id:"4-\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5"},"4. ==\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5=="),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u786e\u5b9a\u578b\u6709\u7a77\u81ea\u52a8\u673a\uff08Determinism Finite Automate, DFA\uff09"),"\uff0c\u4e0e",(0,m.kt)("strong",{parentName:"p"},"\u975e\u786e\u5b9a\u578b\u6709\u7a77\u81ea\u52a8\u673a\uff08Non-determinism Finite Automate, NFA\uff09"),"\u3002"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},(0,m.kt)("em",{parentName:"strong"},"next\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u548c\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u90e8\u5206"),"kmp\u7b97\u6cd5")),(0,m.kt)("p",null,"next\u6570\u7ec4\u4e09\u79cd\u7528\u6cd5"),(0,m.kt)("p",null,(0,m.kt)("a",{parentName:"p",href:"https://blog.csdn.net/yutianzuijin/article/details/11954939/"},"https://blog.csdn.net/yutianzuijin/article/details/11954939/")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126164802088",src:n(56437).Z})),(0,m.kt)("p",null,"Ta\u662f\u6700\u957f\u524d\u7f00(\u5426\u5219\u6f0f\u7b54\u6848)"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"==kmp\u7b97\u6cd5\u7684\u6838\u5fc3=="),"\u5373\u662f\u8ba1\u7b97\u5b57\u7b26\u4e32f\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\u540e\u7f00\u516c\u5171\u90e8\u5206\u7684\u6700\u5927\u957f\u5ea6"),(0,m.kt)("p",null,"\u5f53\u6bcf\u6b21\u6bd4\u8f83\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u4e0d\u540c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u6700\u5927\u516c\u5171\u957f\u5ea6\u5c06\u5b57\u7b26\u4e32f\u5411\u524d\u79fb\u52a8(\u5df2\u5339\u914d\u957f\u5ea6-\u6700\u5927\u516c\u5171\u957f\u5ea6)\u4f4d\uff0c\u63a5\u7740\u7ee7\u7eed\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002"),(0,m.kt)("p",null,"\u200b    \u5982\u679c\u4f4d\u7f6ei\u548cnext","[i]","\u5904\u7684\u4e24\u4e2a\u5b57\u7b26\u76f8\u540c\uff08\u4e0b\u6807\u4ece\u96f6\u5f00\u59cb)\uff0c\u5219next","[i+1]","\u7b49\u4e8enext","[i]","\u52a01\u3002"),(0,m.kt)("p",null,"\u200b    \u5982\u679c\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0d\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u957f\u5ea6\u4e3anext","[i]","\u7684\u5b57\u7b26\u4e32\u7ee7\u7eed\u5206\u5272\uff0c\u83b7\u5f97\u5176\u6700\u5927\u516c\u5171\u957f\u5ea6next[next","[i]","]\uff0c\u7136\u540e\u518d\u548c\u4f4d\u7f6ei\u7684\u5b57\u7b26\u6bd4\u8f83\u3002\u8fd9\u662f\u56e0\u4e3a\u957f\u5ea6\u4e3anext","[i]","\u524d\u7f00\u548c\u540e\u7f00\u90fd\u53ef\u4ee5\u5206\u5272\u6210\u4e0a\u90e8\u7684\u6784\u9020\uff0c\u5982\u679c\u4f4d\u7f6enext[next","[i]","]\u548c\u4f4d\u7f6ei\u7684\u5b57\u7b26\u76f8\u540c\uff0c\u5219next","[i+1]","\u5c31\u7b49\u4e8enext[next","[i]","]\u52a01\u3002\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5206\u5272\u957f\u5ea6\u4e3anext[next","[i]","]\u7684\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a0\u4e3a\u6b62"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(17155).Z})),(0,m.kt)("h2",{id:"41-\u4e00\u3001\u66b4\u529b\u5339\u914d\u7b97\u6cd5"},"4.1. \u4e00\u3001\u66b4\u529b\u5339\u914d\u7b97\u6cd5"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898\uff1a\u5355\u6a21\u5339\u914d\u95ee\u9898\uff0c\u987e\u540d\u601d\u4e49\uff0c\u53ea\u6709\u4e00\u4e2a\u6a21\u5f0f\u4e32"),(0,m.kt)("li",{parentName:"ol"},"\u4f9d\u6b21\u5bf9\u9f50\u6a21\u5f0f\u4e32\u548c\u6587\u672c\u4e32\u7684\u6bcf\u4e00\u4f4d\uff0c\u76f4\u5230\u5339\u914d\u6210\u529f"),(0,m.kt)("li",{parentName:"ol"},"\u5173\u952e\uff1a\u4e0d\u91cd\u4e0d\u6f0f\u7684\u627e\u5230\u7b54\u6848")),(0,m.kt)("h2",{id:"42-\u4e8c\u3001kmp-\u7b97\u6cd5"},"4.2. \u4e8c\u3001KMP \u7b97\u6cd5"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"KMP \u7b97\u6cd5\u4e2d\uff0c\u6a21\u5f0f\u4e32\u4e2d\u7684\u7b2c\u4e09\u90e8\u5206\u7684\u91cd\u8981\u6027"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c\u4e09\u90e8\u5206\u662f\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u52a0\u5feb\u5339\u914d\u901f\u5ea6\u7684\uff0c\u907f\u514d\u6389\u5927\u91cf\u65e0\u7528\u7684\u5339\u914d\u5c1d\u8bd5"),(0,m.kt)("li",{parentName:"ol"},"KMP \u7b97\u6cd5\u4fdd\u8bc1\u4e0d\u6f0f\uff1a\u7b2c\u4e09\u90e8\u5206\u5339\u914d\u5230\u7684\u662f\u6a21\u5f0f\u4e32\u7684\u6700\u957f\u524d\u7f00"),(0,m.kt)("li",{parentName:"ol"},"\u666e\u901a\u7f16\u7801\uff1a\u83b7\u5f97 NEXT \u6570\u7ec4\uff0c\u4f7f\u7528 NEXT \u6570\u7ec4"),(0,m.kt)("li",{parentName:"ol"},"\u9ad8\u7ea7\u7f16\u7801\uff1a\u62bd\u8c61\u5316\u4e86\u4e00\u4e2a\u72b6\u6001\u673a\u6a21\u578b\uff0cj \u6240\u6307\u5411\u7684\u5c31\u662f\u72b6\u6001\u673a\u4e2d\u7684\u4f4d\u7f6e"),(0,m.kt)("li",{parentName:"ol"},"getNext \u65b9\u6cd5\u76f8\u5f53\u4e8e\u6839\u636e\u8f93\u5165\u5b57\u7b26\uff0c\u8fdb\u884c\u72b6\u6001\u8df3\u8f6c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6539\u53d8 j \u7684\u503c")),(0,m.kt)("p",null,"Ta\u662f\u6700\u957f\u524d\u7f00(\u5426\u5219\u6f0f\u7b54\u6848)"),(0,m.kt)("h2",{id:"43-\u4e09\u3001sunday-\u7b97\u6cd5"},"4.3. \u4e09\u3001SUNDAY \u7b97\u6cd5"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"SUNDAY \u7b97\u6cd5\u7406\u89e3\u7684\u6838\u5fc3\uff0c\u5728\u4e8e\u7406\u89e3\u9ec4\u91d1\u5bf9\u9f50\u70b9\u4f4d")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u662f\u6587\u672c\u4e32\u7684\u5339\u914d\u5c3e\u90e8\uff0c\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u6a21\u5f0f\u4e32\u4e2d\u7684\u5b57\u7b26")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5e94\u8be5\u548c\u6a21\u5f0f\u4e32\u4e2d\u6700\u540e\u4e00\u4f4d\u51fa\u73b0\u8be5\u5b57\u7b26\u7684\u4f4d\u7f6e\u5bf9\u9f50")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u7b2c\u4e00\u6b65\uff1a\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728\u6a21\u5f0f\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u7b2c\u4e8c\u6b65\uff1a\u6a21\u62df\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u8fc7\u7a0b\uff0c\u5931\u914d\u7684\u65f6\u5019\uff0c\u6587\u672c\u4e32\u6307\u9488\u6839\u636e\u9884\u5904\u7406\u4fe1\u606f\u5411\u540e\u79fb\u52a8\u82e5\u5e72\u4f4d"))),(0,m.kt)("h2",{id:"44-\u4e00\u3001\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u5339\u914d\u7b97\u6cd5"},"4.4. \u4e00\u3001\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u5339\u914d\u7b97\u6cd5"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u64cd\u4f5c\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49"),(0,m.kt)("li",{parentName:"ol"},"\u54c8\u5e0c\u503c\u4e0d\u540c\u7684\u8bdd\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e00\u5b9a\u4e0d\u76f8\u7b49\uff0c\u4ece\u800c\u5c31\u4e0d\u9700\u8981\u6309\u4f4d\u6bd4\u8f83\u4e86"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"0")),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mrow",{parentName:"mrow"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"C"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow"},"\xd7"),(0,m.kt)("mi",{parentName:"mrow"},"b"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"e"),(0,m.kt)("mi",{parentName:"msup"},"k"))),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"%"),(0,m.kt)("mi",{parentName:"mrow"},"P")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"H = (\\sum_{k=0}^{n-1}{C_k\\times base^k})\\%P")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.253718em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.954008em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"C"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07153em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.849108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"))))))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord"},"%"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P")))))),(0,m.kt)("li",{parentName:"ol"},"\u5728\u6587\u672c\u4e32\u4e0a\uff0c\u6bcf\u4e00\u4f4d\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u7684\u524d\u7f00\u548c\uff0c\u65b9\u4fbf\u4e00\u4f1a\u6c42\u533a\u95f4\u548c"),(0,m.kt)("li",{parentName:"ol"},"$H(i,j)=(HS",(0,m.kt)("em",{parentName:"li"},"j-HS"),"{i-1})\\times (base^i)^{-1}\\%P $")),(0,m.kt)("p",null,"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"),(0,m.kt)("p",null,"\u200b\t",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"x"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"x"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"%"),(0,m.kt)("mi",{parentName:"mrow"},"p"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"x"),(0,m.kt)("mn",{parentName:"msub"},"1"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x_1 * x_2 \\% p = 1 x_1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.61528em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.94444em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mord"},"%"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.79444em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))),"\u548c",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"x"),(0,m.kt)("mn",{parentName:"msub"},"2"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x_2")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.58056em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))),"\u4e92\u4e3a\u9006\u5143"),(0,m.kt)("p",null,"   \u5feb\u901f\u6c42\u9006\u5143\u7684\u63a8\u5bfc\u8fc7\u7a0b"),(0,m.kt)("div",{className:"math math-display"},(0,m.kt)("span",{parentName:"div",className:"katex-display"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mtable",{parentName:"semantics",rowspacing:"0.24999999999999992em",columnalign:"right left",columnspacing:"0em"},(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"\xd7"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"x"),(0,m.kt)("mrow",{parentName:"msup"},(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")))))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"\u2261"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mi",{parentName:"mrow"},"P"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"))))),(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mtext",{parentName:"mrow"},"\uff1a"),(0,m.kt)("mi",{parentName:"mrow"},"P"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"%"),(0,m.kt)("mi",{parentName:"mrow"},"x")))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"r"))))),(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mi",{parentName:"mstyle"},"P"))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"r"))))),(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"r")))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"\u2261"),(0,m.kt)("mn",{parentName:"mrow"},"0"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mi",{parentName:"mrow"},"P"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"))))),(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"r"),(0,m.kt)("mrow",{parentName:"msup"},(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"x"),(0,m.kt)("mrow",{parentName:"msup"},(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")))))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"\u2261"),(0,m.kt)("mn",{parentName:"mrow"},"0"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mi",{parentName:"mrow"},"P"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"))))),(0,m.kt)("mtr",{parentName:"mtable"},(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("msup",{parentName:"mstyle"},(0,m.kt)("mi",{parentName:"msup"},"x"),(0,m.kt)("mrow",{parentName:"msup"},(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))))),(0,m.kt)("mtd",{parentName:"mtr"},(0,m.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,m.kt)("mrow",{parentName:"mstyle"},(0,m.kt)("mrow",{parentName:"mrow"}),(0,m.kt)("mo",{parentName:"mrow"},"\u2261"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"r"),(0,m.kt)("mrow",{parentName:"msup"},(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,m.kt)("mi",{parentName:"mrow"},"P"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")))))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\begin{aligned} x\\times x^{-1}&\\equiv1\\ (mod\\ P) \\\\ Let\uff1aP\\%x&=r \\\\ P &= kx+r \\\\ kx+r &\\equiv0\\ (mod\\ P) \\\\ kr^{-1}+x^{-1} &\\equiv0\\ (mod\\ P) \\\\ x^{-1} &\\equiv-kr^{-1}\\ (mod\\ P) \\end{aligned}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"9.072323999999998em",verticalAlign:"-4.286161999999999em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mtable"},(0,m.kt)("span",{parentName:"span",className:"col-align-r"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.786162em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-6.922054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.864108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))))),(0,m.kt)("span",{parentName:"span",style:{top:"-5.422054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\uff1a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,m.kt)("span",{parentName:"span",className:"mord"},"%"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.922054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"))),(0,m.kt)("span",{parentName:"span",style:{top:"-2.422054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"))),(0,m.kt)("span",{parentName:"span",style:{top:"-0.8979460000000006em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.864108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.864108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))))),(0,m.kt)("span",{parentName:"span",style:{top:"0.626161999999999em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.864108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))))))))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.286161999999999em"}},(0,m.kt)("span",{parentName:"span"}))))),(0,m.kt)("span",{parentName:"span",className:"col-align-l"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.786162em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-6.922054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2261"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))),(0,m.kt)("span",{parentName:"span",style:{top:"-5.422054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.922054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"))),(0,m.kt)("span",{parentName:"span",style:{top:"-2.422054em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2261"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))),(0,m.kt)("span",{parentName:"span",style:{top:"-0.8979460000000006em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2261"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))),(0,m.kt)("span",{parentName:"span",style:{top:"0.626161999999999em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"}),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2261"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.864108em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.286161999999999em"}},(0,m.kt)("span",{parentName:"span"})))))))))))),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126223810625",src:n(43632).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126223819648",src:n(84827).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126223842372",src:n(99735).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 1000000\n#define P 100007\n#define base 13\nint H[MAX_N + 5];\nint K[MAX_N + 5];\nint inv[P];\nchar s[MAX_N + 5];\n\nvoid init() {\n    inv[1] = 1;\n    for (int i = 2; i < P; ++i) {\n        inv[i] = ((-(P / i) * inv[P % i]) % P + P ) % P;\n    }\n    K[0] = 1;\n    for (int i = 1; i <= MAX_N; ++i) {\n        K[i] = (K[i - 1] * base) % P;\n    }\n    for (int i = 1; s[i]; ++i) {\n        H[i] = (H[i - 1] + K[i] * s[i]) % P;\n    }\n    return ;\n}\n\nint getH(int l, int r) {\n    return ((H[r] - H[l - 1]) % P * inv[K[l]] % P + P ) % P;\n}\n\nint is_same(int i, int j, int n) {\n    for (int k = 0; k < n; ++i) {\n        if (s[i + k] - s[j + k]) return false;\n    }\n    return true;\n}\n\n")),(0,m.kt)("h2",{id:"45-\u4e8c\u3001shift_and-\u7b97\u6cd5"},"4.5. \u4e8c\u3001shift_and \u7b97\u6cd5"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u7b2c\u4e00\u6b65\u5bf9\u6a21\u5f0f\u4e32\u505a\u7279\u6b8a\u5904\u7406\uff0c\u628a\u6bcf\u4e00\u79cd\u5b57\u7b26\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u7f16\u7801")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u540e\u7eed\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\u8ddf\u6a21\u5f0f\u4e32\u4e00\u6bdb\u94b1\u5173\u7cfb\u90fd\u6ca1\u6709")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mo",{parentName:"mrow"},"<"),(0,m.kt)("mo",{parentName:"mrow"},"<"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u2223"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"&"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"s"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p_i = (p_{i-1}<<1 | 1) \\& d[s_i]")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"<")),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"<"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2223"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord"},"&"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]"))))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"p"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p_i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))),"\u7b2c j \u4f4d\u4e8c\u8fdb\u5236\u4e3a1\uff0c\u4ee3\u8868\u5f53\u524d\u4f4d\u7f6e\u4e3a\u7ed3\u5c3e\uff0c\u53ef\u4ee5\u5339\u914d\u6210\u529f\u6a21\u5f0f\u4e32\u7684\u7b2c j \u4f4d      "),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("img",{alt:"image-20210126223755896",src:n(24661).Z})))),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126231420260",src:n(24036).Z})),(0,m.kt)("h3",{id:"451-code"},"4.5.1. code"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 1000\n#define TEST(func, a, b) { \\\n    printf("TEST %s(%s, %s) = %d\\n", #func, a, b, func(a, b)); \\\n}\nchar text[MAX_N + 5], pattern[MAX_N + 5];\n\nint brute_force(char *s, char *t) {\n    int len1 = strlen(s);\n    int len2 = strlen(t);\n    for (int i = 0, I = len1 - len2 + 1; i < I; i++) {\n        int j = 0;\n        for (; t[j]; j++) {\n            if (t[j] == s[i + j]) continue;\n            break;\n        }\n        if (!t[j]) return i;\n    }\n    return -1;\n}\n\nint sunday(char *s, char *t) {\n    int ind[128] = {0};\n    int len1 = strlen(s);\n    int len2 = strlen(t);\n    //len2 + 1\u662f\u56e0\u4e3a\u6ca1\u51fa\u73b0\u8fc7\uff0c\u540e\u4e00\u4f4d\u662fi+len2, \u6240\u4ee5\u4ece i + len2 + 1\u5339\u914d\n    for (int i = 0; i < 128; i++) ind[i] = len2 + 1;\n    for (int i = 0; t[i]; i++) ind[t[i]] = len2 - i;\n    for (int i = 0, I = len1 - len2 + 1; i < I;) {\n        int flag = 1;\n        for (int j = 0; j < len2; j++) {\n            if (t[j] == s[i + j]) continue;\n            i += ind[s[i + len2]];\n            flag = 0;\n            break;\n        }\n        if (flag) return i;\n    }\n    return -1;\n}\n\nint shift_and(char *s, char *t) {\n    int code[128] = {0};\n    int len = 0;\n    for (len = 0; t[len]; len++) {\n        code[t[len]] |= (1 << len);\n    }\n    int p = 0;\n    for (int i = 0; s[i]; i++) {\n        p = (p << 1 | 1) & code[s[i]];\n        if (p & (1 << (len - 1))) return i - len + 1;\n    }\n    return -1;\n}\n\nint kmp(char *s, char *t) {\n    int len1 = strlen(s);\n    int len2 = strlen(t);\n    int *next = (int *)malloc(sizeof(int) * len2);\n    next[0] = -1;\n    for (int i = 1, j = -1; i < len2; i++) {\n        while (j != -1 && t[j + 1] != t[i]) j = next[j];\n        if (t[j + 1] == t[i]) j += 1;\n        next[i] = j;\n    }\n    for (int i = 0, j = -1; s[i]; i++) {\n        while (j != -1 && t[j + 1] != s[i]) j = next[j];\n        if (t[j + 1] == s[i]) j += 1;\n        if (t[j + 1] == 0) return i - len2 + 1;\n    }\n    free(next);\n    return -1;\n}\n\nint main() {\n    scanf("%s%s", text, pattern);\n    TEST(brute_force, text, pattern);\n    TEST(kmp, text, pattern);\n    TEST(sunday, text, pattern);\n    TEST(shift_and, text, pattern);\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"452-oj-275"},"4.5.2. oj-275"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 1000000\n#define P 9973\n#define P1 100007\n#define base 13\n#define base1 103\nlong long H[MAX_N + 5];\nlong long H1[MAX_N + 5];\nlong long K[MAX_N + 5];\nlong long K1[MAX_N + 5];\nlong long inv[P];\nlong long inv1[P1];\nchar s[MAX_N + 5];\n\nvoid init() {\n    inv[1] = 1;\n    inv1[1] = 1;\n    for (long long i = 2; i < P; i++) {\n        inv[i] = ((-(P / i) * inv[P % i]) % P + P) % P;\n        inv1[i] = ((-(P1 / i) * inv1[P1 % i]) % P1 + P1) % P1;\n    }\n    K[0] = 1;\n    K1[0] = 1;\n    for (long long i = 1; i <= MAX_N; i++) {\n        K[i] = (K[i - 1] * base) % P;\n        K1[i] = (K1[i - 1] * base1) % P1;\n    }\n    H[0] = 0;\n    H1[0] = 0;\n    for (long long i = 1; s[i]; i++) {\n        H[i] = (H[i - 1] + K[i] * s[i]) % P;\n        H1[i] = (H1[i - 1] + K1[i] * s[i]) % P1;\n    }\n    return ;\n}\n\nlong long getH(long long l, long long r) {\n    return ((H[r] - H[l - 1]) % P * inv[K[l]] % P + P) % P;\n}\n\nlong long getH1(long long l, long long r) {\n    return ((H1[r] - H1[l - 1]) % P1 * inv1[K1[l]] % P1 + P1) % P1;\n}\n\nint main() {\n    scanf("%s", s + 1);\n    long long m, l1, l2, r1, r2;\n    init();\n    scanf("%lld", &m);\n    for (long long i = 0; i < m; i++) {\n        scanf("%lld%lld%lld%lld", &l1, &r1, &l2, &r2);\n        if (getH(l1, r1) == getH(l2, r2) && getH1(l1, r1) == getH1(l2, r2)) {\n            printf("Yes\\n");\n        } else {\n            printf("No\\n");\n        }\n    }\n    return 0;\n}\n')),(0,m.kt)("h4",{id:"4521-5-\u6700\u957f\u56de\u6587\u5b50\u4e32"},"4.5.2.1. ",(0,m.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/longest-palindromic-substring/"},"5. \u6700\u957f\u56de\u6587\u5b50\u4e32")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        int n = s.size();\n        vector<vector<int>> dp(n, vector<int>(n));\n        string ans;\n        for (int l = 0; l < n; ++l) {\n            for (int i = 0; i + l < n; ++i) {\n                int j = i + l;\n                if (l == 0) {\n                    dp[i][j] = 1;\n                } else if (l == 1) {\n                    dp[i][j] = (s[i] == s[j]);\n                } else {\n                    dp[i][j] = (s[i] == s[j] && dp[i + 1][j - 1]);\n                }\n                if (dp[i][j] && l + 1 > ans.size()) {\n                    ans = s.substr(i, l + 1);\n                }\n            }\n        }\n        return ans;\n    }\n};\n\n")),(0,m.kt)("h4",{id:"4522-hzoj-278-\u5faa\u73af\u5b57\u7b26\u4e32cpp"},"4.5.2.2. HZOJ-278-\u5faa\u73af\u5b57\u7b26\u4e32.cpp"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'using namespace std;\n#define MAX_N 1000000\nchar str[MAX_N + 5];\nint nxt[MAX_N + 5];\nint ans[MAX_N + 5];\n\nvoid get_next(char *str, int *nxt) {\n    int j = -1;\n    nxt[0] = -1;\n    for (int i = 1; str[i]; i++) {\n        while (j != -1 && str[j + 1] != str[i]) j = nxt[j];\n        if (str[j + 1] == str[i]) j += 1;\n        nxt[i] = j;\n    }\n    return ;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cin >> str;\n    get_next(str, nxt);\n    for (int i = 0; i < n; i++) {\n        if (nxt[i] == -1 || i - nxt[i] != ans[nxt[i]]) {\n            ans[i] = i + 1;\n        } else {\n            ans[i] = ans[nxt[i]];\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (ans[i] == i + 1) continue;\n        cout << i + 1 << " " << (i + 1) / ans[i] << endl;\n    }\n    return 0;\n}\n')),(0,m.kt)("h4",{id:"4523-hzoj-281-\u524d\u7f00\u7edf\u8ba1"},"4.5.2.3. HZOJ-281-\u524d\u7f00\u7edf\u8ba1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"using namespace std;\n#define MAX_N 1000000\n\nstruct Node {\n    int flag;\n    int next[26];\n} tree[MAX_N + 5];\nint root = 1, cnt = 1;\nchar str[MAX_N + 5];\n\nint getNode() { return ++cnt; }\nvoid insert(const char *str) {\n    int p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - 'a';\n        if (tree[p].next[ind] == 0) tree[p].next[ind] = getNode();\n        p = tree[p].next[ind];\n    }\n    tree[p].flag += 1;\n    return ;\n}\n\nint query(const char *str) {\n    int p = root, cnt = 0;\n    for (int i = 0; str[i] && p; i++) {\n        p = tree[p].next[str[i] - 'a'];\n        cnt += tree[p].flag;\n    }\n    return cnt;\n}\n")),(0,m.kt)("h4",{id:"4524-hzoj-282-\u6700\u5927\u4ea6\u6216\u548c"},"4.5.2.4. HZOJ-282-\u6700\u5927\u4ea6\u6216\u548c"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre"},"  1. \u601d\u8003\uff1a\u5982\u4f55\u4f7f\u5f97\u5f02\u6216\u7ed3\u679c\u5c3d\u53ef\u80fd\u5927\n  2. \u7ed3\u8bba\uff1a\u53c2\u4e0e\u5f02\u6216\u8fd0\u7b97\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u53c2\u4e0e\u5f02\u6216\u8fd0\u7b97\u7684\u6bcf\u4e00\u4f4d\u5c3d\u53ef\u80fd\u4e0d\u540c\n  3. \u95ee\u9898\u8f6c\u6362\u4e3a\uff1a\u786e\u5b9a\u4e00\u4e2a\u6570\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u4ece\u9ad8\u4e3a\u5230\u4f4e\u4f4d\u4e0e\u5f53\u524d\u6570\u5b57\u5c3d\u91cf\u4e0d\u540c\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\n  4. \u628a\u6bcf\u4e2a\u6570\u5b57\u770b\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u63d2\u5165\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u91c7\u7528\u8d2a\u5fc3\u7b56\u7565\u8fdb\u884c\u9009\u62e9\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 320000\n#define BASE 30\n\nstruct Node {\n    int num;\n    int next[2];\n} tree[MAX_N + 5];\nint root = 1, cnt = 1;\nint arr[(MAX_N >> 5 )+ 5];\ninline int getNode() { return ++cnt; }\nvoid insert(int num) {\n    int p = root;\n    for (int i = BASE; i >= 0; --i) {\n        int ind = !!((1 << i) & num);\n        if (tree[p].next[ind] == 0) tree[p].next[ind] = getNode();\n        p = tree[p].next[ind];\n    }\n    tree[p].num = num;\n    return ;\n}\n\nint query(int num) {\n    int p = root;\n    for (int i = BASE; i >= 0; i--) {\n        int ind = !!((1 << i) & num);\n        int rind = !ind;\n        if (tree[p].next[rind]) p = tree[p].next[rind];\n        else p = tree[p].next[ind];\n    }\n    return num ^ tree[p].num;\n}\n\nint main() {\n    int n, ans = 0;\n    cin >> n;\n    for (int i = 0; i < n; i++) cin >> arr[i], insert(arr[i]);\n    for (int i = 0; i < n; i++) {\n        ans = max(ans, query(arr[i]));\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,m.kt)("h1",{id:"5-\u5b57\u5178\u6811"},"5. ==\u5b57\u5178\u6811=="),(0,m.kt)("p",null,"\u540d\u79f0\uff1atrie\uff0c \u5b57\u5178\u6811\uff0c\u5355\u8bcd\u67e5\u627e\u6811"),(0,m.kt)("p",null,"\u4f5c\u7528\uff1a\u5355\u8bcd\u67e5\u627e\uff0c\u5b57\u7b26\u4e32\u6392\u5e8f"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre"},"  1. \u4e5f\u53eb\u505a\uff1a\u524d\u7f00\u7d22\u5f15\u6811\n  2. \u628a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6309\u7167\u524d\u7f00\u7684\u987a\u5e8f\u63d2\u5165\u5230\u6811\u5f62\u7ed3\u6784\u4e2d\n  3. \u5b57\u5178\u6811\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\n")),(0,m.kt)("p",null,"\u5b57\u5178\u6811\u7b49\u4ef7\u4e8e\u5355\u8bcd\u8868"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210126235307421",src:n(73192).Z})),(0,m.kt)("p",null,"9 < 11 \u5b57\u5178\u5e8f:09 < 11 ->\u6587\u4ef6\u5939\u547d\u540d\u6392\u5e8f"),(0,m.kt)("p",null,"\u7ea2\u8272\u8282\u70b9\u53ef\u505a\u7ed3\u5c3e\uff0c\u72ec\u7acb\u6210\u8bcd\uff0c\u8fb9\u4ee3\u8868\u5b57\u6bcd"),(0,m.kt)("p",null,"\u6bd4\u8f83\u64cd\u4f5c\u7684\u65f6\u95f4\u4e0b\u9650\u4e3aO(nlogn);"),(0,m.kt)("p",null,"\u5b57\u5178\u5e8f\u6392\u5e8f\u5355\u8bcd\uff1a\u4e3aO(n); "),(0,m.kt)("p",null,"\u5c0f\u70b9\uff1a\u7cfb\u7edf\u547d\u540d\u662f1,2,3\uff0c...10\u76f4\u63a5\u6392\u524d\uff0c\u5b57\u5178\u5e8f"),(0,m.kt)("p",null,"\u8ba1\u7b97\u673a\uff1a\u5b66\u4e60\u4fe1\u606f\u7684\u8868\u793a"),(0,m.kt)("p",null,"\u64cd\u4f5c\u7cfb\u7edf\uff1a\u5982\u4f55\u8868\u793a\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\uff0c"),(0,m.kt)("p",null,"\u8ba1\u7b97\u673a\u7f51\u7edc\uff1a\u5982\u4f55\u5408\u7406\u5c01\u88c5\u4fe1\u606f\uff0c\u5982\u4f55\u4fdd\u8bc1\uff0c\u534f\u8bae"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define BASE 26\n#define BASE_LETTER \'a\'\n\ntypedef struct Node {\n    int flag;\n    struct Node *next[BASE];\n} Node;\n\nNode *getNewNode() {\n    Node *p = (Node *)calloc(sizeof(Node), 1);\n    return p;\n}\n\ninline int code(char ch) {\n    return ch - BASE_LETTER;\n}\n\nvoid insert(Node *root, char *str) {\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        if (p->next[code(str[i])] == NULL) p->next[code(str[i])] = getNewNode();\n        p = p->next[code(str[i])];\n    }\n    p->flag = 1;\n    return ;\n}\n\nint query(Node *root, char *str) {\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        p = p->next[code(str[i])];\n        if (p == NULL) return 0;\n    }\n    return p->flag;\n}\n\nvoid output(Node *root, int k, char *buff) {\n    if (root == NULL) return ;\n    if (root->flag) printf("%s\\n", buff);\n    for (int i = 0; i < BASE; i++) {\n        buff[k] = BASE_LETTER + i;\n        buff[k + 1] = \'\\0\';\n        output(root->next[i], k + 1, buff);\n    }\n    return ;\n}\n\nvoid clear(Node *root) {\n    if (root == NULL) return ;\n    for (int i = 0; i < BASE; i++) {\n        clear(root->next[i]);\n    }\n    free(root);\n    return ;\n}\n\nint main() {\n    char str[1000];\n    int n;\n    Node *root = getNewNode();\n    scanf("%d", &n);\n    for (int i = 0; i < n; i++) {\n        scanf("%s", str);\n        insert(root, str);\n    }\n    output(root, 0, str);\n    while (~scanf("%s", str)) {\n        printf("query %s, result = %s\\n", str, query(root, str) ? "Yes" : "No");\n    }\n    return 0;\n}\n')),(0,m.kt)("p",null,"\u6307\u9488\u53d8\u91cf-8\u5b57\u8282(sizeof(int *))"),(0,m.kt)("h1",{id:"6-\u53cc\u6570\u7ec4\u5b57\u5178\u6811"},"6. ==\u53cc\u6570\u7ec4\u5b57\u5178\u6811=="),(0,m.kt)("h2",{id:"61-\u4f20\u7edf\u5b57\u5178\u6811\u7684\u7f3a\u70b9"},"6.1. \u4f20\u7edf\u5b57\u5178\u6811\u7684\u7f3a\u70b9"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b9e\u9645\u5b58\u50a8\u7ed3\u6784\u662f\u8fde\u7eed\u6570\u7ec4\u7a7a\u95f4\uff0c\u601d\u7ef4\u903b\u8f91\u7ed3\u6784\u662f\u6811\u578b\u7684"),(0,m.kt)("li",{parentName:"ol"},"\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u8282\u7701\u4e86\u5927\u91cf\u7684\u5b58\u50a8\u8fb9\u7684\u7a7a\u95f4"),(0,m.kt)("li",{parentName:"ol"},"\u4f18\u5316\u601d\u60f3\uff1a\u8bb0\u5f55\u5f0f \u6539 \u8ba1\u7b97\u5f0f"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," \u4e2a\u8282\u70b9\u7684\u5b57\u5178\u6811\uff0c\u6709\u6548\u4f7f\u7528 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," \u6761\u8fb9\uff0c\u6d6a\u8d39\u4e86 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(k-1)*n+1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," \u6761\u8fb9\u7684\u5b58\u50a8\u7a7a\u95f4"),(0,m.kt)("li",{parentName:"ol"},"\u53c2\u8003\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u4f18\u70b9\uff0c\u63d0\u51fa\u4e86\u53cc\u6570\u7ec4\u5b57\u5178\u6811")),(0,m.kt)("h2",{id:"62-\u53cc\u6570\u7ec4\u5b57\u5178\u6811"},"6.2. \u53cc\u6570\u7ec4\u5b57\u5178\u6811"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u987e\u540d\u601d\u4e49\uff0c\u4e24\u4e2a\u6570\u7ec4\u4ee3\u8868\u4e00\u68f5\u5b57\u5178\u6811\u7ed3\u6784"),(0,m.kt)("li",{parentName:"ol"},"base \u6570\u7ec4\u4fe1\u606f\u4e0e\u5b50\u8282\u70b9\u7f16\u53f7\u76f8\u5173\uff0cbase + i \u5c31\u662f\u7b2c i \u4e2a\u5b50\u8282\u70b9\u7f16\u53f7"),(0,m.kt)("li",{parentName:"ol"},"check \u6570\u7ec4\u4fe1\u606f\u8d1f\u8d23\u505a\u3010\u4eb2\u5b50\u9274\u5b9a\u3011\uff0ccheck \u6570\u7ec4\u4e2d\u7528\u6b63\u8d1f\u8868\u793a\u662f\u5426\u72ec\u7acb\u6210\u8bcd"),(0,m.kt)("li",{parentName:"ol"},"\u4e0d\u64c5\u957f\u8fdb\u884c\u52a8\u6001\u63d2\u5165\u64cd\u4f5c"),(0,m.kt)("li",{parentName:"ol"},"\u4e00\u6b21\u5efa\u7acb\uff0c\u7ec8\u8eab\u4f7f\u7528"),(0,m.kt)("li",{parentName:"ol"},"\u4e3a\u4e86\u65b9\u4fbf\uff0c\u57fa\u4e8e\u666e\u901a\u5b57\u5178\u6811\u5b9e\u73b0\u7684\u53cc\u6570\u7ec4\u5b57\u5178\u6811"),(0,m.kt)("li",{parentName:"ol"},"\u589e\u52a0\u4e86 fail \u6570\u7ec4\uff0c\u53ef\u4ee5\u5b8c\u6210\u57fa\u4e8e\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684 AC \u81ea\u52a8\u673a"),(0,m.kt)("li",{parentName:"ol"},"\u8d85\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u7ed3\u679c\uff1a\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u538b\u7f29\u6548\u7387\u662f 25 \u500d"),(0,m.kt)("li",{parentName:"ol"},"\u975e\u5e38\u65b9\u4fbf\u7684\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\uff0c\u8fdb\u884c\u673a\u5668\u4e4b\u95f4\u7684\u5171\u4eab"),(0,m.kt)("li",{parentName:"ol"},"\u8bfe\u540e\u4f5c\u4e1a\uff1a\u5229\u7528\u771f\u5b9e\u6570\u636e\u96c6\uff0c\u6d4b\u8bd5\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684\u538b\u7f29\u6548\u7387"),(0,m.kt)("li",{parentName:"ol"},"base\u503c\u53ef\u4ee5\u76f8\u540c,base\u7684\u5b50\u8282\u70b9\u7684\u503c\u624d\u91cd\u8981,\u4e0d\u53ef\u4ee5\u51b2\u7a81")),(0,m.kt)("h2",{id:"63-\u4e8c\u53c9\u5b57\u5178\u6811"},"6.3. \u4e8c\u53c9\u5b57\u5178\u6811"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u8ba1\u7b97\u673a\u4e2d\u6240\u6709\u4fe1\u606f\u90fd\u662f\u4e8c\u8fdb\u5236\u5b58\u50a8\u7684"),(0,m.kt)("li",{parentName:"ol"},"\u4efb\u4f55\u4fe1\u606f\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32"),(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u4e8c\u8fdb\u5236\u4e32\u7684\u5b57\u5178\u6811\uff0c\u5c31\u662f\u4e8c\u53c9\u5b57\u5178\u6811"),(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u5b57\u5178\u6811\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u4fe1\u606f"),(0,m.kt)("li",{parentName:"ol"},"\u8282\u7701\u7a7a\u95f4\uff0c\u6d6a\u8d39\u65f6\u95f4\uff0c\u672c\u8d28\uff1a\u65f6\u95f4\u6362\u7a7a\u95f4\u7684\u7b97\u6cd5\u601d\u7ef4"),(0,m.kt)("li",{parentName:"ol"},"\u54c8\u5f17\u66fc\u7f16\u7801 + \u4e8c\u53c9\u5b57\u5178\u6811 \u53ef\u80fd\u66f4\u914d\u54e6\uff0c\u65e2\u8282\u7701\u4e86\u7a7a\u95f4\uff0c\u53c8\u5728\u6700\u5927\u9650\u5ea6\u4e0a\u8282\u7701\u4e86\u67e5\u627e\u65f6\u95f4")),(0,m.kt)("p",null,"\u4e0d\u79ef\u8dec\u6b65\uff0c\u65e0\u4ee5\u81f3\u5343\u91cc\u3002\u4e0d\u79ef\u5c0f\u6d41\uff0c\u65e0\u4ee5\u6210\u6c5f\u6d77\u3002"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u5efa\u8bae\uff1a"),"\u591a\u770b\u51e0\u672c\u57fa\u672c\u7684\u7b97\u6cd5\u4e66\u3001\u3010\u6570\u8bba\u57fa\u7840\u3011\u3001\u591a\u63a5\u89e6\u79bb\u6563\u578b\u6570\u5b66\u601d\u7ef4"),(0,m.kt)("p",null,"\u5b57\u5178\u6811\u53f6\u5b50\u8282\u70b9\u6d6a\u8d39\u7a7a\u95f4\u8fc7\u5927"),(0,m.kt)("p",null,"\u8bb0\u5f55\u5f0f\u8f6c\u8ba1\u7b97\u5f0f"),(0,m.kt)("h3",{id:"631-\u53cc\u6570\u7ec4\u5b57\u5178\u6811"},"6.3.1. \u53cc\u6570\u7ec4\u5b57\u5178\u6811"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201017104134948",src:n(25438).Z})),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"==\u4fe1\u606f\u7684\u7b49\u4ef7==")),(0,m.kt)("p",null,"\u53ea\u662f\u4fee\u6539\u4e86\u5b57\u5178\u6811\u7684\u8868\u793a\u65b9\u5f0f---\u8ba1\u7b97\u673a\u672c\u8d28\u5c31\u662f\u4fe1\u606f\u7684\u8868\u793a"),(0,m.kt)("p",null,"\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u662f\u79bb\u6563\u6784\u5efa\u7684\uff0c\u4e0d\u592a\u652f\u6301\u52a8\u6001\u63d2\u5165\uff0c\u5176\u5b9e\u5b83\u662f\u5b57\u5178\u6587\u4ef6->\u5efa\u7acb\u5bf9\u5e94\u5b57\u5178\u6811->\u8f6c\u4e3a\u76f8\u5e94\u53cc\u6570\u7ec4\u5b57\u5178\u6811"),(0,m.kt)("p",null,"\u7236\u8282\u70b9\u4e0e\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u7684\u8ba1\u7b97\u5f0f\u8868\u793a\uff1a"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"base[]\uff1a\u8ba1\u7b97\u7236\u5b50\u8282\u70b9\u7684\u8fb9\u7684\u4e2d\u95f4\u91cf"),(0,m.kt)("p",{parentName:"li"},"\u200b\tfather\u7684\u7b2ci\u4e2a\u5b69\u5b50(i\u662f\u5b57\u7b26\u7f16\u7801) \uff1a child_i = base","[father]"," + i;")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"check[]\uff1a\u8bb0\u5f55\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u771f\u6b63\u7236\u8282\u70b9, \u4ee5\u53ca\u662f\u5426\u72ec\u7acb\u6210\u8bcd(\u6b63\u8d1f)"),(0,m.kt)("p",{parentName:"li"},"\u200b\tcheck","[child_i]"," = father;"),(0,m.kt)("p",{parentName:"li"},"\u200b\tcheck","[child_i]"," = -father; \u8d1f\u6570\u989d\u5916\u4ee3\u8868\u72ec\u7acb\u6210\u8bcd"),(0,m.kt)("p",{parentName:"li"},"\u200b\t\u4e0d\u53ef\u8bb0\u5f550\u53f7\uff0c\u4ece1\u53f7\u5f00\u59cb\uff1b\u76f8\u5e94\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e0d\u53ef\u4e3a0\u53f7"),(0,m.kt)("p",{parentName:"li"},"\u200b\t\u521d\u59cbcheck[]\u4e3a0\uff0c\u4ee3\u8868\u672a\u5360\u7528\uff0c\u4e00\u65e6\u8bb0\u5f55\u4e00\u5b9a\u975e0\uff1b")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"base","[child_i]"," = "))),(0,m.kt)("p",null,"\u8bb0\u5f55\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u53ef\u901a\u8fc7\u5c01\u88c5\u7ed3\u6784\u4f53\uff0c\u591a\u4e2a\u6570\u7ec4"),(0,m.kt)("h3",{id:"632-\u4e8c\u53c9\u5b57\u5178\u6811\u54c8\u592b\u66fc\u7f16\u7801"},"6.3.2. \u4e8c\u53c9\u5b57\u5178\u6811+\u54c8\u592b\u66fc\u7f16\u7801"),(0,m.kt)("p",null,"\u7f16\u7801\uff1a\u6839\u636e\u95ee\u9898\u573a\u666f\u6765\u7b49\u4ef7\u4fe1\u606f\u8868\u793a\u3002"),(0,m.kt)("p",null,"\u54c8\u592b\u66fc\u7f16\u7801\uff1a\u5c06\u4fe1\u606f\u8868\u793a\u4e3a\u6700\u77ed"),(0,m.kt)("p",null,"\u56de\u7b54\uff1a"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"\u54c8\u592b\u66fc\u7f16\u7801\u7b97\u51fa\uff1a\u9700\u8981\u7684\u4fe1\u606f\uff0c\u7edf\u8ba1\u95ee\u9898\u573a\u666f\u4e0b\u7684\u6982\u7387\uff1b")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"\u5bf9\u4e2d\u6587\u5b57\u7b26\u96c6\u7f16\u7801\uff1a\u4e00\u4e2a\u4e2d\u6587\u5360\u82e5\u5e72\u7f16\u7801\uff0c\u5bf9\u6bcf\u4e2a\u5b57\u8282\u7f16\u7801"))),(0,m.kt)("h3",{id:"633-\u57fa\u4e8e\u5b57\u5178\u6811\u7684-ac-\u81ea\u52a8\u673a"},"6.3.3. \u57fa\u4e8e\u5b57\u5178\u6811\u7684 AC \u81ea\u52a8\u673a"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n   > File Name: 12.double_array_trie.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e09  8/21 14:14:38 2019\n ************************************************************************/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#define BASE 26\n#define BEGIN_LETTER \'a\'\n\ntypedef struct Node {\n    int flag;\n    struct Node *next[BASE];\n} Node;\n\ntypedef struct DATrie {\n    int *base, *check;\n    int root, size;\n} DATrie;\n\nDATrie *getDATrie(int n) {\n    DATrie *tree = (DATrie *)calloc(sizeof(DATrie), 1);\n    tree->root = 1;\n    tree->size = n;\n    tree->base = (int *)calloc(sizeof(int), n);\n    tree->check = (int *)calloc(sizeof(int), n);\n    tree->check[tree->root] = 1;\n    return tree;\n}\n\nNode *getNewNode() {\n    Node *p = (Node *)calloc(sizeof(Node), 1);\n    return p;\n}\n\nint insert(Node *root, const char *str) {\n    int cnt = 0;\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - BEGIN_LETTER;\n        if (p->next[ind] == NULL) p->next[ind] = getNewNode(), cnt += 1;\n        p = p->next[ind];\n    }\n    p->flag = 1;\n    return cnt;\n}\n\nvoid clear(Node *root) {\n    if (root == NULL) return ;\n    for (int i = 0; i < BASE; i++) {\n        clear(root->next[i]);\n    }\n    free(root);\n    return ;\n}\n\nint getBaseValue(Node *root, DATrie *tree) {\n    int base = 0, flag;\n    do {\n        flag = 1;\n        base += 1;\n        for (int i = 0; i < BASE; i++) {\n            if (root->next[i] == NULL) continue;\n            if (tree->check[base + i] == 0) continue;\n            flag = 0;\n            break;\n        }\n    } while (!flag);\n    return base;\n}\n\nint buildDATrie(int ind, Node *root, DATrie *tree) {\n    int base = tree->base[ind] = getBaseValue(root, tree);\n    int ans = ind;\n    for (int i = 0; i < BASE; i++) {\n        if (root->next[i] == NULL) continue;\n        tree->check[base + i] = ind;\n    }\n    for (int i = 0; i < BASE; i++) {\n        if (root->next[i] == NULL) continue;\n        int temp = buildDATrie(base + i, root->next[i], tree);\n        if (temp > ans) ans = temp;\n    }\n    if (root->flag) tree->check[ind] = -tree->check[ind];\n    return ans;\n}\n\nint query(DATrie *tree, const char *str) {\n    int p = tree->root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - BEGIN_LETTER;\n        if (abs(tree->check[tree->base[p] + ind]) != p) return 0;\n        p = tree->base[p] + ind;\n    }\n    return tree->check[p] < 0;\n}\n\nvoid clearDA(DATrie *tree) {\n    if (tree == NULL) return ;\n    free(tree->base);\n    free(tree->check);\n    free(tree);\n    return ;\n}\n\nint main() {\n    int n, cnt1 = 1, cnt2;\n    char str[100];\n    scanf("%d", &n);\n    Node *root = getNewNode();\n    while (n--) {\n        scanf("%s", str);\n        cnt1 += insert(root, str);\n    }\n    DATrie *tree = getDATrie(cnt1 * BASE + 5);\n    cnt2 = buildDATrie(tree->root, root, tree) + 1;\n    while (~scanf("%s", str)) {\n        printf("search %s, result = %s\\n", str, query(tree, str) ? "YES" : "NO");\n    }\n    int mem1 = cnt1 * sizeof(Node), mem2 = cnt2 * sizeof(int) * 2 + sizeof(int) * 2;\n    printf("Trie memory : %d Bytes\\n", mem1);\n    printf("Double Array Trie memory : %d Bytes\\n", mem2);\n    printf("memory rate : %.4lf%%\\n", 1.0 * mem2 / mem1 * 100);\n    clearDA(tree);\n    clear(root);\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"634-\u57fa\u4e8e\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684-ac-\u81ea\u52a8\u673a"},"6.3.4. \u57fa\u4e8e\u53cc\u6570\u7ec4\u5b57\u5178\u6811\u7684 AC \u81ea\u52a8\u673a"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <time.h>\n\n#define BASE 26\n#define BEGIN_LETTER \'a\'\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define has_child(data, ind, i) (abs(data[data[ind].base + i].check) == ind)\n\ntypedef struct DANode {\n    int base, check, fail;\n    char *str;\n} DANode;\n\ntypedef struct Node {\n    int flag;\n    char *str;\n    struct Node *next[BASE];\n} Node, *Trie;\n\nint node_cnt = 0;\n\nNode *get_new_node() {\n    Node *p = (Node *)calloc(sizeof(Node), 1);\n    node_cnt += 1;\n    return p;\n}\n\nvoid clear(Trie root) {\n    if (root == NULL) return ;\n    for (int i = 0; i < BASE; i++) {\n        clear(root->next[i]);\n    }\n    if (root->flag) free(root->str);\n    free(root);\n    return ;\n}\n\nNode *insert(Trie root, const char *str) {\n    if (root == NULL) root = get_new_node();\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - BEGIN_LETTER;\n        if (p->next[ind] == NULL) p->next[ind] = get_new_node();\n        p = p->next[ind];\n    }\n    p->flag = 1;\n    p->str = strdup(str);\n    return root;\n}\n\nint get_base(Node *node, DANode *data) {\n    int base = 2, flag = 0;\n    while (!flag) {\n        flag = 1;\n        for (int i = 0; i < BASE; i++) {\n            if (node->next[i] == NULL) continue;\n            if (data[base + i].check == 0) continue;\n            flag = 0;\n            break;\n        }\n        base += (!flag);\n    }\n    return base;\n}\n\nint build(Node *node, DANode *data, int ind) {\n    if (node == NULL) return 0;\n    if (node->flag) data[ind].check = -data[ind].check, data[ind].str = node->str;\n    int max_ind = ind;\n    data[ind].base = get_base(node, data);\n    for (int i = 0; i < BASE; i++) {\n        if (node->next[i] == NULL) continue;\n        data[data[ind].base + i].check = ind;\n    }\n    for (int i = 0; i < BASE; i++) {\n        if (node->next[i] == NULL) continue;\n        int temp = build(node->next[i], data, data[ind].base + i);\n        max_ind = max(max_ind, temp);\n    }\n    return max_ind;\n}\n\nvoid build_ac(DANode *data) {\n    #define MAX_N 100000\n    int *queue = (int *)malloc(sizeof(int) * MAX_N);\n    int head = 0, tail = 0;\n    data[1].fail = 0;\n    queue[tail++] = 1;\n    while (head < tail) {\n        int ind = queue[head++];\n        for (int i = 0; i < BASE; i++) {\n            if (!has_child(data, ind, i)) continue;\n            int p = data[ind].fail;\n            while (p && !has_child(data, p, i)) p = data[p].fail;\n            if (p == 0) p = 1;\n            else p = data[p].base + i;\n            data[data[ind].base + i].fail = p;\n            queue[tail++] = data[ind].base + i;\n        }\n    }\n    return ;\n    #undef MAX_N\n}\n\nvoid search_ac(DANode *data, const char *str) {\n    int p = 1;\n    for (int i = 0; str[i]; i++) {\n        while (p && !has_child(data, p, str[i] - BEGIN_LETTER)) p = data[p].fail;\n        if (p == 0) p = 1;\n        else p = data[p].base + str[i] - BEGIN_LETTER;\n        int q = p;\n        while (q) {\n            if (data[q].check < 0) printf("find string : %s\\n", data[q].str);\n            q = data[q].fail;\n        }\n    }\n    return ;  \n}\n\nvoid output_da(DANode *data, int n) {\n    for (int i = 1; i <= n; i++) {\n        if (i - 1 && i % 5 == 1) printf("\\n");\n        printf("(%2d %2d %3d)    ", i, data[i].base, data[i].check);\n    }\n    printf("\\n");\n    return ;\n}\n\nint main() {\n    Trie root = NULL;\n    #define INSERT_CNT 5\n    root = insert(root, "hai");\n    root = insert(root, "zei");\n    root = insert(root, "ha");\n    root = insert(root, "ab");\n    root = insert(root, "ehz");\n    DANode *data = (DANode *)calloc(sizeof(DANode), (INSERT_CNT * 100));\n    int da_cnt = build(root, data, 1);\n    build_ac(data);\n    output_da(data, da_cnt);\n    search_ac(data, "sasherhs");\n    #undef INSERT_CNT \n    return 0;\n}\n')),(0,m.kt)("h3",{id:"635-kaikeiba"},"6.3.5. kaikeiba"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n    > File Name: 1.double_array_trie.cpp\n    > Author: huguang\n    > Mail: hug@haizeix.com\n    > Created Time: \n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n#include <stack>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <set>\n#include <vector>\nusing namespace std;\n\n#define BASE 26\n#define MSG_LEVEL 2\n#define DEBUG_LEVEL 1\n#define INFO_LEVEL 2\n\n#define LOG(level, frm, args...) { \\\n    if (level >= MSG_LEVEL) { \\\n        printf(frm,##args); \\\n    } \\\n}\n\n#define LOG_DEBUG(args...) LOG(DEBUG_LEVEL, args)\n#define LOG_INFO(args...) LOG(INFO_LEVEL, args)\n\ntypedef struct Node {\n    int flag;\n    struct Node *next[BASE];\n} Node;\n\ntypedef struct DANode {\n    int base, check, fail;\n} DANode;\n\nNode *getNewNode() {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->flag = 0;\n    memset(p->next, 0, sizeof(p->next));\n    return p;\n}\n\ninline int code(char c) { return c - \'a\'; }\n\nint insert(Node *root, const char *str) {\n    int cnt = 0;\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = code(str[i]);\n        if (p->next[ind] == NULL) {\n            cnt += 1;\n            p->next[ind] = getNewNode();\n        }\n        p = p->next[ind];\n    }\n    p->flag = 1;\n    return cnt;\n}\n\nvoid clear_trie(Node *root) {\n    if (root == NULL) return ;\n    for (int i = 0; i < BASE; i++) {\n        clear_trie(root->next[i]);\n    }\n    free(root);\n    return ;\n}\n\nint get_base_value(Node *root, DANode *tree, int ind) {\n    int base = 1, flag;\n    do {\n        base += 1;\n        flag = 1;\n        for (int i = 0; i < BASE && flag; i++) {\n            if (root->next[i] == NULL) continue;\n            if (tree[base + i].check) flag = 0;\n        }\n    } while (flag == 0);\n    return base;\n}\n\nint transform_double_array_trie(Node *root, DANode *tree, int ind) {\n    if (root == NULL) return 0;\n    if (root->flag) tree[ind].check = -tree[ind].check;\n    int base = get_base_value(root, tree, ind);\n    tree[ind].base = base;\n    for (int i = 0; i < BASE; i++) {\n        if (root->next[i] == NULL) continue;\n        tree[base + i].check = ind;\n    }\n    int max_ind = ind;\n    for (int i = 0; i < BASE; i++) {\n        int a = transform_double_array_trie(root->next[i], tree, base + i);\n        if (a > max_ind) max_ind = a;\n    }\n    return max_ind;\n}\n\nvoid dump_double_array_trie(DANode *tree, int n) {\n    LOG_INFO("%d\\n", n);\n    for (int i = 0; i <= n; i++) {\n        LOG_INFO("%d %d %d\\n", tree[i].base, tree[i].check, tree[i].fail);\n    }\n    return ;\n}\n\nvoid build_ac_base_double_array_trie(DANode *tree, int max_ind) {\n    int *que = (int *)malloc(sizeof(int) * (max_ind + 5));\n    int head, tail;\n    head = tail = 0;\n    tree[1].fail = 0;\n    for (int i = 0; i < BASE; i++) {\n        int child_ind = tree[1].base + i;\n        if (abs(tree[child_ind].check) != 1) continue;\n        tree[child_ind].fail = 1;\n        que[tail++] = child_ind;\n    }\n    while (head < tail) {\n        int p = que[head++];\n        for (int i = 0; i < BASE; i++) {\n            int c = tree[p].base + i, k = tree[p].fail;\n            if (abs(tree[c].check) != p) continue;\n            while (k && abs(tree[tree[k].base + i].check) != k) k = tree[k].fail;\n            if (k == 0) k = 1;\n            if (abs(tree[tree[k].base + i].check) == k) k = tree[k].base + i;\n            tree[c].fail = k;\n            que[tail++] = c;\n        }\n    }\n    free(que);\n    return ;\n}\n\nint main() {\n    int n, cnt = 1;\n    char str[1000];\n    scanf("%d", &n);\n    Node *root = getNewNode();\n    for (int i = 0; i < n; i++) {\n        scanf("%s", str);\n        cnt += insert(root, str);\n    }\n    size_t tree_size = sizeof(DANode) * (cnt * BASE);\n    DANode *tree = (DANode *)malloc(tree_size);\n    memset(tree, 0, tree_size);\n    int max_ind = transform_double_array_trie(root, tree, 1);\n    size_t s1 = cnt * sizeof(Node);\n    size_t s2 = max_ind * sizeof(DANode);\n    LOG_DEBUG("trie(%lu Byte), double array trie(%lu Byte)\\n", s1, s2);\n    LOG_DEBUG("rate : %.2lf\\n", 1.0 * s2 / s1);\n    for (int i = 0; i <= max_ind; i++) {\n        LOG_DEBUG("(%d | %d, %d)\\t", i, tree[i].base, tree[i].check);\n        if ((i + 1) % 5 == 0) LOG_DEBUG("\\n");\n    }\n    LOG_DEBUG("\\n");\n    build_ac_base_double_array_trie(tree, max_ind);\n    dump_double_array_trie(tree, max_ind);\n    free(tree);\n    clear_trie(root);\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"636-ac-\u81ea\u52a8\u673a\u7684\u9012\u5f52\u5efa\u7acb"},"6.3.6. AC \u81ea\u52a8\u673a\u7684\u9012\u5f52\u5efa\u7acb"),(0,m.kt)("h2",{id:"64"},"6.4."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst int SIZE = 26;\nconst char BASE = \'a\';\nconst int MAX_SIZE = 200000;\nconst int MAX_LEN = 200000;\nchar str_buffer[200005];\n\ntypedef struct TrieNode {\n    int count;\n    struct TrieNode** childs;\n    struct TrieNode* fail, *father;\n} TrieNode, *Trie;\n\nTrieNode* new_node() {\n    TrieNode *p = (TrieNode *)malloc(sizeof(TrieNode));\n    p->childs = (TrieNode **)malloc(sizeof(TrieNode *) * SIZE);\n    for (int i = 0; i < SIZE; i++) {\n        p->childs[i] = NULL;\n    }\n    p->fail = NULL;\n    p->count = 0;\n    return p;\n}\n\nvoid clear(TrieNode *node) {\n    if (node == NULL) return ;\n    for (int i = 0; i < SIZE; i++) {\n        if (node->childs[i] == NULL) continue;\n        clear(node->childs[i]);\n    }\n    free(node->childs);\n    free(node);\n    return ;\n}\n\nvoid insert(TrieNode *trie, const char *buffer) {\n    TrieNode *p = trie;\n    for (int i = 0; i < strlen(buffer); i++) {\n        if (p->childs[buffer[i] - BASE] == NULL) {\n            p->childs[buffer[i] - BASE] = new_node();\n            p->childs[buffer[i] - BASE]->father = p;\n        }\n        p = p->childs[buffer[i] - BASE];\n    }\n    p->count++;\n    return ;\n}\n\nvoid build_automaton(TrieNode *node) {\n    #define next childs\n    #define Node TrieNode\n    if (node == NULL) return ;\n    if (node->fail == NULL) build_automaton(node->father);\n    for (int i = 0; i < SIZE; i++) {\n        if (node->next[i] == NULL) continue;\n        if (node->next[i]->fail) continue;\n        Node *p = node->fail, *pre_p = node;\n        while (p && p->next[i] == NULL) {\n            if (p->fail == NULL) build_automaton(p->father);\n            pre_p = p;\n            p = p->fail;\n        }\n        if (p == NULL) p = pre_p;\n        else p = p->next[i];\n        node->next[i]->fail = p;\n        build_automaton(node->next[i]);\n    }\n    return ;\n    #undef next\n    #undef Node\n}\n\nint match_count(TrieNode *ac_tree, const char *str) {\n    int ret = 0;\n    TrieNode *p = ac_tree, *q;\n    while (str[0]) {\n        while (p && p->childs[str[0] - \'a\'] == NULL) p = p->fail;\n        if (p == NULL) p = ac_tree;\n        else p = p->childs[str[0] - \'a\'];\n        q = p;\n        while (q) ret += q->count, q = q->fail;\n        str++;\n    }\n    return ret;\n}\n\nint main() {\n    Trie root = new_node();\n    int n;\n    scanf("%d", &n);\n    for (int i = 0; i < n; ++i) {\n        char pattern[MAX_LEN];\n        scanf("%s", pattern);\n        insert(root, pattern);\n    }\n    build_automaton(root);\n    scanf("%s", str_buffer);\n    printf("%d\\n", match_count(root, str_buffer));\n    //clear(root);\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"641-ac-\u81ea\u52a8\u673a\u7684\u7ebf\u7d22\u5316"},"6.4.1. AC \u81ea\u52a8\u673a\u7684\u7ebf\u7d22\u5316"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst int SIZE = 26;\nconst char BASE = \'a\';\nconst int MAX_SIZE = 200000;\nconst int MAX_LEN = 200000;\nchar str_buffer[200005];\n\ntypedef struct TrieNode {\n    int count;\n    struct TrieNode** childs;\n    struct TrieNode *fail;\n} TrieNode, *Trie;\n\nTrieNode* new_node() {\n    TrieNode *p = (TrieNode *)calloc(sizeof(TrieNode), 1);\n    p->childs = (TrieNode **)malloc(sizeof(TrieNode *) * SIZE);\n    for (int i = 0; i < SIZE; i++) {\n        p->childs[i] = NULL;\n    }\n    p->count = 0;\n    return p;\n}\n\nvoid clear(TrieNode *node) {\n    if (node == NULL) return ;\n    for (int i = 0; i < SIZE; i++) {\n        if (node->childs[i] == NULL) continue;\n        clear(node->childs[i]);\n    }\n    free(node->childs);\n    free(node);\n    return ;\n}\n\nvoid insert(TrieNode *trie, const char *buffer) {\n    TrieNode *p = trie;\n    for (int i = 0; i < strlen(buffer); i++) {\n        if (p->childs[buffer[i] - BASE] == NULL) {\n            p->childs[buffer[i] - BASE] = new_node();\n        }\n        p = p->childs[buffer[i] - BASE];\n    }\n    p->count++;\n    return ;\n}\n\nvoid build_automaton(TrieNode *node) {\n    TrieNode **queue = (TrieNode **)malloc(sizeof(TrieNode *) * (MAX_SIZE + 5));\n    int head = 0, tail = 0;\n    queue[tail++] = node;\n    while (head < tail) {\n        TrieNode *now = queue[head++];\n        for (int i = 0; i < SIZE; i++) {\n            if (now->childs[i] == NULL) {\n                if (now != node) now->childs[i] = now->fail->childs[i];\n                continue;\n            }\n            TrieNode *p = (now->fail ? now->fail->childs[i] : node);\n            if (p == NULL) p = node;\n            now->childs[i]->fail = p;\n            queue[tail++] = now->childs[i];\n        }\n    }\n    free(queue);\n    return ;\n}\n\nint match_count(TrieNode *ac_tree, const char *str) {\n    int ret = 0;\n    TrieNode *p = ac_tree, *q;\n    while (str[0]) {\n        p = p->childs[str[0] - \'a\'];\n        q = p;\n        while (q) ret += q->count, q = q->fail;\n        if (p == NULL) p = ac_tree;\n        str++;\n    }\n    return ret;\n}\nint main() {\n    Trie root = new_node();\n    int n;\n    scanf("%d", &n);\n    for (int i = 0; i < n; ++i) {\n        char pattern[MAX_LEN];\n        scanf("%s", pattern);\n        insert(root, pattern);\n    }\n    printf("insert done\\n");\n    fflush(stdout);\n    build_automaton(root);\n    scanf("%s", str_buffer);\n    printf("%d\\n", match_count(root, str_buffer));\n    //clear(root);\n    return 0;\n}\n')),(0,m.kt)("h1",{id:"7-\u591a\u6a21\u5339\u914d\u95ee\u9898"},"7. ==\u591a\u6a21\u5339\u914d\u95ee\u9898=="),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\u7684\u5339\u914d\u95ee\u9898\uff0c\u5c31\u662f\u591a\u6a21\u5339\u914d\u95ee\u9898"),(0,m.kt)("li",{parentName:"ol"},"Step1\uff1a\u591a\u4e2a\u6a21\u5f0f\u4e32\uff0c\u5efa\u7acb\u6210\u4e00\u68f5\u5b57\u5178\u6811"),(0,m.kt)("li",{parentName:"ol"},"Step2\uff1a\u548c\u6587\u672c\u4e32\u7684\u6bcf\u4e00\u4f4d\u5bf9\u9f50\u5339\u914d\uff0c\u6a21\u62df\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u7684\u8fc7\u7a0b")),(0,m.kt)("h2",{id:"71-ac-\u81ea\u52a8\u673a\u7684\u601d\u60f3"},"7.1. AC \u81ea\u52a8\u673a\u7684\u601d\u60f3"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5f53\u5339\u914d\u6210\u529f\u6587\u672c\u4e32\u4e2d\u7684 she \u65f6\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u540e\u7eed\u4e00\u5b9a\u4f1a\u5339\u914d\u6210\u529f he"),(0,m.kt)("li",{parentName:"ol"},"she \u5bf9\u5e94\u4e86\u5b57\u5178\u6811\u4e2d\u7684\u8282\u70b9 P\uff0che \u5bf9\u5e94\u4e86\u5b57\u5178\u6811\u4e2d\u7684\u8282\u70b9Q"),(0,m.kt)("li",{parentName:"ol"},"P \u548c Q \u5c31\u662f\u7b49\u4ef7\u5339\u914d\u8282\u70b9\uff0c\u5982\u679c\u4ece P \u5f15\u51fa\u4e00\u6761\u8fb9\u6307\u5411 Q\uff0c\u5c31\u53ef\u4ee5\u52a0\u901f\u5339\u914d\u8fc7\u7a0b"),(0,m.kt)("li",{parentName:"ol"},"\u5728 P \u4e0b\u9762\u67e5\u627e\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u7b49\u4ef7\u4e8e\u5728 Q \u4e0b\u9762\u67e5\u627e\u8282\u70b9\u7684\u64cd\u4f5c"),(0,m.kt)("li",{parentName:"ol"},"\u8fd9\u6761\u7b49\u4ef7\u5173\u7cfb\u8fb9\uff0c\u901a\u5e38\u5728 AC \u81ea\u52a8\u673a\u4e0a\u53eb\u505a \u3010Fail \u6307\u9488\u3011\u7b49\u4ef7\u5339\u914d\u6307\u9488"),(0,m.kt)("li",{parentName:"ol"},"AC \u81ea\u52a8\u673a = Trie + Fail \u6307\u9488"),(0,m.kt)("li",{parentName:"ol"},"\u5b50\u8282\u70b9\u7684 Fail \u6307\u9488\u662f\u9700\u8981\u53c2\u7167\u7236\u8282\u70b9\u7684 Fail\u6307\u9488\u4fe1\u606f\u7684\uff0c\u6700\u7b80\u5355\u7684\u5efa\u7acb\u65b9\u5f0f\uff0c\u5c31\u662f\u91c7\u7528\u3010\u5c42\u5e8f\u904d\u5386\u3011"),(0,m.kt)("li",{parentName:"ol"},"\u6ca1\u505a\u4f18\u5316\u7684 AC \u81ea\u52a8\u673a\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a NFA\uff08\u975e\u786e\u5b9a\u578b\u6709\u7a77\u72b6\u6001\u81ea\u52a8\u673a\uff09"),(0,m.kt)("li",{parentName:"ol"},"\u901a\u4fd7\u7406\u89e3\uff1a\u6839\u636e\u5f53\u524d\u72b6\u6001 p\uff0c\u4ee5\u53ca\u8f93\u5165\u5b57\u7b26 c\uff0c\u65e0\u6cd5\u901a\u8fc7\u4e00\u6b65\u64cd\u4f5c\u786e\u5b9a\u72b6\u6001"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c\u4e8c\u79cd\u7406\u89e3\uff1a\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u4e0d\u4ee3\u8868\u552f\u4e00\u72b6\u6001\u3002")),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"AC \u81ea\u52a8\u673a\u4f18\u5316\uff1a"),"\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u601d\u60f3\uff0c\u4f7f\u72b6\u6001\u8f6c\u79fb\u65f6\u53ef\u4ee5\u4e00\u6b65\u8df3\u8f6c\u5230\u76ee\u6807\u72b6\u6001\u3002"),(0,m.kt)("p",null,"\u4f18\u5316\u4ee5\u540e\u7684 AC \u81ea\u52a8\u673a\uff0c\u66f4\u50cf DFA\uff08\u786e\u5b9a\u6027\u6709\u7a77\u72b6\u6001\u81ea\u52a8\u673a\uff09\u3002"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210127193634993",src:n(17178).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210127193826398",src:n(98658).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210217201415813",src:n(50703).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define BASE 26\n#define BEGIN_LETTER \'a\'\n\ntypedef struct Node {\n    int flag;\n    struct Node *next[BASE], *fail;\n} Node;\n\ntypedef struct Queue {\n    Node **data;\n    int head, tail, size;\n} Queue;\n\nQueue *init_queue(int n) {\n    Queue *q = (Queue *)calloc(sizeof(Queue), 1);\n    q->data = (Node **)malloc(sizeof(Node *) * n);\n    q->tail = q->head = 0;\n    return q;\n}\n\nNode *front(Queue *q) {\n    return q->data[q->head];\n}\n\nint empty(Queue *q) {\n    return q->head == q->tail;\n}\n\nvoid push(Queue *q, Node *node) {\n    q->data[q->tail++] = node;\n    return ;\n}\n\nvoid pop(Queue *q) {\n    if (empty(q)) return ;\n    q->head++;\n}\n\nvoid clear_queue(Queue *q) {\n    if (q == NULL) return ;\n    free(q->data);\n    free(q);\n    return ;\n}\n\nNode *getNewNode() {\n    Node *p = (Node *)calloc(sizeof(Node), 1);\n    return p;\n}\n\nint insert(Node *root, const char *str) {\n    int cnt = 0;\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - BEGIN_LETTER;\n        if (p->next[ind] == NULL) p->next[ind] = getNewNode(), ++cnt;\n        p = p->next[ind];\n    }\n    p->flag = 1;\n    return cnt;\n}\n\nvoid clear(Node *node) {\n    if (node == NULL) return ;\n    for (int i = 0; i < BASE; i++) {\n        clear(node->next[i]);\n    }\n    free(node);\n    return ;\n}\n\nvoid build_ac(Node *root, int n) {\n    Queue *q = init_queue(n + 10);\n    root->fail = NULL;\n    push(q, root);\n    while (!empty(q)) {\n        Node *now_node = front(q);\n        pop(q);\n        for (int i = 0; i < BASE; i++) {\n            if (now_node->next[i] == NULL) continue;\n            Node *p = now_node->fail;\n            while (p && p->next[i] == NULL) p = p->fail;\n            if (p == NULL) now_node->next[i]->fail = root;\n            else now_node->next[i]->fail = p->next[i];\n            push(q, now_node->next[i]);\n        }\n    }\n    return ;\n}\n\nint match(Node *root, const char *str) {\n    int cnt = 0;\n    Node *p = root;\n    for (int i = 0; str[i]; i++) {\n        int ind = str[i] - BEGIN_LETTER;\n        while (p && p->next[ind] == NULL) p = p->fail;\n        if (p == NULL) p = root;\n        else p = p->next[ind];\n        Node *q = p;\n        while (q) cnt += q->flag, q = q->fail;\n    }\n    return cnt;\n}\n\nint main() {\n    Node *root = getNewNode();\n    int n, cnt = 0;\n    char str[1000];\n    scanf("%d", &n);\n    for (int i = 0; i < n; i++) {\n        scanf("%s", str);\n        cnt += insert(root, str);\n    }\n    // build ac\n    build_ac(root, cnt);\n    scanf("%s", str);\n    // match ac\n    printf("match word cnt : %d\\n", match(root, str));\n    return 0;\n}\n')),(0,m.kt)("h2",{id:"72-\u9884\u4e60\u8d44\u6599\uff1a\u3010\u6570\u636e\u7ed3\u6784\u3011-\u5b57\u7b26\u4e32\u7edf\u8ba1"},"7.2. \u9884\u4e60\u8d44\u6599\uff1a\u3010\u6570\u636e\u7ed3\u6784\u3011> \u5b57\u7b26\u4e32\u7edf\u8ba1"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"AC \u81ea\u52a8\u673a\u88f8\u9898")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u89e3\u9898\u7684\u5173\u952e\uff0c\u5728\u4e8e\u5982\u4f55\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u8ba1\u6570\u91cf")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u4f7f\u7528\u5e7c\u513f\u56ed\u5fc5\u77e5\u5fc5\u4f1a\u7684\u6307\u9488\u6280\u5de7\u7ef4\u62a4\u7684")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"\u8239\u957f\u7ffb\u8f66\uff1a"),"\u9898\u76ee\u6570\u636e\u4e2d\u7ed9\u51fa\u7684\u5355\u8bcd\u4f1a\u6709\u91cd\u590d"))),(0,m.kt)("h3",{id:"721-\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6808"},"7.2.1. \u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6808"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 15.any_stack.h\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e09  2/28 10:49:10 2018\n ************************************************************************/\n\n#ifndef _15_ANY_STACK_H\n#define _15_ANY_STACK_H\n\n#include <stdlib.h>\n#include <string.h>\n\n#define STACK_OK 1\n#define STACK_ERROR 0\n\ntypedef struct Stack {\n    char *data;\n    int data_size;\n    int size, top;\n} Stack;\n\n#define init_stack(n, T) (__init_stack(n, sizeof(T)))\n#define push_stack(s, data) (__push_stack(s, (char *)(data)))\n#define top_stack(s, T) ((T *)(__top_stack(s)))\n\nStack *__init_stack(int n, int data_size) {\n    Stack *s = (Stack *)malloc(sizeof(Stack) * 1);\n    s->data = (char *)malloc(n * data_size);\n    s->data_size = data_size;\n    s->size = n;\n    s->top = -1;\n    return s;\n}\n\nint __push_stack(Stack *s, char *data) {\n    if (s->size - 1 == s->top) {\n        return STACK_ERROR;\n    }\n    s->top += 1;\n    memcpy(s->data + s->top * s->data_size, data, s->data_size);\n    return STACK_OK;\n}\n\nint empty_stack(Stack *s) {\n    return s->top == -1;\n}\n\nchar *__top_stack(Stack *s) {\n    if (empty_stack(s)) {\n        return NULL;\n    }\n    return s->data + s->top * s->data_size;\n}\n\nint pop_stack(Stack *s) {\n    if (empty_stack(s)) {\n        return STACK_ERROR;\n    }\n    s->top -= 1;\n    return STACK_OK;\n}\n\nvoid clear_stack(Stack *s) {\n    free(s->data);\n    free(s);\n    return ;\n}\n\n#endif\n")),(0,m.kt)("h3",{id:"722-\u4e8c\u53c9\u6811\u524d\u5e8f\u904d\u5386\uff08\u975e\u9012\u5f52\uff09"},"7.2.2. \u4e8c\u53c9\u6811\u524d\u5e8f\u904d\u5386\uff08\u975e\u9012\u5f52\uff09"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n   > File Name: 14.binary_non_recursive.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e09  2/28 10:26:37 2018\n ************************************************************************/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include "15.any_stack.h"\n\ntypedef struct Node {\n    int data;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode *getNewNode(int data) {\n    Node *p = (Node *)malloc(sizeof(Node) * 1);\n    p->data = data;\n    p->lchild = p->rchild=  NULL;\n    return p;\n}\n\nNode *init_binary_tree() {\n    Node *root = getNewNode(1);\n    root->lchild = getNewNode(3);\n    root->rchild = getNewNode(6);\n    root->lchild->rchild = getNewNode(9);\n    root->rchild->rchild = getNewNode(11);\n    root->rchild->lchild = getNewNode(14);\n    root->lchild->rchild->lchild = getNewNode(17);\n    return root;\n}\n\nvoid __pre_order(Node *root) {\n    // status = 0\n    if (root == NULL) return ; // status = 100\n    printf("%d\\n", root->data); // status = 1\n    __pre_order(root->lchild); // status = 2\n    __pre_order(root->rchild); // status = 3\n    return ; // status = 100\n}\n\ntypedef struct PreOrderArgs {\n    Node *root;\n    int status;\n} PreOrderArgs;\n\nPreOrderArgs *getNewArgs(Node *root) {\n    PreOrderArgs *p = (PreOrderArgs *)malloc(sizeof(PreOrderArgs) * 1);\n    p->root = root;\n    p->status = 0;\n    return p;\n}\n\nvoid pre_order(Node *root) {\n    Stack *s = init_stack(100, PreOrderArgs);\n    PreOrderArgs *temp_args = getNewArgs(root), *p_args;\n    push_stack(s, temp_args);\n    while (!empty_stack(s)) {\n        p_args = top_stack(s, PreOrderArgs);\n        switch (p_args->status) {\n            case 0: {\n                if (p_args->root == NULL) {\n                    p_args->status = 100;\n                } else {\n                    p_args->status = 1;\n                }\n            } break;\n            case 1: {\n                printf("%d\\n", p_args->root->data);\n                p_args->status = 2;\n            } break;\n            case 2: {\n                temp_args->root = p_args->root->lchild;\n                temp_args->status = 0;\n                push_stack(s, temp_args);\n                p_args->status = 3;\n            } break;\n            case 3: {\n                temp_args->root = p_args->root->rchild;\n                temp_args->status = 0;\n                push_stack(s, temp_args);\n                p_args->status = 100;\n            } break;\n            case 100: {\n                pop_stack(s);\n            } break;\n        }\n    }\n    free(temp_args);\n    clear_stack(s);\n    return ;\n}\n\n\n\nint main() {\n    Node *root = init_binary_tree();\n    pre_order(root);\n    __pre_order(root);\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"723-\u5feb\u901f\u6392\u5e8f\uff08\u975e\u9012\u5f52\uff09"},"7.2.3. \u5feb\u901f\u6392\u5e8f\uff08\u975e\u9012\u5f52\uff09"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MC(T, n) ((T *)malloc(sizeof(T) * n))\n\n#define init_stack(s, n, T) (__init_stack(s, n, sizeof(T)))\n#define push_stack(s, value) ({ \\\n    __typeof(value) __temp = (value); \\\n    __push_stack(s, (const char *)(&(__temp))); \\\n})\n\n#define empty_stack(s) (__empty_stack(s))\n#define pop_stack(s) (__pop_stack(s))\n#define top_stack(s, T) (*((T *)__top_stack(s)))\n#define clear_stack(s) (__clear_stack(s))\n#define swap(a, b) { \\\n    __typeof(a) __temp = (a); \\\n    (a) = (b); (b) = (__temp); \\\n}\n#define ERROR 0\n#define OK 1\n\ntypedef struct Stack {\n    char *data;\n    int top, size;\n    int value_size;\n} Stack;\n\nvoid __init_stack(Stack *s, int n, int value_size);\nint __push_stack(Stack *s, const char *value);\nint __empty_stack(Stack *s);\nint __pop_stack(Stack *s);\nchar *__top_stack(Stack *s);\nvoid __clear_stack(Stack *s);\n\ntypedef struct Node {\n    int val;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode *init(int val) {\n    Node *p = MC(Node, 1);\n    p->val = val;\n    p->lchild = p->rchild = NULL;\n    return p;\n}\n\ntypedef struct QuickSortArgs {\n    int *arr;\n    int l, r;\n    int x;\n    int status;\n} QuickSortArgs;\n\nint __quick_sort(int *arr, int l, int r) {\n    // 0 : if (r <= l) return ;\n    int x, y, z;\n    x = l, y = r, z = arr[l];\n    while (x < y) {\n        while (x < y && arr[y] >= z) --y;\n        if (x < y) arr[x++] = arr[y];\n        while (x < y && arr[x] <= z) ++x;\n        if (x < y) arr[y--] = arr[x];\n    }\n    arr[x] = z;\n    return x;\n    // 2: quick_sort(arr, l, x - 1);\n    // 3 : quick_sort(arr, x + 1, r);\n    // 4 : return ;\n}\n\nvoid init_quick_sort_args(QuickSortArgs *qsa, int *arr, int l, int r, int status) {\n    qsa->arr = arr;\n    qsa->l = l;\n    qsa->r = r;\n    qsa->status = 0;\n    return ;\n}\n\nvoid quick_sort(int *arr, int n) {\n    Stack *s = MC(Stack, 1);\n    init_stack(s, 1000, QuickSortArgs);\n    QuickSortArgs qsa;\n    init_quick_sort_args(&qsa, arr, 0, n - 1, 0);\n    push_stack(s, qsa);\n    while (!empty_stack(s)) {\n        QuickSortArgs *tqsa = &top_stack(s, QuickSortArgs);\n        switch (tqsa->status) {\n            case 0:\n                if (tqsa->r <= tqsa->l) {\n                    tqsa->status = 4;\n                } else {\n                    tqsa->status = 1;\n                }\n                break;\n            case 1:\n                tqsa->x = __quick_sort(tqsa->arr, tqsa->l, tqsa->r);\n                tqsa->status = 2;\n                break;\n            case 2:\n                init_quick_sort_args(&qsa, arr, tqsa->l, tqsa->x - 1, 0);\n                push_stack(s, qsa);\n                tqsa->status = 3;\n                break;\n            case 3:\n                init_quick_sort_args(&qsa, arr, tqsa->x + 1, tqsa->r, 0);\n                push_stack(s, qsa);\n                tqsa->status = 4;\n                break;\n            case 4:\n                pop_stack(s);\n                break;\n            default:\n                printf("ERROR\\n");\n                break;\n        }\n    }\n    return ;\n}\n\nint main() {\n    int arr[10] = {9, 7, 5, 4, 2 ,1 ,3, 10, 6, 8};\n    quick_sort(arr, 10);\n    for (int i = 0; i < 10; i++) {\n        printf("%d ", arr[i]);\n    }\n    printf("\\n");\n    return 0;\n}\nvoid __init_stack(Stack *s, int n, int value_size) {\n    s->data = (char *)malloc(value_size * n);\n    s->top = -1;\n    s->size = n;\n    s->value_size = value_size;\n    return ;\n}\n\nint __push_stack(Stack *s, const char *value) {\n    if (s->top == s->size - 1) {\n        return ERROR;\n    }\n    ++(s->top);\n    memcpy(s->data + s->top * s->value_size, value, s->value_size);\n    return OK;\n}\n\nint __empty_stack(Stack *s) {\n    return s->top == -1;\n}\n\nint __pop_stack(Stack *s) {\n    if (__empty_stack(s)) {\n        return ERROR;\n    }\n    --(s->top);\n    return OK;\n}\n\nchar *__top_stack(Stack *s) {\n    if (__empty_stack(s)) {\n        return NULL;\n    }\n    return s->data + s->top * s->value_size;\n}\n\nvoid __clear_stack(Stack *s) {\n    free(s->data);\n    free(s);\n    return ;\n}\n')),(0,m.kt)("h1",{id:"8-\u5e76\u67e5\u96c6"},"8. ==\u5e76\u67e5\u96c6=="),(0,m.kt)("p",null,"\u6839\u8282\u70b9\uff1a\u5168\u96c6"),(0,m.kt)("p",null,"\u5b50\u8282\u70b9\uff1a\u5b50\u96c6"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201018110356663",src:n(79680).Z})),(0,m.kt)("p",null,"\u6309\u5c3a\u5bf8(\u6b63\u89c4\u8bf4\u6cd5\u53eb\u505a\u79e9)\u8fdb\u884c\u5e73\u8861\uff0c\u6309\u79e9\u4f18\u5316"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201018110407696",src:n(68969).Z})),(0,m.kt)("p",null,"\u8f85\u4ee5\u8def\u5f84\u538b\u7f29\u540e\uff0c\u6811\u7ed3\u6784\u4f1a\u9ad8\u5ea6\u6241\u5e73\u5316\u3002"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201018110431340",src:n(42219).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201018110438419",src:n(82290).Z})),(0,m.kt)("p",null,"\u79bb\u6563\u5316--\u91cd\u6620\u5c04(map)"),(0,m.kt)("p",null,"\u6839\u8282\u70b9\u6709\u7279\u6b8a\u610f\u4e49\u7684\u5e76\u67e5\u96c6\uff0c\u5e26\u6743\u5e76\u67e5\u96c6"),(0,m.kt)("p",null,"\u7528\u5e76\u67e5\u96c6\u53bb\u7ef4\u62a4\u7f16\u53f7\uff0c\u4e00\u4e2a\u653e\u5728\u53e6\u4e00\u4e2a\u5efa\u7acb\u5173\u7cfb",(0,m.kt)("a",{parentName:"p",href:"http://oj.haizeix.com/problem/324"},"http://oj.haizeix.com/problem/324")),(0,m.kt)("p",null,"\u7528\u5e76\u67e5\u96c6\u53bb\u7ef4\u62a4\u6700\u8fd1\u7684\u4e00\u4e2a\u7a7a\u4f4d\u7f6e\uff0c",(0,m.kt)("a",{parentName:"p",href:"http://oj.haizeix.com/problem/323"},"http://oj.haizeix.com/problem/323")),(0,m.kt)("h3",{id:"804-quick-union"},"8.0.4. quick-union"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n\n#define swap(a, b) {\\\n    __typeof(a) __temp = a;\\\n    a = b; b = __temp;\\\n}\n\ntypedef struct UnionSet {\n    int *father, *size;\n    int n;\n} UnionSet;\n\nUnionSet *init(int n) {\n    UnionSet *u = (UnionSet *)malloc(sizeof(UnionSet));\n    u->father = (int *)malloc(sizeof(int) * (n + 1));\n    u->size = (int *)malloc(sizeof(int) * (n + 1));\n    u->n = n;\n    for (int i = 1; i <= n; i++) {\n        u->father[i] = i;\n        u->size[i] = 1;\n    }\n    return u;\n}\n\nint find(UnionSet *u, int x) {\n    return u->father[x] = (u->father[x] == x ? x : find(u, u->father[x]));\n}\n\nint merge(UnionSet *u, int a, int b) {\n    int fa = find(u, a), fb = find(u, b);\n    if (fa == fb) return 0;\n    //if (u->size[fa] < u->size[fb]) swap(fa, fb);\n    u->father[fb] = fa;\n    //u->size[fa] += u->size[fb];\n    return 1;\n}\n\nvoid clear(UnionSet *u) {\n    if (u == NULL) return ;\n    free(u->father);\n    free(u->size);\n    free(u);\n    return ;\n}\n\nint main() {\n    int n, m;\n    scanf("%d%d", &n, &m);\n    UnionSet *u = init(n);\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        scanf("%d%d%d", &a, &b, &c);\n        switch (a) {\n            case 1: merge(u, b, c); break;\n            case 2: printf("%s\\n", find(u, b) == find(u, c) ? "Yes" : "No"); break;\n        }\n    }\n    clear(u);\n    return 0;\n}\n\n')),(0,m.kt)("h3",{id:"805-hzoj-72-\u731c\u62f3cpp"},"8.0.5. HZOJ-72-\u731c\u62f3.cpp"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20201022132834261",src:n(52503).Z})),(0,m.kt)("p",null,"0:x\u4e0ey\u5e73\u624b"),(0,m.kt)("p",null,"1:x\u8f93\u7ed9y"),(0,m.kt)("p",null,"2:x\u8d62y"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n   > File Name: 72.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e09  8/21 20:47:24 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n#define MAX_N 10000\n\nstruct UnionSet {\n    int fa[MAX_N + 5], val[MAX_N + 5];\n    void init(int n) {\n        for (int i = 1; i <= n; i++) fa[i] = i; \n    }\n    int get(int x) {\n        if (x == fa[x]) return x;\n        int root = get(fa[x]);\n        val[x] += val[fa[x]];\n        val[x] %= 3;\n        return fa[x] = root;\n    }\n    void merge(int a, int b, int c) {\n        int aa = get(a), bb = get(b);\n        if (aa == bb) return ;\n        fa[aa] = bb;\n        val[aa] = (c + val[b] - val[a] + 3) % 3;\n        return ;\n    }\n};\n\nUnionSet u;\n\nvoid read(int &n, int &m) {\n    cin >> n >> m;\n    u.init(n);\n    return ;\n}\n\nint main() {\n    int n, m;\n    read(n, m);\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        if (a == 1) {\n            u.merge(b, c, 2);\n        } else {\n            if (u.get(b) != u.get(c)) {\n                cout << "Unknown" << endl;\n            } else {\n                switch ((u.val[b] - u.val[c] + 3) % 3) {\n                    case 0: cout << "Tie" << endl; break;\n                    case 1: cout << "Loss" << endl; break;\n                    case 2: cout << "Win" << endl; break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"806-hzoj-73-\u6e56\u6ccacpp"},"8.0.6. HZOJ-73-\u6e56\u6cca.cpp"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"}," \n/*************************************************************************\n   > File Name: 73.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u56db  8/22 14:19:28 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n#define MAX_N 1000\n#define MAX_M 1000000\n#define ind(i, j) ((i) * (m) + (j) + 1)\nchar g[MAX_N + 5][MAX_N + 5];\n\nstruct UnionSet {\n    int fa[MAX_M + 5];\n    void init(int n) {\n        for (int i = 0; i <= n; i++) fa[i] = i;\n    }\n    int get(int x) {\n        return (fa[x] = (x - fa[x] ? get(fa[x]) : x));\n    }\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nUnionSet u;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    u.init(n * m);\n    for (int i = 0; i < n; i++) {\n        cin >> g[i];\n        for (int j = 0; j < m; j++) {\n            if (g[i][j] == 'X') continue;\n            if (i && g[i - 1][j] == 'O') u.merge(ind(i, j), ind(i - 1, j));\n            if (j && g[i][j - 1] == 'O') u.merge(ind(i, j), ind(i, j - 1));\n            if (i == 0 || i == n - 1) u.merge(ind(i, j), 0);\n            if (j == 0 || j == m - 1) u.merge(ind(i, j), 0);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (g[i][j] == 'X') continue;\n            if (u.get(ind(i, j)) - u.get(0)) ans += 1;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,m.kt)("h3",{id:"807-\u7a0b\u5e8f\u81ea\u52a8\u5206\u6790"},"8.0.7. \u7a0b\u5e8f\u81ea\u52a8\u5206\u6790"),(0,m.kt)("p",null,"\u79bb\u6563\u505a\u6cd5\uff1a\u6839\u636e\u76f8\u7b49\u5efa\u7acb\u5e76\u67e5\u96c6\uff0c\u5224\u65ad\u4e0d\u7b49"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre"},'#define MAX_N 1000000\nstruct UnionSet {\n    int fa[(MAX_N << 1) + 5];\n    void init(int n) {\n        while (n--) fa[n + 1] = n + 1;\n    }\n    int get(int x) {\n        return (fa[x] = (x - fa[x] ? get(fa[x]) : x));\n    }\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nUnionSet u;\n\nstruct Data {\n    int e, i, j;\n} arr[MAX_N + 5];\n\nvoid solve() {\n    map<int, int> ind;\n    int cnt = 0;\n    int n;\n    cin >> n;\n    u.init(2 * n);\n    for (int i = 0; i < n; i++) {\n        cin >> arr[i].i >> arr[i].j >> arr[i].e;\n        if (ind.find(arr[i].i) == ind.end()) ind[arr[i].i] = (++cnt);\n        if (ind.find(arr[i].j) == ind.end()) ind[arr[i].j] = (++cnt);\n        arr[i].i = ind[arr[i].i];\n        arr[i].j = ind[arr[i].j];\n    }\n    for (int i = 0; i < n; i++) {\n        if (arr[i].e == 0) continue;\n        u.merge(arr[i].i, arr[i].j);\n    }\n    int flag = 1;\n    for (int i = 0; i < n && flag; i++) {\n        if (arr[i].e == 1) continue;\n        flag = (u.get(arr[i].i) != u.get(arr[i].j));\n    }\n    cout << (flag ? "YES" : "NO") << endl;\n    return ;\n}\n\nint main() {\n    int tcase;\n    cin >> tcase;\n    while (tcase--) solve();\n    return 0;\n}\n')),(0,m.kt)("h3",{id:"808-supermarket"},"8.0.8. Supermarket"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"}," \u8d85\u5e02\u91cc\u6709NN\u4e2a\u5546\u54c1. \u7b2cii\u4e2a\u5546\u54c1\u5fc5\u987b\u5728\u4fdd\u8d28\u671f(\u7b2cdidi\u5929)\u4e4b\u524d\u5356\u6389, \u82e5\u5356\u6389\u53ef\u8ba9\u8d85\u5e02\u83b7\u5f97pipi\u7684\u5229\u6da6.\u6bcf\u5929\u53ea\u80fd\u5356\u4e00\u4e2a\u5546\u54c1.\u73b0\u5728\u4f60\u8981\u8ba9\u8d85\u5e02\u83b7\u5f97\u6700\u5927\u7684\u5229\u6da6.")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <queue>\n#include <stack>\n#include <map>\nusing namespace std;\n#define MAX_N 10000\n\nstruct Data {\n    int p, d;\n} arr[MAX_N + 5];\n \nstruct UnionSet {\n    int fa[MAX_N + 5];\n    void init(int n) {\n        for (int i = 0; i <= n; ++i) fa[i] = i;\n    }\n    int get(int x) {\n        return (fa[x] = (x - fa[x] ? get(fa[x]) : x));\n    }\n    //\u6839\u8282\u70b9\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u524d\u9762\u7b2c\u4e00\u4e2a\u7a7a\u4f4d\u7f6e\n    //\u524d\u9762\u505a\u513f\u5b50\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nbool cmp(const Data &a, const Data &b) {\n    return a.p > b.p;\n}\n\nUnionSet u;\n\nint solve(int n) {\n    for (int i = 0; i < n; ++i) {\n        cin >> arr[i].p >> arr[i].d;\n    }\n    sort(arr, arr + n, cmp);\n    u.init(MAX_N);\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n        if (u.get(arr[i].d) == 0) continue;\n        ans += arr[i].p;\n        int day = u.get(arr[i].d);\n        //\u8ba9day\u4f5c\u4e3aday-1\u7684\u5b50\u96c6\uff0cday\u88ab\u5360\u7528\n        u.merge(day, day - 1);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\nint main() {\n    int n;\n    while (cin >> n) solve(n);\n    return 0;\n}\n\n")),(0,m.kt)("h3",{id:"809-\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4"},"8.0.9. \u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"}," \u6709\u4e00\u4e2a\u5212\u5206\u6210NN\u5217\u7684\u661f\u9645\u6218\u573a\uff0c\u5404\u5217\u4f9d\u6b21\u7f16\u53f7\u4e3a1,2,\u2026,N1,2,\u2026,N\u3002\u6709NN\u8258\u6218\u8230\uff0c\u4e5f\u4f9d\u6b21\u7f16\u53f7\u4e3a1,2,\u2026,N1,2,\u2026,N, \u5176\u4e2d\u7b2cii\u53f7\u6218\u8230\u5904\u4e8e\u7b2cii\u5217\u3002"),(0,m.kt)("p",{parentName:"blockquote"}," \u6709M\u6761\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u683c\u5f0f\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u4e4b\u4e00\uff1a"),(0,m.kt)("p",{parentName:"blockquote"}," M i j\uff0c\u8868\u793a\u7b2cii\u53f7\u6218\u8230\u6240\u5728\u5217\u7684\u5168\u90e8\u6218\u8230\u4fdd\u6301\u539f\u6709\u987a\u5e8f\uff0c\u63a5\u5728\u7b2cjj\u53f7\u6218\u8230\u6240\u5728\u5217\u7684\u5c3e\u90e8\u3002"),(0,m.kt)("p",{parentName:"blockquote"}," C i j\uff0c\u8868\u793a\u8be2\u95ee\u7b2cii\u53f7\u6218\u8230\u4e0e\u7b2cjj\u53f7\u6218\u8230\u5f53\u524d\u662f\u5426\u5904\u4e8e\u540c\u4e00\u5217\u4e2d\uff0c\u5982\u679c\u5728\u540c\u5217\u4e2d\uff0c\u4ed6\u4eec\u4e4b\u95f4\u95f4\u9694\u4e86\u591a\u5c11\u8258\u6218\u8230\u3002")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n    > File Name: oj-324.cpp\n    > Author: wei \n    > Mail: 1931248856@qq.com\n    > Created Time: 2020\u5e7410\u670821\u65e5 \u661f\u671f\u4e09 17\u65f653\u520612\u79d2\n ************************************************************************/\n\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <queue>\n#include <stack>\n#include <map>\nusing namespace std;\n#define MAX_N 500000\n\nstruct Unionset {\n    int fa[MAX_N + 5], size[MAX_N + 5], val[MAX_N + 5];\n    void init(int n) {\n        for (int i = 1; i <= n; ++i) {\n            fa[i] = i;\n            size[i] = 1;\n            val[i] = 0;\n        }\n        return ;\n    }\n    int get(int x) {\n        if (x == fa[x]) return x;\n        int root = get(fa[x]);\n        val[x] += val[fa[x]];\n        return fa[x] = root;\n    }\n    void merge(int a, int b) {\n        int aa = get(a), bb = get(b);\n        if (aa == bb) return ;\n        fa[aa] = bb;\n        val[aa] = size[bb];\n        size[bb] += size[aa];\n        return ;\n    }\n};\n\nUnionset u;\n\nint main() {\n    int n;\n    scanf("%d", &n);\n    u.init(n);\n    char str[10];\n    for (int i = 0; i < n; ++i) {\n        int a, b;\n        scanf("%s%d%d", str, &a, &b);\n        switch (str[0]) {\n            case \'M\' : u.merge(a, b); break;\n            case \'C\' : {\n                if (u.get(a) != u.get(b)) {\n                    printf("-1\\n");\n                } else {\n                    printf("%d\\n", abs(u.val[a] - u.val[b]) - 1);\n                }\n            } break;\n        }\n    }\n\n    return 0;\n}\n\n')),(0,m.kt)("h3",{id:"8010-hzoj-325-\u4ee3\u7801\u6f14\u793a"},"8.0.10. HZOJ-325-\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210131134715524",src:n(46422).Z})),(0,m.kt)("p",null,"a"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\nusing namespace std;\n#define MAX_N 5000\n\nstruct Data {\n    int l, r;\n    string s;\n} arr[MAX_N + 5];\n\nset<int> ind_s;\nmap<int ,int> ind;\nint cnt = 0;\n\nstruct UnionSet {\n    int father[MAX_N << 1 + 5], val[MAX_N + 5];\n    void init(int n) {\n        for (int i = 1; i <= n; ++i) {\n            father[i] = i;\n            val[i] = 0;\n        }\n        return ;\n    }\n    \n    int get(int x) {\n        if (father[x] == x) return x;\n        int root = get(father[x]);\n        val[x] += val[father[x]];\n        val[x] %= 2;\n        return father[x] = root;\n    }\n    \n    int merge(int a, int b, int c) {\n        int fa = get(a), fb = get(b);\n        if (fa == fb) {\n            return (val[a] - val[b] - c) % 2 == 0;\n        }\n        father[fa] = father[fb];\n        val[fa] = (c + val[b] - val[a] + 2) % 2;\n        return 1;\n    }\n};\n\nUnionSet u;\n\nint main() {\n    int l, q;\n    cin >> l >> q;\n    for (int i = 0; i < q; ++i) {\n        cin >> arr[i].l >> arr[i].r >> arr[i].s;\n        arr[i].r += 1;\n        ind_s.insert(arr[i].l);\n        ind_s.insert(arr[i].r);\n    }\n\n    for (auto cur : ind_s) {\n        ind[cur] = ++cnt;\n    }\n\n    u.init(cnt);\n    for (int i = 0; i < q; ++i) {\n        arr[i].l = ind[arr[i].l];\n        arr[i].r = ind[arr[i].r];\n        if (u.merge(arr[i].l, arr[i].r, arr[i].s == "odd")) continue;\n        cout << i << endl;\n        return 0;\n    }\n    cout << q << endl;\n    return 0;\n}\n\n')),(0,m.kt)("h3",{id:"8011-hzoj-326-\u98df\u7269\u94fe"},"8.0.11. HZOJ-326-\u98df\u7269\u94fe"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210131145149668",src:n(83276).Z})),(0,m.kt)("p",null,"a"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"using namespace std;\n#define MAX_N 50000\n\nstruct UnionSet {\n    int fa[MAX_N + 5], val[MAX_N + 5], n;\n    void init(int n) {\n        this->n = n;\n        for (int i = 1; i <= n; i++) {\n            fa[i] = i;\n            val[i] = 0;\n        }\n        return ;\n    }\n    int get(int x) {\n        if (fa[x] == x) return x;\n        int ret = get(fa[x]);\n        val[x] += val[fa[x]];\n        val[x] %= 3;\n        return fa[x] = ret;\n    }\n    int merge(int a, int b, int c) {\n        if (a > n || b > n) return 0;\n        int aa = get(a), bb = get(b);\n        if (aa == bb) {\n            return (val[a] - val[b] - c) % 3 == 0;\n        }\n        fa[aa] = bb;\n        val[aa] = ((c - val[a] + val[b]) % 3 + 3) % 3;\n        return 1;\n    }\n} u;\n\nint main() {\n    int n, m, a, b, c, ans = 0;\n    cin >> n >> m;\n    u.init(n);\n    while (m--) {\n        cin >> c >> a >> b;\n        c -= 1;\n        if (!u.merge(a, b, c)) ans += 1;\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,m.kt)("h3",{id:"8012-hzoj-327-\u5173\u62bc\u7f6a\u72afcpp"},"8.0.12. HZOJ-327-\u5173\u62bc\u7f6a\u72af.cpp"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"}," \n/*************************************************************************\n   > File Name: 327.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u65e5 11/24 14:36:55 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <queue>\nusing namespace std;\n#define MAX_N 20000\n#define MAX_M 100000\n\nstruct UnionSet {\n    int fa[MAX_N + 5], val[MAX_N + 5];\n    void init(int n) {\n        for (int i = 1; i <= n; i++) fa[i] = i, val[i] = 0;\n    }\n    int get(int x) {\n        if (x == fa[x]) return x;\n        int root = get(fa[x]);\n        val[x] += val[fa[x]];\n        val[x] %= 2;\n        return fa[x] = root;\n    }\n    bool merge(int a, int b) {\n        int aa = get(a), bb = get(b);\n        if (aa == bb) {\n            return (val[a] + val[b]) % 2;\n        }\n        fa[aa] = bb;\n        val[aa] = (3 + val[b] - val[a]) % 2;\n        return true;\n    }\n};\n\nstruct Data {\n    int i, j, c;\n} arr[MAX_M + 5];\n\nUnionSet u;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    u.init(n);\n    for (int i = 0; i < m; i++) {\n        cin >> arr[i].i >> arr[i].j >> arr[i].c;\n    }\n    sort(arr, arr + m, [](const Data &a, const Data &b) {\n        return a.c > b.c;\n    });\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (!u.merge(arr[i].i, arr[i].j)) {\n            ans = arr[i].c;\n            break;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n")),(0,m.kt)("h3",{id:"8013-128-\u6700\u957f\u8fde\u7eed\u5e8f\u5217"},"8.0.13. ",(0,m.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/longest-consecutive-sequence/"},"128. \u6700\u957f\u8fde\u7eed\u5e8f\u5217")),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4 ",(0,m.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u627e\u51fa\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\uff08\u4e0d\u8981\u6c42\u5e8f\u5217\u5143\u7d20\u5728\u539f\u6570\u7ec4\u4e2d\u8fde\u7eed\uff09\u7684\u957f\u5ea6")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 128.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u65e5 11/24 18:46:05 2019\n ************************************************************************/\n\nclass UnionSet {\npublic :\n    vector<int> fa, size;\n    void init(int n) {\n        fa.clear();\n        for (int i = 0; i <= n; i++) {\n            fa.push_back(i);\n            size.push_back(1);\n        }\n        return ;\n    }\n    int get(int x) {\n        return (fa[x] = (fa[x] == x ? x : get(fa[x])));\n    }\n    void merge(int a, int b) {\n        int aa = get(a), bb = get(b);\n        if (aa == bb) return ;\n        fa[aa] = bb;\n        size[bb] += size[aa];\n        return ;\n    }\n};\n\nclass Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n        u.init(nums.size());\n        unordered_map<int, int> ht;\n        for (int i = 0; i < nums.size(); i++) {\n            int k = nums[i];\n            if (ht.find(k) != ht.end()) continue;\n            if (ht.find(k - 1) != ht.end()) {\n                u.merge(i, ht[k - 1]);\n            }\n            if (ht.find(k + 1) != ht.end()) {\n                u.merge(i, ht[k + 1]);\n            }\n            ht[k] = i;\n        }\n        int ans = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            ans = max(ans, u.size[i]);\n        }\n        return ans;\n    }\n    UnionSet u;\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution\n{\n    public:\n        //AC - 24ms - bottom-up method;\n        int longestConsecutive(vector<int>& nums) \n        {\n            int maxCount = 0, lCount = 0, rCount = 0;\n            unordered_map<int, int> count_map;\n            for(int i = 0; i < nums.size(); ++i)\n            {\n                if(!count_map[nums[i]])\n                {\n                    int lCount = count_map[nums[i]-1];\n                    int rCount = count_map[nums[i]+1];\n                    int sum = lCount+rCount+1;\n                    count_map[nums[i]] = count_map[nums[i]-lCount] = count_map[nums[i]+rCount] = sum;\n                    maxCount = max(maxCount, sum);\n                }\n            }\n            return maxCount;\n        }\n\n        //AC - 20ms - blood spreading into two directions;\n        int longestConsecutive(vector<int>& nums)\n        {\n            unordered_set<int> set(nums.begin(), nums.end());\n            int ret = 1;\n            for(auto &n: nums)\n            {\n                if(!set.count(n)) continue;\n                set.erase(n);\n                int pre=n-1, next=n+1;\n                while(set.count(pre)) set.erase(pre--);\n                while(set.count(next)) set.erase(next++);\n                ret = max(ret, next-pre-1);\n            }\n            return ret;\n        }\n};\n\n")),(0,m.kt)("h3",{id:"8014-130-\u88ab\u56f4\u7ed5\u7684\u533a\u57df"},"8.0.14. ",(0,m.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/surrounded-regions/"},"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"\nclass Solution {\npublic:\n    int dir[4][2] = {0,1 , 1, 0, 0, -1, -1, 0};\n    struct node {\n        int x, y;\n    };\n    void bfs(int sx, int sy, vector<vector<int>> &check, vector<vector<char>> &board) {\n                int n = board.size(), m = board[0].size();\n                queue<node> que;\n                que.push((node){sx, sy});\n                check[sx][sy] = 1;\n                while (!que.empty()) {\n                    node temp = que.front();\n                    que.pop();\n                    for (int i = 0; i < 4; ++i) {\n                        int x = temp.x + dir[i][0];\n                        int y = temp.y + dir[i][1];\n                        if (x < 0 || y < 0 || x >= n || y >= m || check[x][y] || board[x][y] == 'X') continue;\n                        check[x][y] = 1;\n                        que.push((node){x, y});\n                    }     \n                }\n    }\n    void solve(vector<vector<char>>& board) {\n        int n = board.size();\n        if (n == 0) return ;\n        int m = board[0].size();\n        vector<vector<int>> check(n, vector<int>(m, 0));\n        for (int i  = 0; i < m; ++i) {\n            if (board[0][i] == 'X' || check[0][i]) continue;\n            bfs(0, i, check, board);\n        }\n        for (int i  = 0; i < m; ++i) {\n            if (board[n - 1][i] == 'X' || check[n - 1][i]) continue;\n            bfs(n - 1, i, check, board);\n        }\n        for (int i  = 1; i < n - 1; ++i) {\n            if (board[i][0] == 'X' || check[i][0]) continue;\n            bfs(i,0, check, board);\n        }\n        for (int i  = 1; i < n - 1; ++i) {\n            if (board[i][m - 1] == 'X' || check[i][m - 1]) continue;\n            bfs(i,m - 1, check, board);\n        }\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (check[i][j]) board[i][j] = 'O';\n                else board[i][j] = 'X';\n            }\n        }\n        return ;\n\n    }\n")),(0,m.kt)("h1",{id:"9"},"9."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 130.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u65e5 11/24 19:46:48 2019\n ************************************************************************/\n\nclass UnionSet {\npublic:\n    vector<int> fa;\n    void init(int n) {\n        fa.clear();\n        for (int i = 0; i <= n; i++) fa.push_back(i);\n    }\n    int get(int x) {\n        return (fa[x] = (x == fa[x] ? x : get(fa[x])));\n    }\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nclass Solution {\npublic:\n    void solve(vector<vector<char>>& board) {\n        if (board.size() == 0) return ;\n        if (board[0].size() == 0) return ;\n        n = board.size();\n        m = board[0].size();\n        u.init(n * m);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (board[i][j] == 'X') continue;\n                if (i && board[i - 1][j] == 'O')\n                    u.merge(ind(i, j), ind(i - 1, j));\n                if (j && board[i][j - 1] == 'O')\n                    u.merge(ind(i, j), ind(i, j - 1));\n                if (i == 0 || i + 1 == n)\n                    u.merge(ind(i, j), 0);\n                if (j == 0 || j + 1 == m)\n                    u.merge(ind(i, j), 0);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (board[i][j] == 'X') continue;\n                if (u.get(ind(i, j)) == u.get(0)) continue;\n                board[i][j] = 'X';\n            }\n        }\n        return ;\n    }\n    int ind(int i, int j) {\n        return i * m + j + 1;\n    }\n    int n, m;\n    UnionSet u;\n};\n")),(0,m.kt)("h3",{id:"9015-leetcode-200\u5c9b\u5c7f\u6570\u91cf"},"9.0.15. Leetcode-200",(0,m.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/number-of-islands/description/"},"\u5c9b\u5c7f\u6570\u91cf")),(0,m.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u7531 ",(0,m.kt)("inlineCode",{parentName:"p"},"'1'"),"\uff08\u9646\u5730\uff09\u548c ",(0,m.kt)("inlineCode",{parentName:"p"},"'0'"),"\uff08\u6c34\uff09\u7ec4\u6210\u7684\u7684\u4e8c\u7ef4\u7f51\u683c\uff0c\u8bf7\u4f60\u8ba1\u7b97\u7f51\u683c\u4e2d\u5c9b\u5c7f\u7684\u6570\u91cf\u3002"),(0,m.kt)("p",null,"\u5c9b\u5c7f\u603b\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u6bcf\u5ea7\u5c9b\u5c7f\u53ea\u80fd\u7531\u6c34\u5e73\u65b9\u5411\u548c/\u6216\u7ad6\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u5f62\u6210\u3002"),(0,m.kt)("p",null,"\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\u8be5\u7f51\u683c\u7684\u56db\u6761\u8fb9\u5747\u88ab\u6c34\u5305\u56f4\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'\u8f93\u5165\uff1agrid = [\n  ["1","1","1","1","0"],\n  ["1","1","0","1","0"],\n  ["1","1","0","0","0"],\n  ["0","0","0","0","0"]\n]\n\u8f93\u51fa\uff1a1\n')),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 200.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u56db  5/23 19:08:07 2019\n ************************************************************************/\n\n#define MC(T, n) (T *)malloc(sizeof(T) * (n))\n#define CC(T, n) (T *)calloc(sizeof(T), (n))\n\ntypedef struct UnionSet {\n    int *fa;\n    int n;\n} UnionSet;\n\nUnionSet *init(int n) {\n    UnionSet *u = MC(UnionSet, 1);\n    u->fa = MC(int, n + 1);\n    u->n = n;\n    for (int i = 1; i <= n; i++) u->fa[i] = i;\n    return u;\n}\n\nvoid clear(UnionSet *u) {\n    if (u == NULL) return ;\n    free(u->fa);\n    free(u);\n    return ;\n}\n\nint get(UnionSet *u, int x) {\n    if (u->fa[x] == x) return x;\n    return u->fa[x] = get(u, u->fa[x]);\n}\n\nvoid merge(UnionSet *u, int a, int b) {\n    u->fa[get(u, a)] = get(u, b);\n}\n\nint numIslands(char** grid, int n, int *M) {\n    if (n == 0) return 0;\n    int m = M[0];\n    #define ind(i, j) ((i) * (m) + (j) + 1)\n    UnionSet *u = init(n * m);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (grid[i][j] == '0') continue;\n            if (i - 1 >= 0 && grid[i - 1][j] == '1')\n                merge(u, ind(i, j), ind(i - 1, j));\n            if (j - 1 >= 0 && grid[i][j - 1] == '1')\n                merge(u, ind(i, j), ind(i, j - 1));\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (grid[i][j] == '0') continue;\n            ans += (get(u, ind(i, j)) == ind(i, j));\n        }\n    }\n    clear(u);\n    return ans;\n}\n")),(0,m.kt)("h3",{id:"9016-lc-547"},"9.0.16. LC-547"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class UnionSet {\npublic:\n    vector<int> fa;\n    void init(int n) {\n        fa.clear();\n        for (int i = 0; i <= n; i++) fa.push_back(i);\n    }\n    int get(int x) {\n        return (fa[x] = (x == fa[x] ? x : get(fa[x])));\n    }\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nclass Solution {\npublic:\n    int findCircleNum(vector<vector<int>>& M) {\n        int n = M.size();\n        u.init(n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (M[i][j] == 0) continue;\n                u.merge(i, j);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) ans += (u.get(i) == i);\n        return ans;\n    }\n    UnionSet u;\n};\n")),(0,m.kt)("h3",{id:"9017-leetcode-684"},"9.0.17. Leetcode-684"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class UnionSet {\npublic:\n    vector<int> fa;\n    void init(int n) {\n        fa.clear();\n        for (int i = 0; i <= n; i++) fa.push_back(i);\n    }\n    int get(int x) {\n        return (fa[x] = (x == fa[x] ? x : get(fa[x])));\n    }\n    void merge(int a, int b) {\n        fa[get(a)] = get(b);\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n = edges.size();\n        u.init(n);\n        vector<int> ret;\n        for (int i = 0; i < n; i++) {\n            vector<int> &e = edges[i];\n            if (u.get(e[0]) == u.get(e[1])) {\n                ret = e;\n                break;\n            }\n            u.merge(e[0], e[1]);\n        }\n        return ret;\n    }\n    UnionSet u;\n};\n")),(0,m.kt)("h3",{id:"9018-685-\u5197\u4f59\u8fde\u63a5-ii"},"9.0.18. ",(0,m.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/redundant-connection-ii/"},"685. \u5197\u4f59\u8fde\u63a5 II")),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("inlineCode",{parentName:"li"},"\u6709\u73af")," \uff1a\u6784\u6210\u73af\u5f62\u6570\u5b571\u8fde\u52302,2\u8fde\u52303,3\u8fde\u52301\u5c31\u662f\u4e2a\u73af"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("inlineCode",{parentName:"li"},"\u51b2\u7a81 "),"\uff1a\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u7236\u8282\u70b9")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u6709\u73af\u65e0\u51b2\u7a81 [","[1,2]",",","[2,3]",",","[3,1]","]"),(0,m.kt)("li",{parentName:"ul"},"\u6709\u73af\u6709\u51b2\u7a81 [","[1,2]",",","[2,3]",",","[3,1]",",","[4,2]","]"),(0,m.kt)("li",{parentName:"ul"},"\u65e0\u73af\u6709\u51b2\u7a81 [","[1,2]",",","[1,3]",",","[2,3]","]")),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u6709\u6839\u6811\u6307\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6709\u5411\u56fe\u3002\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u90fd\u662f\u8be5\u6839\u8282\u70b9\u7684\u540e\u7ee7\u3002\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u9664\u4e86\u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\u3002"),(0,m.kt)("p",{parentName:"blockquote"},"\u8f93\u5165\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8be5\u56fe\u7531\u4e00\u4e2a\u6709\u7740N\u4e2a\u8282\u70b9 (\u8282\u70b9\u503c\u4e0d\u91cd\u590d1, 2, ..., N) \u7684\u6811\u53ca\u4e00\u6761\u9644\u52a0\u7684\u8fb9\u6784\u6210\u3002\u9644\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5305\u542b\u57281\u5230N\u4e2d\u95f4\uff0c\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002"),(0,m.kt)("p",{parentName:"blockquote"},"\u7ed3\u679c\u56fe\u662f\u4e00\u4e2a\u4ee5\u8fb9\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6bcf\u4e00\u4e2a\u8fb9 \u7684\u5143\u7d20\u662f\u4e00\u5bf9 ","[u, v]","\uff0c\u7528\u4ee5\u8868\u793a\u6709\u5411\u56fe\u4e2d\u8fde\u63a5\u9876\u70b9 u \u548c\u9876\u70b9 v \u7684\u8fb9\uff0c\u5176\u4e2d u \u662f v \u7684\u4e00\u4e2a\u7236\u8282\u70b9")),(0,m.kt)("p",null,"\u8be5\u56fe\u7531\u4e00\u4e2a\u6709\u7740 N \u4e2a\u8282\u70b9 (\u8282\u70b9\u503c\u4e0d\u91cd\u590d 1, 2, ..., N) \u7684\u6811\u53ca\u4e00\u6761\u9644\u52a0\u7684\u8fb9\u6784\u6210\u3002\u9644\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5305\u542b\u5728 1 \u5230 N \u4e2d\u95f4\uff0c\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002"),(0,m.kt)("p",null,"\u8fd9\u8bf4\u660e\u9898\u76ee\u4e2d\u7684\u56fe\u539f\u672c\u662f\u662f\u4e00\u68f5\u6811\uff0c\u53ea\u4e0d\u8fc7\u5728\u4e0d\u589e\u52a0\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u591a\u52a0\u4e86\u4e00\u6761\u8fb9\uff01"),(0,m.kt)("p",null,"\u8fd8\u6709 \u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u6700\u540e\u51fa\u73b0\u5728\u7ed9\u5b9a\u4e8c\u7ef4\u6570\u7ec4\u7684\u7b54\u6848\u3002\u8fd9\u8bf4\u660e\u5728\u4e24\u5929\u8fb9\u90fd\u53ef\u4ee5\u5220\u9664\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u5220\u987a\u5e8f\u9760\u540e\u7684\uff01"),(0,m.kt)("p",null,"\u90a3\u4e48\u6709\u5982\u4e0b\u4e09\u79cd\u60c5\u51b5\uff0c\u524d\u4e24\u79cd\u60c5\u51b5\u662f\u51fa\u73b0\u5165\u5ea6\u4e3a 2 \u7684\u70b9\uff0c\u5982\u56fe\uff1a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"685.\u5197\u4f59\u8fde\u63a5II1.png",src:n(23219).Z})),(0,m.kt)("p",null,"\u4e14\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a 2\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u770b\u51fa\u5ea6\u5462\uff0c\u51fa\u5ea6\u6ca1\u6709\u610f\u4e49\uff0c\u4e00\u9897\u6811\u4e2d\u968f\u4fbf\u4e00\u4e2a\u7236\u8282\u70b9\u5c31\u6709\u591a\u4e2a\u51fa\u5ea6\u3002"),(0,m.kt)("p",null,"\u7b2c\u4e09\u79cd\u60c5\u51b5\u662f\u6ca1\u6709\u5165\u5ea6\u4e3a 2 \u7684\u70b9\uff0c\u90a3\u4e48\u56fe\u4e2d\u4e00\u5b9a\u51fa\u73b0\u4e86\u6709\u5411\u73af\uff08\u6ce8\u610f\u8fd9\u91cc\u5f3a\u8c03\u662f\u6709\u5411\u73af\uff01\uff09"),(0,m.kt)("p",null,"\u5982\u56fe\uff1a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"685.\u5197\u4f59\u8fde\u63a5II2.png",src:n(69792).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\nprivate:\n    static const int N = 1010; // \u5982\u9898\uff1a\u4e8c\u7ef4\u6570\u7ec4\u5927\u5c0f\u7684\u57283\u52301000\u8303\u56f4\u5185\n    int father[N];\n    int n; // \u8fb9\u7684\u6570\u91cf\n    // \u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    void init() {\n        for (int i = 1; i <= n; ++i) {\n            father[i] = i;\n        }\n    }\n    // \u5e76\u67e5\u96c6\u91cc\u5bfb\u6839\u7684\u8fc7\u7a0b\n    int find(int u) {\n        return u == father[u] ? u : father[u] = find(father[u]);\n    }\n    // \u5c06v->u \u8fd9\u6761\u8fb9\u52a0\u5165\u5e76\u67e5\u96c6\n    void join(int u, int v) {\n        u = find(u);\n        v = find(v);\n        if (u == v) return ;\n        father[v] = u;\n    }\n    // \u5224\u65ad u \u548c v\u662f\u5426\u627e\u5230\u540c\u4e00\u4e2a\u6839\n    bool same(int u, int v) {\n        u = find(u);\n        v = find(v);\n        return u == v;\n    }\n    // \u5728\u6709\u5411\u56fe\u91cc\u627e\u5230\u5220\u9664\u7684\u90a3\u6761\u8fb9\uff0c\u4f7f\u5176\u53d8\u6210\u6811\n    vector<int> getRemoveEdge(const vector<vector<int>>& edges) {\n        init(); // \u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        for (int i = 0; i < n; i++) { // \u904d\u5386\u6240\u6709\u7684\u8fb9\n            if (same(edges[i][0], edges[i][1])) { // \u6784\u6210\u6709\u5411\u73af\u4e86\uff0c\u5c31\u662f\u8981\u5220\u9664\u7684\u8fb9\n                return edges[i];\n            }\n            join(edges[i][0], edges[i][1]);\n        }\n        return {};\n    }\n\n    // \u5220\u4e00\u6761\u8fb9\u4e4b\u540e\u5224\u65ad\u662f\u4e0d\u662f\u6811\n    bool isTreeAfterRemoveEdge(const vector<vector<int>>& edges, int deleteEdge) {\n        init(); // \u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        for (int i = 0; i < n; i++) {\n            if (i == deleteEdge) continue;\n            if (same(edges[i][0], edges[i][1])) { // \u6784\u6210\u6709\u5411\u73af\u4e86\uff0c\u4e00\u5b9a\u4e0d\u662f\u6811\n                return false;\n            }\n            join(edges[i][0], edges[i][1]);\n        }\n        return true;\n    }\npublic:\n\n    vector<int> findRedundantDirectedConnection(vector<vector<int>>& edges) {\n        int inDegree[N] = {0}; // \u8bb0\u5f55\u8282\u70b9\u5165\u5ea6\n        n = edges.size(); // \u8fb9\u7684\u6570\u91cf\n        for (int i = 0; i < n; i++) {\n            inDegree[edges[i][1]]++; // \u7edf\u8ba1\u5165\u5ea6\n        }\n        vector<int> vec; // \u8bb0\u5f55\u5165\u5ea6\u4e3a2\u7684\u8fb9\uff08\u5982\u679c\u6709\u7684\u8bdd\u5c31\u4e24\u6761\u8fb9\uff09\n        // \u627e\u5165\u5ea6\u4e3a2\u7684\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u8fb9\uff0c\u6ce8\u610f\u8981\u5012\u53d9\uff0c\u56e0\u4e3a\u4f18\u5148\u8fd4\u56de\u6700\u540e\u51fa\u73b0\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u7b54\u6848\n        for (int i = n - 1; i >= 0; i--) {\n            if (inDegree[edges[i][1]] == 2) {\n                vec.push_back(i);\n            }\n        }\n        // \u5904\u7406\u56fe\u4e2d\u60c5\u51b51 \u548c \u60c5\u51b52\n        // \u5982\u679c\u6709\u5165\u5ea6\u4e3a2\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u4e24\u6761\u8fb9\u91cc\u5220\u4e00\u4e2a\uff0c\u770b\u5220\u54ea\u4e2a\u53ef\u4ee5\u6784\u6210\u6811\n        if (vec.size() > 0) {\n            if (isTreeAfterRemoveEdge(edges, vec[0])) {\n                return edges[vec[0]];\n            } else {\n                return edges[vec[1]];\n            }\n        }\n        // \u5904\u7406\u56fe\u4e2d\u60c5\u51b53\n        // \u660e\u786e\u6ca1\u6709\u5165\u5ea6\u4e3a2\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u6709\u5411\u73af\uff0c\u627e\u5230\u6784\u6210\u73af\u7684\u8fb9\u8fd4\u56de\u5c31\u53ef\u4ee5\u4e86\n        return getRemoveEdge(edges);\n\n    }\n};\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 685.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u65e5 11/24 21:23:30 2019\n ************************************************************************/\n\nclass UnionSet {\npublic:\n    vector<int> fa;\n    int cnt;\n    void init(int n) {\n        fa.clear();\n        for (int i = 0; i <= n; i++) fa.push_back(i);\n        cnt = n;\n    }\n    int get(int x) {\n        return (fa[x] = (x == fa[x] ? x : get(fa[x])));\n    }\n    void merge(int a, int b) {\n        cnt -= (get(a) != get(b));\n        fa[get(a)] = get(b);\n    }\n};\n\nclass Solution {\npublic:\n\n    vector<int> findRedundantDirectedConnection(vector<vector<int>>& edges) {\n        int n = edges.size();\n        vector<int> indeg(n + 1), outdeg(n + 1), father(n + 1);\n        for (int i = 0; i < n; i++) {\n            indeg[edges[i][1]] += 1;\n            outdeg[edges[i][0]] += 1;\n            father[edges[i][1]] = edges[i][0];\n        }\n        int flag = 0;\n        for (int i = 1; i <= n; i++) {\n            if (indeg[i] <= 1) continue;\n            flag = i;\n            break;\n        }\n        if (flag) {\n            for (int i = n - 1; i >= 0; i--) {\n                if (edges[i][1] - flag) continue;\n                u.init(n);\n                for (int j = 0; j < n; j++) {\n                    if (i == j) continue;\n                    u.merge(edges[j][0], edges[j][1]);\n                }\n\n                if (u.cnt != 1) {\n                    continue;\n                }\n                return edges[i];\n            }\n        }\n        queue<int> q;\n        vector<int> ret;\n        for (int i = 1; i <= n; i++) {\n            if (outdeg[i]) continue;\n            q.push(i);\n        }\n        while (!q.empty()) {\n            int ind = q.front();\n            q.pop();\n            outdeg[father[ind]] -= 1;\n            if (outdeg[father[ind]] == 0) q.push(father[ind]);\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            if (outdeg[edges[i][0]] && outdeg[edges[i][1]]) {\n                ret = edges[i];\n                break;\n            }\n        }\n        return ret;\n    }\n    UnionSet u;\n};\n")),(0,m.kt)("h3",{id:"9019-\u9664\u6cd5\u6c42\u503c"},"9.0.19. ",(0,m.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/evaluate-division/description/"},"\u9664\u6cd5\u6c42\u503c")),(0,m.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u53d8\u91cf\u5bf9\u6570\u7ec4 ",(0,m.kt)("inlineCode",{parentName:"p"},"equations")," \u548c\u4e00\u4e2a\u5b9e\u6570\u503c\u6570\u7ec4 ",(0,m.kt)("inlineCode",{parentName:"p"},"values")," \u4f5c\u4e3a\u5df2\u77e5\u6761\u4ef6\uff0c\u5176\u4e2d ",(0,m.kt)("inlineCode",{parentName:"p"},"equations[i] = [Ai, Bi]")," \u548c ",(0,m.kt)("inlineCode",{parentName:"p"},"values[i]")," \u5171\u540c\u8868\u793a\u7b49\u5f0f ",(0,m.kt)("inlineCode",{parentName:"p"},"Ai / Bi = values[i]")," \u3002\u6bcf\u4e2a ",(0,m.kt)("inlineCode",{parentName:"p"},"Ai")," \u6216 ",(0,m.kt)("inlineCode",{parentName:"p"},"Bi")," \u662f\u4e00\u4e2a\u8868\u793a\u5355\u4e2a\u53d8\u91cf\u7684\u5b57\u7b26\u4e32\u3002"),(0,m.kt)("p",null,"\u53e6\u6709\u4e00\u4e9b\u4ee5\u6570\u7ec4 ",(0,m.kt)("inlineCode",{parentName:"p"},"queries")," \u8868\u793a\u7684\u95ee\u9898\uff0c\u5176\u4e2d ",(0,m.kt)("inlineCode",{parentName:"p"},"queries[j] = [Cj, Dj]")," \u8868\u793a\u7b2c ",(0,m.kt)("inlineCode",{parentName:"p"},"j")," \u4e2a\u95ee\u9898\uff0c\u8bf7\u4f60\u6839\u636e\u5df2\u77e5\u6761\u4ef6\u627e\u51fa ",(0,m.kt)("inlineCode",{parentName:"p"},"Cj / Dj = ?")," \u7684\u7ed3\u679c\u4f5c\u4e3a\u7b54\u6848\u3002"),(0,m.kt)("p",null,"\u8fd4\u56de ",(0,m.kt)("strong",{parentName:"p"},"\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848")," \u3002\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u65e0\u6cd5\u786e\u5b9a\u7684\u7b54\u6848\uff0c\u5219\u7528 ",(0,m.kt)("inlineCode",{parentName:"p"},"-1.0")," \u66ff\u4ee3\u8fd9\u4e2a\u7b54\u6848\u3002\u5982\u679c\u95ee\u9898\u4e2d\u51fa\u73b0\u4e86\u7ed9\u5b9a\u7684\u5df2\u77e5\u6761\u4ef6\u4e2d\u6ca1\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u9700\u8981\u7528 ",(0,m.kt)("inlineCode",{parentName:"p"},"-1.0")," \u66ff\u4ee3\u8fd9\u4e2a\u7b54\u6848\u3002"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a"),"\u8f93\u5165\u603b\u662f\u6709\u6548\u7684\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u6cd5\u8fd0\u7b97\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u9664\u6570\u4e3a 0 \u7684\u60c5\u51b5\uff0c\u4e14\u4e0d\u5b58\u5728\u4efb\u4f55\u77db\u76fe\u7684\u7ed3\u679c\u3002"),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'\u8f93\u5165\uff1aequations = [["a","b"],["b","c"]], values = [2.0,3.0], queries = [["a","c"],["b","a"],["a","e"],["a","a"],["x","x"]]\n\u8f93\u51fa\uff1a[6.00000,0.50000,-1.00000,1.00000,-1.00000]\n\u89e3\u91ca\uff1a\n\u6761\u4ef6\uff1aa / b = 2.0, b / c = 3.0\n\u95ee\u9898\uff1aa / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?\n\u7ed3\u679c\uff1a[6.0, 0.5, -1.0, 1.0, -1.0 ]\n')),(0,m.kt)("h1",{id:"10-\u6811\u72b6\u6570\u7ec4"},"10. ==\u6811\u72b6\u6570\u7ec4=="),(0,m.kt)("h2",{id:"101-\u4e00\u3001\u524d\u7f00\u548c\u4e0e\u5dee\u5206"},"10.1. \u4e00\u3001\u524d\u7f00\u548c\u4e0e\u5dee\u5206"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u539f\u6570\u7ec4\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mi",{parentName:"msub"},"n"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{a_1, a_2,a_3,....,a_n}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.151392em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))))),(0,m.kt)("li",{parentName:"ol"},"\u524d\u7f00\u548c\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"i"))),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S_i=\\sum_{k=1}^{k=i}{a_i}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.2887179999999998em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.9890079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),"\uff0c",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a_i=S_i-S_{i-1}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.58056em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.891661em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),(0,m.kt)("li",{parentName:"ol"},"\u5dee\u5206\u6570\u7ec4\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X_i=a_i-a_{i-1}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.638891em",verticalAlign:"-0.208331em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),(0,m.kt)("li",{parentName:"ol"},"X \u6570\u7ec4\u662f a \u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\uff0ca \u6570\u7ec4\u662f S \u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4"),(0,m.kt)("li",{parentName:"ol"},"S \u6570\u7ec4\u662f a \u6570\u7ec4\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0ca \u6570\u7ec4\u662f X \u6570\u7ec4\u7684\u524d\u7f00\u548c\u6570\u7ec4"),(0,m.kt)("li",{parentName:"ol"},"\u524d\u7f00\u548c\u6570\u7ec4\u4ee5\u53ca\u5dee\u5206\u6570\u7ec4\uff0c\u5e76\u6ca1\u6709\u589e\u52a0\u4fe1\u606f\uff0c\u53ea\u662f\u4fe1\u606f\u7684\u53e6\u5916\u4e00\u79cd\u8868\u793a\u5f62\u5f0f"),(0,m.kt)("li",{parentName:"ol"},"\u524d\u7f00\u548c\u6570\u7ec4\u7528\u6765\u4f18\u5316\u533a\u95f4\u548c\u64cd\u4f5c"),(0,m.kt)("li",{parentName:"ol"},"\u5dee\u5206\u6570\u7ec4\u7528\u6765\u4f18\u5316\u533a\u95f4\u4fee\u6539\u64cd\u4f5c")),(0,m.kt)("h3",{id:"1011-\u95ee\u98981\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u548c\u64cd\u4f5c"},"10.1.1. \u95ee\u98981\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u548c\u64cd\u4f5c"),(0,m.kt)("p",null,"a \u6570\u7ec4\u4e0a\u7684\u64cd\u4f5c\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("p",null,"S \u6570\u7ec4\u4e0a\u7684\u64cd\u4f5c\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mtext",{parentName:"mrow"},"\uff0c"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"j"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,m.kt)("mi",{parentName:"mrow"},"j"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,m.kt)("mtext",{parentName:"mrow"},"\u533a\u95f4\u548c")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)\uff0cS_i - S_{j-1}=a[j,i]\u533a\u95f4\u548c")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\uff0c"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.969438em",verticalAlign:"-0.286108em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j"),(0,m.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.286108em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"["),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u533a"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u95f4"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u548c")))))),(0,m.kt)("h3",{id:"1012-\u95ee\u98982\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u5143\u7d20\u4fee\u6539\uff08\u52a0\u6cd5\uff09"},"10.1.2. \u95ee\u98982\uff1a\u539f\u6570\u7ec4\u533a\u95f4\u5143\u7d20\u4fee\u6539\uff08\u52a0\u6cd5\uff09"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a=\\{a_1,a_2,a_3,a_4,a_5,a_6\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"0")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X=\\{X_1=a_1-a_0,X_2=a_2-a_1,X_3=a_3-a_2,X_4=a_4-a_3,X_5=a_5-a_4,X_6=a_6-a_5\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\{a_1,a_2+d,a_3+d,a_4+d,a_5,a_6\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"0")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X=\\{X_1=a_1-a_0,X_2=a_2-a_1+d,X_3=a_3-a_2,X_4=a_4-a_3,X_5=a_5-a_4-d,X_6=a_6-a_5\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,"a \u6570\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("p",null,"X \u6570\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210131164748767",src:n(23420).Z})),(0,m.kt)("h2",{id:"102-\u4e8c\u3001\u6811\u72b6\u6570\u7ec4"},"10.2. \u4e8c\u3001\u6811\u72b6\u6570\u7ec4"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"lowbit \u51fd\u6570\u6c42\u6570\u5b57 i\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e1\u6240\u5728\u7684\u4f4d\u6743"),(0,m.kt)("li",{parentName:"ol"},"lowbit(x) = x & -x"),(0,m.kt)("li",{parentName:"ol"},"\u6811\u72b6\u6570\u7ec4\u672c\u8d28\u4e0a\u662f\u5bf9\u524d\u7f00\u548c\u6570\u7ec4\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\u4e0a"),(0,m.kt)("li",{parentName:"ol"},"\u524d\u7f00\u548c\u67e5\u8be2 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(logn)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))),"\uff0c\u5355\u70b9\u4fee\u6539",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(logn)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("li",{parentName:"ol"},"\u76f8\u6bd4\u4e8e\u6700\u666e\u901a\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u67e5\u8be2\u65b9\u9762\u53d8\u5dee\uff0c\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\u53d8\u597d\uff0c\u7efc\u5408\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u597d"),(0,m.kt)("li",{parentName:"ol"},"\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5411\u524d\u7edf\u8ba1\uff0c",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.65952em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i")))))," \u7684\u524d\u4e00\u4f4d ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mi",{parentName:"mrow"},"b"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i-lowbit(i)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("li",{parentName:"ol"},"\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5411\u540e\u4fee\u6539\uff0c",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.65952em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i")))))," \u7684\u540e\u4e00\u4f4d ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mi",{parentName:"mrow"},"b"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i + lowbit(i)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("li",{parentName:"ol"},"lowbit(i):C","[i]","\u4ee3\u8868\u524dlowbit","[i]","\u9879\u7684\u548c")),(0,m.kt)("h2",{id:"103-\u4e09\u3001\u6d77\u8d3c-oj-329-\u5f31\u5316\u7684\u6574\u6570\u95ee\u9898"},"10.3. \u4e09\u3001\u6d77\u8d3c OJ-329-\u5f31\u5316\u7684\u6574\u6570\u95ee\u9898"),(0,m.kt)("h3",{id:"1031-\u5f15\u5165\u5dee\u5206\u6570\u7ec4"},"10.3.1. \u5f15\u5165\u5dee\u5206\u6570\u7ec4"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a=\\{a_1,a_2,a_3,a_4,a_5,a_6\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"0")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X=\\{X_1=a_1-a_0,X_2=a_2-a_1,X_3=a_3-a_2,X_4=a_4-a_3,X_5=a_5-a_4,X_6=a_6-a_5\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\{a_1,a_2+d,a_3+d,a_4+d,a_5,a_6\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"0")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X=\\{X_1=a_1-a_0,X_2=a_2-a_1+d,X_3=a_3-a_2,X_4=a_4-a_3,X_5=a_5-a_4-d,X_6=a_6-a_5\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,"\u5f15\u5165\u5dee\u5206\u6570\u7ec4 X\uff0c\u5c06\u539f\u6570\u7ec4 a \u4e0a\u7684\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\u8f6c\u6362\u6210 X \u6570\u7ec4\u4e0a\u7684\u4e24\u6b21\u3010\u5355\u70b9\u64cd\u4f5c\u3011"),(0,m.kt)("p",null,"\u5bf9\u4e8e\u67e5\u8be2\u539f\u6570\u7ec4 a","[i]"," \u7684\u503c\uff0c\u7b49\u4ef7\u4e8e\u67e5\u8be2 X \u6570\u7ec4\u524d i \u4f4d\u7684\u3010\u524d\u7f00\u548c\u3011"),(0,m.kt)("h3",{id:"1032-\u7ed3\u8bba"},"10.3.2. \u7ed3\u8bba"),(0,m.kt)("p",null,"\u7531\u4e8e\uff0c\u65e2\u8981\u7ef4\u62a4\u3010\u524d\u7f00\u548c\u3011\uff0c\u53c8\u8981\u8fdb\u884c\u3010\u5355\u70b9\u4fee\u6539\u3011\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210131164801074",src:n(20512).Z})),(0,m.kt)("h2",{id:"104-\u56db\u3001\u6d77\u8d3c-oj-330-\u52a0\u5f3a\u7684\u6574\u6570\u95ee\u9898"},"10.4. \u56db\u3001\u6d77\u8d3c OJ-330-\u52a0\u5f3a\u7684\u6574\u6570\u95ee\u9898"),(0,m.kt)("h3",{id:"1041-\u5f15\u5165\u5dee\u5206\u6570\u7ec4"},"10.4.1. \u5f15\u5165\u5dee\u5206\u6570\u7ec4"),(0,m.kt)("p",null,"\u53c2\u8003 HZOJ-329 \u7684\u89e3\u6cd5\uff0c\u4e3b\u8981\u4e3a\u4e86\u7ef4\u62a4\u539f\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u4fee\u6539\u64cd\u4f5c"),(0,m.kt)("p",null,' "C a b c"\u8868\u793a\u7ed9',"[a, b]","\u533a\u95f4\u4e2d\u7684\u503c\u5168\u90e8\u589e\u52a0c (-10000 \u2264 c \u2264 10000)\u3002"),(0,m.kt)("p",null,' "Q a b" \u8be2\u95ee',"[a, b]","\u533a\u95f4\u4e2d\u6240\u6709\u503c\u7684\u548c\u3002"),(0,m.kt)("h3",{id:"1042-\u539f\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u548c\u95ee\u9898\u8f6c\u5316"},"10.4.2. \u539f\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u548c\u95ee\u9898\u8f6c\u5316"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a=\\{a_1,a_2,a_3,a_4,a_5,a_6\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"0")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"1")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"2")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"3")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"4")),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"6")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"a"),(0,m.kt)("mn",{parentName:"msub"},"5")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"}")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X=\\{X_1=a_1-a_0,X_2=a_2-a_1,X_3=a_3-a_2,X_4=a_4-a_3,X_5=a_5-a_4,X_6=a_6-a_5\\}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"4")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"6")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"5")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},"}")))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"Q"),(0,m.kt)("mi",{parentName:"mrow"},"u"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Query(l, r) = S(r) - S(l - 1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"Q"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))),"\uff0c\u91cd\u70b9\u5206\u6790 S \u600e\u4e48\u6c42\uff0c\u4f1a\u6c42 S\uff0c\u4e07\u4e8b\u5927\u5409"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"i")),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"k")),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"y")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msub"},"\u2211"),(0,m.kt)("mrow",{parentName:"msub"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1"))),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mrow",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"k"))),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"i")),(0,m.kt)("mrow",{parentName:"mrow"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"i")),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"k")))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S_i= \\sum_{k=1}^{i}\\sum_{y=1}^{k}{X_y} = \\sum_{k=1}{i}{(i + 1)X_k-k*X_k}=(i + 1)\\sum_{k=1}^{i}{X_k-\\sum_{k=1}^{i}k*X_k}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.424826em",verticalAlign:"-0.43581800000000004em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.964564em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.9890079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.43581800000000004em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15139200000000003em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03588em"}},"y")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.286108em"}},(0,m.kt)("span",{parentName:"span"}))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0497100000000001em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.1863979999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i")),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.264274em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.964564em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.964564em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))))))))),(0,m.kt)("p",null,"\u8bbe",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"Y"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\xd7"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Y_i = i \\times X_i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"Y"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.22222em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i")),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"i")),(0,m.kt)("mrow",{parentName:"mrow"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"X"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("msubsup",{parentName:"mrow"},(0,m.kt)("mo",{parentName:"msubsup"},"\u2211"),(0,m.kt)("mrow",{parentName:"msubsup"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("mi",{parentName:"msubsup"},"i")),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"Y"),(0,m.kt)("mi",{parentName:"msub"},"k")))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S_i=(i + 1)\\sum_{k=1}^{i}{X_k-\\sum_{k=1}^{i}{Y_k}}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.264274em",verticalAlign:"-0.29971000000000003em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.964564em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.07847em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},(0,m.kt)("span",{parentName:"span",className:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"\u2211"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.964564em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.40029em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mrel mtight"},"="),(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.2029em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.29971000000000003em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"Y"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.22222em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))))),(0,m.kt)("h3",{id:"1043-\u7ed3\u8bba"},"10.4.3. \u7ed3\u8bba"),(0,m.kt)("p",null,(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"S"),(0,m.kt)("mi",{parentName:"msub"},"i"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"S_i")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.05764em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"}))))))))))," \u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4 X \u4e0e Y \u4e24\u4e2a\u5e8f\u5217\u7684\u524d\u7f00\u548c\u5f97\u5230"),(0,m.kt)("p",null,"\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u4e24\u4e2a\u4e0e\u5dee\u5206\u6570\u7ec4 X \u76f8\u5173\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u4ece\u800c\u5f97\u5230\u539f\u6570\u7ec4 a \u7684\u524d\u7f00\u548c\u503c"),(0,m.kt)("p",null,"\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\uff1a\u6811\u72b6\u6570\u7ec4"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210131164827184",src:n(95910).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"long long c[2][MAX_N + 5];\n\nvoid add(long long k, long long i, long long x, long long n) {\n    while (i <= n) {\n        c[k][i] += x;\n        i += lowbit(i);\n    }    \n    return ;\n}\n\nlong long query(long long k, long long i) {\n    long long sum = 0;\n    while (i) {\n        sum += c[k][i];\n        i -= lowbit(i);\n    }\n    return sum;\n}\n\nlong long S(long long i) {\n    return (i + 1) * query(0, i) - query(1, i);\n}\n\nvoid modify(long long i, long long x, long long n) {\n    add(0, i, x, n);\n    add(1, i, i * x, n);\n    return ;\n}\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 100000\nint c[MAX_N + 5];\ninline int lowbit(int x) { return x & (-x); }\nvoid add(int x, int val, int n) {\n    while (x <= n) c[x] += val, x += lowbit(x);\n}\nint query(int x) {\n    int sum = 0;\n    while (x) sum += c[x], x -= lowbit(x);\n    return sum;\n}\n\nint main() {\n    int n, m, pre = 0, now;\n    char str[10];\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        cin >> now;\n        add(i, now - pre, n);\n        pre = now;\n    }\n    cin >> m;\n    for (int i = 0; i < m; i++) {\n        cin >> str;\n        switch (str[0]) {\n            case 'C': {\n                int a, b, c;\n                cin >> a >> b >> c;\n                add(a, c, n);\n                add(b + 1, -c, n);\n            } break;\n            case 'Q': {\n                int x;\n                cin >> x;\n                cout << query(x) << endl;\n            }\n        }\n    }\n    return 0;\n}\n")),(0,m.kt)("h2",{id:"105-\u4e00\u3001\u6d77\u8d3c-oj-331-\u4e22\u5931\u7684\u5976\u725b"},"10.5. \u4e00\u3001\u6d77\u8d3c OJ-331-\u4e22\u5931\u7684\u5976\u725b"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"\u6709",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"n\u53ea\u5c0f\u52a8\u7269\uff0c\u6bcf\u53ea\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u7f16\u53f7\uff0c\u5206\u522b\u4ece11\u5230",(0,m.kt)("em",{parentName:"p"},"\ud835\udc5b"),"n\u3002\u73b0\u5728\u4ed6\u4eec\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6392\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u987a\u5e8f\u662f\u4e71\u7684\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ea\u77e5\u9053\u6bcf\u4e2a\u4f4d\u7f6e\u524d\u9762\u6709\u51e0\u4e2a\u6bd4\u4ed6\u5c0f\u7684\u6570\u3002\u8bf7\u4f60\u6839\u636e\u7ed9\u51fa\u7684\u4fe1\u606f\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u662f\u591a\u5c11")),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u6807\u8bb0\u6570\u7ec4\uff0c\u6807\u8bb0\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6bcf\u4e00\u4e2a\u4e0b\u6807\u77e5\u5426\u53ef\u7528\uff0c\u53ef\u7528\u4e3a1\uff0c\u4e0d\u53ef\u7528\u4e3a0"),(0,m.kt)("li",{parentName:"ol"},"\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u4ece\u540e\u5411\u524d\uff0c\u4f9d\u6b21\u786e\u5b9a\u6bcf\u4e00\u5934\u5976\u725b\u7684\u7f16\u53f7"),(0,m.kt)("li",{parentName:"ol"},"\u4f8b\u5982\uff0c\u5f53\u524d\u5976\u725b\u6bd4\u4ed6\u524d\u9762\u76842\u4e2a\u5976\u725b\u7f16\u53f7\u5927\u7684\u8bdd\uff0c\u5f53\u524d\u5976\u725b\u7684\u7f16\u53f7\u5c31\u662f\u5f53\u524d\u5269\u4f59\u53ef\u7528\u7f16\u53f7\u4e2d\u7684\u7b2c\u4e09\u5927\u7684\u7f16\u53f7"),(0,m.kt)("li",{parentName:"ol"},"\u5982\u4f55\u627e\u5230\u53ef\u7528\u7684\u7b2c x \u5927\u7684\u7f16\u53f7\uff0c\u53ef\u4ee5\u5728\u6807\u8bb0\u6570\u7ec4\u7684\u524d\u7f00\u548c\u6570\u7ec4\u4e0a\u505a\u4e8c\u5206\u67e5\u627e"),(0,m.kt)("li",{parentName:"ol"},"\u8bbe\u8ba1\u5230\u6807\u8bb0\u6570\u7ec4\u7684\u524d\u7f00\u548c\u7ef4\u62a4\u548c\u5355\u70b9\u66f4\u65b0\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4"),(0,m.kt)("li",{parentName:"ol"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"g"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(nlogn)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"int n;\nint ind[MAX_N + 5];\nint cnt[MAX_N + 5];\n\nvoid read() {\n    cin >> n;\n    ind[1] = 0;\n    for (int i = 2; i <= n; ++i) cin >> cnt[i];\n    for (int i = 1; i <= n; ++i) {\n        add(i, 1, n);\n    }\n    return ;\n}\n\nint binary_search(int n, int x) {\n    int head = 1, tail = n, mid;\n    while (head < tail) {\n        mid = (head + tail) >> 1;\n        if (query(mid, n) < x) head = mid + 1;\n        else tail = mid;\n    }\n    return head;\n}\n\nvoid solve() {\n    for (int i = n; i >= 1; --i) {\n        ind[i] = binary_search(n, cnt[i] + 1);\n        add(ind[i], -1, n);\n    }\n    return ;\n}\n\nvoid output() {\n    for (int i = 1; i <= n; ++i) {\n        cout << ind[i] << endl;\n    }\n    return ;\n}\n")),(0,m.kt)("p",null,"\u76f8\u4f3c\u95ee\u9898\uff1a\u6d77\u8d3c OJ-332-\u4e70\u7968"),(0,m.kt)("h2",{id:"106-\u4e8c\u3001\u6d77\u8d3c-oj-328-\u697c\u5170\u56fe\u817e"},"10.6. \u4e8c\u3001\u6d77\u8d3c OJ-328-\u697c\u5170\u56fe\u817e"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u6c42\u5728\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d\uff0c\u5c0f\u4e8e\u5f53\u524d\u4f4d\u7f6e\u503c\u7684\u5143\u7d20\u6570\u91cf\uff0c\u5f53\u524d\u5143\u7d20\u503c\u8bb0\u4e3a X\uff0c\u5143\u7d20\u6570\u91cf\u8bb0\u4e3a a\uff0c\u5143\u7d20\u4f4d\u7f6e\u8bb0\u4e3a i"),(0,m.kt)("li",{parentName:"ol"},"\u524d\u9762\u5c0f\u4e8e ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," \u7684\u5143\u7d20\u6570\u91cf\u662f ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))),(0,m.kt)("li",{parentName:"ol"},"\u540e\u9762\u5c0f\u4e8e ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," \u7684\u5143\u7d20\u6570\u91cf\u662f",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X - a - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,m.kt)("li",{parentName:"ol"},"\u524d\u9762\u5927\u4e8e ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," \u7684\u5143\u7d20\u6570\u91cf ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i - a - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,m.kt)("li",{parentName:"ol"},"\u540e\u9762\u5927\u4e8eX \u7684\u5143\u7d20\u6570\u91cf",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"X"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n-X-i+a+1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,m.kt)("li",{parentName:"ol"},"\u89e3\u9898\u5173\u952e\uff1a\u524d\u9762\u5c0f\u4e8e ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," \u7684\u5143\u7d20\u6570\u91cf\u662f ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))),(0,m.kt)("li",{parentName:"ol"},"\u6807\u8bb0\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d\u6709\u54ea\u4e9b\u5143\u7d20\u51fa\u73b0\u8fc7\uff0c\u51fa\u73b0\u8fc7\u6807\u8bb0\u4e3a 1\uff0c\u5426\u5219\u6807\u8bb0\u4e3a 0"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))," \u7b49\u4e8e\u6807\u8bb0\u6570\u7ec4\u5728 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"X")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," \u4f4d\u7f6e\u4e4b\u524d\u7684\u524d\u7f00\u548c"),(0,m.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u6807\u8bb0\u6570\u7ec4\u7684\u5355\u70b9\u4fee\u6539\u53ca\u524d\u7f00\u548c\u67e5\u8be2\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"void solve(long long &x, long long &y) {\n    x = y = 0;\n    for (long long i = 1; i <= n; ++i) {\n        long long a1 = query(val[i], n);\n        long long a2 = val[i] - a1 - 1;\n        long long b1 = i - a1 - 1;\n        long long b2 = n - val[i] - b1;\n        x += b1 * b2;\n        y += a1 * a2;\n        add(val[i], 1, n);\n    }  \n}\n")),(0,m.kt)("h2",{id:"107-\u4e09\u3001\u6d77\u8d3c-oj-333-\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c"},"10.7. \u4e09\u3001\u6d77\u8d3c OJ-333-\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u7ebf\u6bb5\u6811\u6709\u70b9\u70b9\u513f\u96be\u5ea6\u7684\u9898\u76ee"),(0,m.kt)("li",{parentName:"ol"},"\u6bcf\u4e2a\u8282\u70b9\uff1a\u533a\u95f4\u548c\u503c\uff0c\u6700\u5927\u5b50\u6bb5\u548c\u503c\uff0c\u5de6\u4fa7\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u53f3\u4fa7\u6700\u5927\u5b50\u6bb5\u548c"),(0,m.kt)("li",{parentName:"ol"},"\u7279\u6b8a\u6027\u8d28\uff1a\u9012\u5f52\u904d\u5386\u65f6\uff0c\u662f\u6309\u7167\u4e0b\u6807\u987a\u5e8f\u5f97\u5230\u7684\u6bcf\u4e00\u4e2a\u67e5\u8be2\u533a\u95f4\u5185\u7684\u7ebf\u6bb5\u6811\u7684\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u2223"),(0,m.kt)("mtext",{parentName:"mrow"},"\u2460\u2461\u2462\u2463\u2464"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u2223")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"|\u2460\u2461\u2462\u2463\u2464|")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2223"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2460"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2461"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2462"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2463"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2464"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2223"))))),"\uff0c\u5c31\u662f\u6309\u7167\u2460\u2461\u2462\u2463\u2464\u7684\u987a\u5e8f\u904d\u5386\u5f97\u5230\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u4ee3\u7801\u6709\u70b9\u513f\u590d\u6742\uff0c\u5b66\u4f1a\u4e86\uff0c\u4ee3\u7801\u601d\u7ef4\u4f1a\u66f4\u4e0a\u4e00\u5c42\u697c")),(0,m.kt)("h2",{id:"108"},"10.8."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 500000\n#define lc(ind) (tree[ind].lind)\n#define rc(ind) (tree[ind].rind)\n#define SUM(ind) tree[ind].sum\n#define MAX(ind) tree[ind].m\n#define LMAX(ind) tree[ind].lm\n#define RMAX(ind) tree[ind].rm\n\nstruct node {\n    int sum, m, lm, rm;\n    int lind, rind;\n} tree[(MAX_N << 1) + 5];\nint root = 3, cnt = 4, ans = 0, temp = 1;\nint arr[MAX_N + 5];\ninline int getNode() { return cnt++; }\n\nvoid UP(int a, int b, int c) {\n    SUM(a) = SUM(b) + SUM(c);\n    LMAX(a) = max(LMAX(b), SUM(b) + LMAX(c));\n    RMAX(a) = max(RMAX(c), SUM(c) + RMAX(b));\n    MAX(a) = max(MAX(b), MAX(c));\n    MAX(a) = max(MAX(a), RMAX(b) + LMAX(c));\n    return ;\n}\n\nvoid UP(int ind) {\n    UP(ind, lc(ind), rc(ind));\n}\n\nvoid build(int ind, int l, int r) {\n    if (l == r) {\n        SUM(ind) = MAX(ind) = LMAX(ind) = RMAX(ind) = arr[l];\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    lc(ind) = getNode();\n    rc(ind) = getNode();\n    build(lc(ind), l, mid);\n    build(rc(ind), mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nvoid modify(int ind, int x, int y, int l, int r) {\n    if (l == r) {\n        SUM(ind) = MAX(ind) = LMAX(ind) = RMAX(ind) = y;\n        \n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) modify(lc(ind), x, y, l, mid);\n    else modify(rc(ind), x, y, mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nvoid query(int ind, int x, int y, int l, int r) {\n    if (x <= l && r <= y) {\n        if (x == l) tree[ans] = tree[ind];\n        else {\n            UP(temp, ans, ind);\n            swap(temp, ans);\n        }\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) query(lc(ind), x, y, l, mid);\n    if (y > mid) query(rc(ind), x, y, mid + 1, r);\n    return ;\n}\n\nostream &operator<<(ostream &out, node &a) {\n    out << (&a - tree) << " : " << a.sum << " " << a.m << " " << a.lm << " " << a.rm;\n    out << "(" << a.lind << "," << a.rind << ")";\n    return out;\n}\n\nvoid output(int n) {\n    for (int i = root; i < root + 2 * n - 1; i++) {\n        cout << tree[i] << endl;\n    }\n    cout << "---------" << endl;\n}\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) cin >> arr[i];\n    build(root, 1, n);\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        if (a == 1) {\n            if (b > c) swap(b, c);\n            query(root, b, c, 1, n);\n            cout << MAX(ans) << endl;\n        } else {\n            modify(root, b, c, 1, n);\n        }\n        //output(n);\n    }\n    return 0;\n}\n')),(0,m.kt)("h1",{id:"11-\u7ebf\u6bb5\u6811"},"11. ==\u7ebf\u6bb5\u6811=="),(0,m.kt)("p",null,"\u7ebf\u6bb5\u6811\u2014\u5173\u952e\u8bcd\n\u5b8c\u5168\u4e8c\u53c9\u6811:\u7ebf\u6bb5\u6811\u7a0b\u5e8f\u5b9e\u73b0\u65f6\u5019\u7684\u5b9e\u9645\u5b58\u50a8\u7ed3\u6784\n\u533a\u95f4:\u7ebf\u6bb5\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u8303\u56f4\n\u5411 \u4e0a \u66f4 \u65b0:\u7528\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u4fe1\u606f\u66f4\u65b0\u672c\u8282\u70b9\u7684\u4fe1\u606f\n\u4e0b \u6c89 \u6807 \u8bb0:\u5c06\u672c\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u66f4\u65b0\u7ed9\u4e24\u4e2a\u5b50\u8282\u70b9\n\u53e3\u8bc0:\u4e0b\u6c89\u53d1\u751f\u5728\u9012\u5f52\u4e4b\u524d,\u5411\u4e0a\u53d1\u751f\u5728\u9012\u5f52\u4e4b\u540e"),(0,m.kt)("h2",{id:"111-\u4e00\u3001\u95ee\u9898\u80cc\u666f"},"11.1. \u4e00\u3001\u95ee\u9898\u80cc\u666f"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff08\u57fa\u7840\u7248\uff09"),(0,m.kt)("li",{parentName:"ol"},"\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff08\u8fdb\u9636\u7248\uff09"),(0,m.kt)("li",{parentName:"ol"},"\u5355\u70b9\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff08\u7528\u4e0d\u7740\u7ebf\u6bb5\u6811\uff09"),(0,m.kt)("li",{parentName:"ol"},"\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff08\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7279\u4f8b\uff09")),(0,m.kt)("h2",{id:"112-\u4e8c\u3001\u57fa\u7840\u7248\u7ebf\u6bb5\u6811"},"11.2. \u4e8c\u3001\u57fa\u7840\u7248\u7ebf\u6bb5\u6811"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u7ebf\u6bb5\u6811\u662f\u5bf9\u4e8e\u4e00\u7ef4\u5e8f\u5217\u7684\u4e00\u79cd\u7ef4\u62a4\u7ed3\u6784")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u91c7\u7528\u7684\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06\u603b\u533a\u95f4\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u533a\u95f4\u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3a\u6b62")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u4ee3\u8868\u4e86\u539f\u5e8f\u5217\u4e2d\u7684\u5355\u4e2a\u4f4d\u7f6e\u7684\u503c")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5982\u679c\u91c7\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784\u7684\u8bdd\uff0c\u6700\u8d77\u7801\u9700\u8981 ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mn",{parentName:"mrow"},"4"),(0,m.kt)("mi",{parentName:"mrow"},"n")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"4n")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"4"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," \u7684\u5b58\u50a8\u7a7a\u95f4")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5f53\u9762\u5bf9\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\uff0c\u57fa\u7840\u7248\u7684\u7ebf\u6bb5\u6811\u6548\u7387\u4e0a\u8fd8\u4e0d\u5982\u76f4\u63a5\u5728\u4e00\u7ef4\u5e8f\u5217\u4e0a\u4fee\u6539")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u53ea\u9002\u7528\u4e8e\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 10000\n#define lc(ind) (ind << 1)\n#define rc(ind) (ind << 1 | 1)\n\nstruct node {\n    int sum;\n} tree[(MAX_N << 2) + 5];\nint root = 1;\nint arr[MAX_N + 5];\n\nvoid UP(int ind) {\n    tree[ind].sum = max(tree[lc(ind)].sum, tree[rc(ind)].sum);\n    return ;\n}\n\nvoid build(int ind, int l, int r) {\n    if (l == r) {\n        tree[ind].sum = arr[l];\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    build(lc(ind), l, mid);\n    build(rc(ind), mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nvoid modify(int ind, int x, int y, int l, int r) {\n    if (l == r) {\n        tree[ind].sum = y;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) modify(lc(ind), x, y, l, mid);\n    else modify(rc(ind), x, y, mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nint query(int ind, int x, int y, int l, int r) {\n    if (x <= l && r <= y) {\n        return tree[ind].sum;\n    }\n    int ans = 0x80000000, mid = (l + r) >> 1;\n    if (x <= mid) ans = max(ans, query(lc(ind), x, y, l, mid));\n    if (y > mid) ans = max(ans, query(rc(ind), x, y, mid + 1, r));\n    return ans;\n}\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) cin >> arr[i];\n    build(root, 1, n);\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        if (a == 1) modify(root, b, c, 1, n);\n        else {\n            cout << query(root, b, c, 1, n) << endl;\n        }\n    }\n    return 0;\n}\n")),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 10000\nstruct {\n    int max_num;\n    int l, r;\n} tree[MAX_N << 2];\nint arr[MAX_N + 5];\n\nvoid update(int ind) {\n    tree[ind].max_num = max(tree[ind << 1].max_num, tree[ind << 1 | 1].max_num);\n    return ;\n}\n\nvoid build_tree(int ind, int l, int r) {\n    tree[ind].l = l, tree[ind].r = r;\n    if (l == r) {\n        tree[ind].max_num = arr[l];\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    build_tree(ind * 2, l, mid);\n    build_tree(ind * 2 + 1, mid + 1, r);\n    update(ind);\n    return ;\n}\n\nvoid modify(int ind, int k, int val) {\n    if (tree[ind].l == tree[ind].r) {\n        tree[ind].max_num = val;\n        return ;\n    }\n    int mid = (tree[ind].l + tree[ind].r) >> 1;\n    if (k <= mid) {\n        modify(ind << 1, k, val);\n    } else {\n        modify(ind << 1 | 1, k, val);\n    }\n    update(ind);\n    return ;\n}\n\nint query(int ind, int x, int y) {\n    if (tree[ind].l >= x && tree[ind].r <= y) {\n        return tree[ind].max_num;\n    }\n    int ans = INT_MIN;\n    int mid = (tree[ind].l + tree[ind].r) >> 1;\n    if (mid >= x) {\n        ans = max(ans, query(ind << 1, x, y));\n    }\n    if (mid < y) {\n        ans = max(ans, query(ind << 1 | 1, x, y));\n    }\n    return ans;\n}\n")))),(0,m.kt)("h2",{id:"113-\u4e09\u3001\u8fdb\u9636\u7248\u7ebf\u6bb5\u6811"},"11.3. \u4e09\u3001\u8fdb\u9636\u7248\u7ebf\u6bb5\u6811"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u4f18\u5316\u6389\u4e86\u4ee3\u7801\u5b9e\u73b0\u4e2d\u7684\uff1al\uff0cr\u3002\u533a\u95f4\u53d8\u91cf"),(0,m.kt)("li",{parentName:"ol"},"\u53ef\u4ee5\u7528\u4e8e\u533a\u95f4\u66f4\u65b0\uff0c\u533a\u95f4\u67e5\u8be2"),(0,m.kt)("li",{parentName:"ol"},"\u589e\u52a0\u4e86\u61d2\u6807\u8bb0\uff0c\u8fbe\u5230\u80fd\u591f\u533a\u95f4\u66f4\u65b0\u7684\u76ee\u7684"),(0,m.kt)("li",{parentName:"ol"},"\u61d2\u6807\u8bb0\u662f\u9700\u8981\u5411\u4e0b\u4e0b\u6c89\u7684"),(0,m.kt)("li",{parentName:"ol"},"\u6807\u8bb0\u4e0b\u6c89\u53d1\u751f\u5728\u9012\u5f52\u4e4b\u524d\uff0c\u5411\u4e0a\u66f4\u65b0\u53d1\u751f\u5728\u5177\u6709\u4fee\u6539\u64cd\u4f5c\u7684\u9012\u5f52\u4e4b\u540e")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define MAX_N 10000\n#define define_mid long long mid = (l + r) >> 1\n\nlong long flag = 0;\nstruct {\n    long long sum, tag;\n} tree[MAX_N << 2];\nlong long arr[MAX_N + 5];\n\nvoid update(long long ind) {\n    tree[ind].sum = tree[ind << 1].sum + tree[ind << 1 | 1].sum;\n    return ;\n}\n\nvoid down(long long ind, long long l, long long r) {\n    if (tree[ind].tag) {\n        long long val = tree[ind].tag;\n        define_mid;\n        tree[ind << 1].sum += val * (mid - l + 1);\n        tree[ind << 1].tag += val;\n        tree[ind << 1 | 1].sum += val * (r - mid);\n        tree[ind << 1 | 1].tag += val;\n        tree[ind].tag = 0;\n    }\n    return ;\n}\n\nvoid build_tree(long long ind, long long l, long long r) {\n    if (l == r) {\n        tree[ind].sum = arr[l];\n        return ;\n    }\n    define_mid;\n    build_tree(ind << 1, l, mid);\n    build_tree(ind << 1 | 1, mid + 1, r);\n    update(ind);\n    return ;\n}\n\nvoid modify(long long ind, long long l, long long r, long long x, long long y, long long val) {\n    flag && printf("modify(%lld, %lld, %lld) : %lld, %lld, %lld, %lld\\n",\n        x, y, val, ind, l, r, tree[ind].sum\n    );\n    if (x <= l && r <= y) {\n        tree[ind].sum += val * (r - l + 1);\n        tree[ind].tag += val;\n        return ;\n    }\n    down(ind, l, r);\n    define_mid;\n    if (mid >= x) {\n        modify(ind << 1, l, mid, x, y, val);\n    }\n    if (mid < y) {\n        modify(ind << 1 | 1, mid + 1, r, x, y, val);\n    }\n    update(ind);\n    return ;\n}\n\nlong long query(long long ind, long long l, long long r, long long x, long long y) {\n    flag && printf("query(%lld, %lld) : %lld, %lld, %lld, %lld\\n",\n        x, y, ind, l, r, tree[ind].sum\n    );\n    if (x <= l && r <= y) {\n        return tree[ind].sum;\n    }\n    down(ind, l, r);\n    define_mid;\n    long long ans = 0;\n    if (mid >= x) {\n        ans += query(ind << 1, l, mid, x, y);\n    }\n    if (mid < y) {\n        ans += query(ind << 1 | 1, mid + 1, r, x, y);\n    }\n    return ans;\n}\n\nint main() {\n    long long n, m;\n    scanf("%lld%lld", &n, &m);\n    for (long long i = 1; i <= n; i++) {\n        scanf("%lld", arr + i);\n    }\n    build_tree(1, 1, n);\n    long long a, b, c, d;\n    for (long long i = 0; i < m; i++) {\n        scanf("%lld%lld%lld", &a, &b, &c);\n        switch (a) {\n            case 1: {\n                scanf("%lld", &d);\n                modify(1, 1, n, b, c, d);\n            } break;\n            case 2: {\n                if (b > c) {\n                    printf("0\\n");\n                    break;\n                }\n                printf("%lld\\n", query(1, 1, n, b, c));\n            } break;\n        }\n    }\n    return 0;\n}\n')),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 10000\n#define lc(ind) (tree[ind].lind)\n#define rc(ind) (tree[ind].rind)\n#define tag(ind) tree[ind].tag\n#define sum(ind) tree[ind].sum\n#define cnt(ind) tree[ind].cnt\n\nstruct node {\n    long long sum, tag, cnt;\n    int lind, rind;\n} tree[(MAX_N << 1) + 5];\nint root = 0, cnt = 1;\nlong long arr[MAX_N + 5];\nint getNode() { return cnt++; }\n\nvoid DOWN(int ind) {\n    if (tag(ind)) {\n        tag(lc(ind)) += tag(ind);\n        tag(rc(ind)) += tag(ind);\n        sum(lc(ind)) += tag(ind) * cnt(lc(ind));\n        sum(rc(ind)) += tag(ind) * cnt(rc(ind));\n        tag(ind) = 0;\n    }\n    return ;\n}\n\nvoid UP(int ind) {\n    tree[ind].sum = tree[lc(ind)].sum + tree[rc(ind)].sum;\n}\n\nvoid build(int ind, int l, int r) {\n    tree[ind].cnt = (r - l + 1);\n    if (l == r) {\n        tree[ind].sum = arr[l];\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    tree[ind].lind = getNode();\n    tree[ind].rind = getNode();\n    build(lc(ind), l, mid);\n    build(rc(ind), mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nvoid modify(int ind, int x, int y, long long d, int l, int r) {\n    if (x <= l && r <= y) {\n        tree[ind].tag += d;\n        tree[ind].sum += d * tree[ind].cnt;\n        return ;\n    }\n    DOWN(ind);\n    int mid = (l + r) >> 1;\n    if (x <= mid) modify(lc(ind), x, y, d, l, mid);\n    if (y > mid) modify(rc(ind), x, y, d, mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nlong long query(int ind, int x, int y, int l, int r) {\n    if (x <= l && r <= y) {\n        return sum(ind);\n    }\n    DOWN(ind);\n    int mid = (l + r) >> 1;\n    long long ans = 0;\n    if (x <= mid) ans += query(lc(ind), x, y, l, mid);\n    if (y > mid) ans += query(rc(ind), x, y, mid + 1, r);\n    return ans;\n}\n")),(0,m.kt)("h3",{id:"1131-hzoj224-\u590d\u5408\u7ebf\u6bb5\u6811"},"11.3.1. HZOJ224 \u590d\u5408\u7ebf\u6bb5\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"#define MAX_N 100000\nstruct Node {\n    long long sum, t1, t2;\n} tree[(MAX_N << 2) + 5];\nlong long a[MAX_N + 5];\nlong long n, m, p;\n\nvoid mul_tag(long long ind, long long x) {\n    tree[ind].sum *= x;\n    tree[ind].sum %= p;\n    tree[ind].t1 *= x;\n    tree[ind].t1 %= p;\n    tree[ind].t2 *= x;\n    tree[ind].t2 %= p;\n    return ;\n}\n\nvoid add_tag(long long ind, long long x, long long n) {\n    tree[ind].sum += x * n;\n    tree[ind].sum %= p;\n    tree[ind].t2 += x;\n    tree[ind].t2 %= p;\n    return ;\n}\n\nvoid UP(long long ind) {\n    tree[ind].sum = tree[ind << 1].sum + tree[ind << 1 | 1].sum;\n    tree[ind].sum %= p; \n    return ;\n}\n\nvoid DOWN(long long ind, long long l, long long r) {\n    if (tree[ind].t1 - 1 || tree[ind].t2) {\n        long long a = tree[ind].t1, b = tree[ind].t2;\n        long long mid = (l + r) >> 1;\n        mul_tag(ind << 1, a);\n        mul_tag(ind << 1 | 1, a);\n        add_tag(ind << 1, b, mid - l + 1);\n        add_tag(ind << 1 | 1, b, r - mid);\n        tree[ind].t1 = 1;\n        tree[ind].t2 = 0;\n    }\n    return ;\n}\n\nvoid build(long long ind, long long l, long long r) {\n    tree[ind].t1 = 1; tree[ind].t2 = 0;\n    if (l == r) {\n        tree[ind].sum = a[l];\n        return ;\n    }\n    long long mid = (l + r) >> 1;\n    build(ind << 1, l, mid);\n    build(ind << 1 | 1, mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nvoid modify(long long ind, long long flag, long long x, long long y, long long val, long long l, long long r) {\n    if (x <= l && r <= y) {\n        if (flag == 0) {\n            mul_tag(ind, val);\n        } else {\n            add_tag(ind, val, r - l + 1);\n        }\n        return ;\n    }\n    long long mid = (l + r) >> 1;\n    DOWN(ind, l, r);\n    if (x <= mid) modify(ind << 1, flag, x, y, val, l, mid);\n    if (y > mid) modify(ind << 1 | 1, flag, x, y, val, mid + 1, r);\n    UP(ind);\n    return ;\n}\n\nlong long query(long long ind, long long x, long long y, long long l, long long r) {\n    if (x <= l && r <= y) {\n        return tree[ind].sum;\n    }\n    long long mid = (l + r) >> 1;\n    long long ans = 0;\n    DOWN(ind, l, r);\n    if (x <= mid) ans += query(ind << 1, x, y, l, mid);\n    ans %= p;\n    if (y > mid) ans += query(ind << 1 | 1, x, y, mid + 1, r);\n    ans %= p;\n    UP(ind);\n    return ans;\n}\n\nint main() {\n    cin >> n >> m >> p;\n    for (long long i = 1; i <= n; i++) cin >> a[i];\n    build(1, 1, n);\n    long long op, x, y, k;\n    for (long long i = 0; i < m; i++) {\n        cin >> op >> x >> y;\n        switch (op) {\n            case 1: \n            case 2: {\n                cin >> k;\n                modify(1, op - 1, x, y, k, 1, n);\n            } break;\n            case 3: {\n                cout << query(1, x, y, 1, n) << endl;\n            } break;\n        }\n    }\n    return 0;\n}\n")),(0,m.kt)("p",null,"\u4e60 \u9898 \u4f5c \u4e1a\nLuogu P3372 Luogu P3373\nLuogu P3924 Luogu P1047\nLuogu P1168 Luogu P1204\nLuogu P1276 Luogu P1438\nLuogu P1442 Luogu P1471\nLuogu P1531 Luogu P1533\nLuogu P1558 Luogu P1637\nLuogu P1816 Luogu P25"),(0,m.kt)("h1",{id:"12-\u4e8c\u53c9\u6392\u5e8f\u6811"},"12. ==\u4e8c\u53c9\u6392\u5e8f\u6811=="),(0,m.kt)("h2",{id:"121-\u4e00\u3001\u6027\u8d28"},"12.1. \u4e00\u3001\u6027\u8d28"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5de6\u5b50\u6811 < \u6839\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u53f3\u5b50\u6811 > \u6839\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217")),(0,m.kt)("p",null,"\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u5b9a\u4e49\u4e00\u79cd\u6027\u8d28\uff0c\u5e76\u4e14\u7ef4\u62a4\u8fd9\u79cd\u6027\u8d28\u3002"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6811\u4e2d\uff0c\u7b2c i \u5c42\u6700\u591a\u6709$ 2^{i-1}$ \u4e2a\u7ed3\u70b9\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u5982\u679c\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a K\uff0c\u90a3\u4e48\u6b64\u4e8c\u53c9\u6811\u6700\u591a\u6709 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"2"),(0,m.kt)("mi",{parentName:"msup"},"K")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^K-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.924661em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8413309999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.07153em"}},"K")))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," \u4e2a\u7ed3\u70b9\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6811\u4e2d\uff0c\u7ec8\u7aef\u7ed3\u70b9\u6570\uff08\u53f6\u5b50\u7ed3\u70b9\u6570\uff09\u4e3a n0\uff0c\u5ea6\u4e3a 2 \u7684\u7ed3\u70b9\u6570\u4e3a n2\uff0c\u5219 n0=n2+1")),(0,m.kt)("h2",{id:"122-\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c"},"12.2. \u4e8c\u3001\u63d2\u5165\u64cd\u4f5c"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u7684\u65b0\u8282\u70b9\uff0c\u4e00\u5b9a\u4f1a\u505a\u4e3a\u53f6\u5b50\u7ed3\u70b9")),(0,m.kt)("h2",{id:"123-\u4e09\u3001\u5220\u9664\u64cd\u4f5c"},"12.3. \u4e09\u3001\u5220\u9664\u64cd\u4f5c"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a0\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a1\u7684\u8282\u70b9\uff0c\u628a\u300e\u5b64\u513f\u5b50\u6811\u300f\u6302\u5230\u5176\u7236\u8282\u70b9\u4e0a\u9762\u53bb"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a2\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u5220\u9664\u5ea6\u4e3a1\u7684\u8282\u70b9")),(0,m.kt)("p",null,"\u5bf9\u4e8e\u5ea6\u4e3a2\u7684\u8282\u70b9\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u524d\u9a71\uff1a\u5de6\u5b50\u6811\u6700\u5927\u503c"),(0,m.kt)("li",{parentName:"ol"},"\u540e\u7ee7\uff1a\u53f3\u5b50\u6811\u6700\u5c0f\u503c")),(0,m.kt)("h2",{id:"124-\u56db\u3001\u968f\u5802\u7ec3\u4e60"},"12.4. \u56db\u3001\u968f\u5802\u7ec3\u4e60"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u6811\u5f62\u7ed3\u6784"),(0,m.kt)("li",{parentName:"ol"},"\u4e0d\u540c\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u67e5\u627e\u6548\u7387\u4e0d\u540c")),(0,m.kt)("p",null,"\u5e73\u5747\u67e5\u627e\u6548\u7387\uff1a\u8282\u70b9\u67e5\u627e\u6b21\u6570\u7684\u671f\u671b\u503c\uff0c",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mfrac",{parentName:"mrow"},(0,m.kt)("mtext",{parentName:"mfrac"},"\u603b\u6b21\u6570"),(0,m.kt)("mtext",{parentName:"mfrac"},"\u8282\u70b9\u6570\u91cf"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\frac{\u603b\u6b21\u6570}{\u8282\u70b9\u6570\u91cf}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.217331em",verticalAlign:"-0.345em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,m.kt)("span",{parentName:"span",className:"mfrac"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.872331em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.6550000000000002em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u8282"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u70b9"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6570"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u91cf")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,m.kt)("span",{parentName:"span",style:{top:"-3.394em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u603b"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6b21"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6570"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,m.kt)("span",{parentName:"span"}))))),(0,m.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})))))),"\uff0c\u5047\u8bbe\u6bcf\u4e2a\u8282\u70b9\u7b49\u6982\u7387\u7684\u88ab\u67e5\u627e"),(0,m.kt)("h2",{id:"125-\u4e94\u3001\u6269\u5c55\u5185\u5bb9"},"12.5. \u4e94\u3001\u6269\u5c55\u5185\u5bb9"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u5220\u9664\u4ee3\u7801\u4f18\u5316",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u6389\u5904\u7406\u5ea6\u4e3a0\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u4e0d\u5f71\u54cd\u4ee3\u7801\u6574\u4f53\u529f\u80fd"))),(0,m.kt)("li",{parentName:"ol"},"\u5982\u4f55\u89e3\u51b3==\u6392\u540d==\u76f8\u5173\u7684\u68c0\u7d22\u9700\u6c42",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u4fee\u6539\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u7ed3\u6784\u5b9a\u4e49\uff0c\u589e\u52a0 size \u5b57\u6bb5\uff0c\u8bb0\u5f55\u6bcf\u68f5\u6811\u7684\u8282\u70b9\u6570\u91cf"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k = LS - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"))))),"\uff0c\u6839\u8282\u70b9\u5c31\u662f\u6392\u540d\u7b2c k \u4f4d\u7684\u5143\u7d20"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k \\le LS")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83041em",verticalAlign:"-0.13597em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"))))),"\uff0c\u6392\u540d\u7b2c k \u4f4d\u7684\u5143\u7d20\u5728\u5de6\u5b50\u6811\u4e2d"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mtext",{parentName:"mrow"},"\uff0c"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"c"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"h"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"c"),(0,m.kt)("mi",{parentName:"mrow"},"h"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k \\gt LS\uff0csearch_k(root->rchild, k - LS - 1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73354em",verticalAlign:"-0.0391em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\uff0c"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"h"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"h"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))))),(0,m.kt)("li",{parentName:"ol"},"\u89e3\u51b3 Top-K \u95ee\u9898\uff08\u627e\u5230\u5c0f\u4e8e\u7b2c k \u4f4d\u7684\u6240\u6709\u5143\u7d20\uff09",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u6839\u8282\u70b9\u5c31\u662f\u7b2c k \u4f4d\u5143\u7d20\u7684\u8bdd\uff0c\u5c31\u628a\u5de6\u5b50\u6811\u4e2d\u7684\u503c\u5168\u90e8\u8f93\u51fa\u51fa\u6765"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c k \u4f4d\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u524d k \u4f4d\u5143\u7d20\u5168\u90fd\u5728\u5de6\u5b50\u6811\u4e2d"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c k \u4f4d\u5728\u53f3\u5b50\u6811\u4e2d\uff0c\u8bf4\u660e\u6839\u8282\u70b9\u548c\u5de6\u5b50\u6811\u4e2d\u7684\u5143\u7d20\uff0c\u90fd\u662f\u524d k \u4f4d\u5143\u7d20\u91cc\u9762\u7684\u503c"))),(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u548c\u5feb\u901f\u6392\u5e8f\u7684\u5173\u7cfb",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u5feb\u901f\u6392\u5e8f\u5728\u601d\u7ef4\u903b\u8f91\u7ed3\u6784\u5c42\u9762\u7528\u7684\u6570\u636e\u7ed3\u6784"),(0,m.kt)("li",{parentName:"ol"},"\u601d\u80031\uff1a\u5feb\u901f\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u5efa\u6811\u65f6\u95f4\u590d\u6742\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u601d\u80032\uff1a\u5feb\u901f\u9009\u62e9\u7b97\u6cd5\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u4e4b\u95f4\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784")))),(0,m.kt)("p",null,"\u6240\u8c13\u7b97\u6cd5\u8bbe\u8ba1\u53ca\u5206\u6790\u80fd\u529b\uff1a\u5206\u7c7b\u8ba8\u8bba\u53ca\u5f52\u7eb3\u603b\u7ed3\u7684\u80fd\u529b"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#define KEY(n) (n ? n->key : 0)\n#define SIZE(n) (n ? n->size : 0)\n#define L(n) (n ? n->lchild : NULL)\n\ntypedef struct Node {\n    int key, size;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->size = 1;\n    p->lchild = p->rchild = NULL;\n    return p;\n}\n\nvoid update_size(Node *root) {\n    root->size = SIZE(root->lchild) + SIZE(root->rchild) + 1;\n    return ;\n}\n\nint search(Node *root, int val) {\n    if (root == NULL) return 0;\n    if (root->key == val) return 1;\n    if (val < root->key) return search(root->lchild, val);\n    return search(root->rchild, val);\n}\n\nint search_k(Node *root, int k) {\n    if (root == NULL) return -1;\n    if (SIZE(L(root)) == k - 1) return root->key;\n    if (k <= SIZE(L(root))) {\n        return search_k(root->lchild, k);\n    }\n    return search_k(root->rchild, k - SIZE(L(root)) - 1);\n}\n\nNode *insert(Node *root, int key) {\n    if (root == NULL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (key < root->key) root->lchild = insert(root->lchild, key);\n    else root->rchild = insert(root->rchild, key);\n    update_size(root);\n    return root;\n}\n\nNode *predecessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase(Node *root, int key) {\n    if (root == NULL) return NULL;\n    if (key < root->key) {\n        root->lchild = erase(root->lchild, key);\n    } else if (key > root->key) {\n        root->rchild = erase(root->rchild, key);\n    } else {\n        if (root->lchild == NULL || root->rchild == NULL) {\n            Node *temp = root->lchild ? root->lchild : root->rchild;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predecessor(root);\n            root->key = temp->key;\n            root->lchild = erase(root->lchild, temp->key);\n        }\n    }\n    update_size(root);\n    return root;\n}\n\nvoid clear(Node *root) {\n    if (root == NULL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid print(Node *root) {\n    printf("(%d[%d], %d, %d)\\n", \n           KEY(root), SIZE(root), \n           KEY(root->lchild), KEY(root->rchild)\n    );\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NULL) return ;\n    output(root->lchild);\n    print(root);\n    output(root->rchild);\n    return ;\n}\n\nvoid output_k(Node *root, int k) {\n    if (k == 0 || root == NULL) return ;\n    if (k <= SIZE(L(root))) {\n        output_k(root->lchild, k);\n    } else {\n        output(root->lchild);\n        print(root);\n        output_k(root->rchild, k - SIZE(L(root)) - 1);\n    }\n    return ;\n}\n\nint main() {\n    int op, val;\n    Node *root =  NULL;\n    while (~scanf("%d%d", &op, &val)) {\n        switch (op) {\n            case 0: printf("search %d, result : %d\\n", val, search(root, val)); break;\n            case 1: root = insert(root, val); break;\n            case 2: root = erase(root, val); break;\n            case 3: {\n                printf("search k = %d, result : %d\\n", \n                    val, search_k(root, val)); \n            } break;\n            case 4: { \n                printf("output top-%d elements\\n", val);\n                output_k(root, val); \n                printf("------------\\n");\n            } break;\n        }\n        if (op == 1 || op == 2) {\n            output(root);\n            printf("------------\\n");\n        }\n    }\n    return 0;\n}\n')),(0,m.kt)("p",null,"Leetcode 110\nLeetcode 669"),(0,m.kt)("h1",{id:"13-avl-\u6811"},"13. ==AVL \u6811=="),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u5b66\u4e60\u91cd\u70b9")),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5e73\u8861\u4e8c\u53c9\u6811\u6392\u5e8f\u6811\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u6240\u4ee5\u62e5\u6709\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u6240\u6709\u6027\u8d28"),(0,m.kt)("li",{parentName:"ol"},"\u5e73\u8861\u4e8c\u53c9\u6811\u6392\u5e8f\u6811\u7684\u5b66\u4e60\u91cd\u70b9\uff0c\u5728\u4e8e\u5e73\u8861\u6761\u4ef6\u4ee5\u53ca\u5e73\u8861\u8c03\u6574\u7684\u76f8\u5173\u5b66\u4e60")),(0,m.kt)("h2",{id:"131-\u4e8c\u3001\u6027\u8d28"},"13.1. \u4e8c\u3001\u6027\u8d28"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5e73\u8861\u6761\u4ef6\uff1a\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"AVL \u6811\u6539\u8fdb\u7684\u662f\u8282\u70b9\u6570\u91cf\u7684\u4e0b\u9650"),(0,m.kt)("p",{parentName:"li"},"$ H \\le SIZE(H) \\le 2^H - 1 $"),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mi",{parentName:"mrow"},"I"),(0,m.kt)("mi",{parentName:"mrow"},"Z"),(0,m.kt)("mi",{parentName:"mrow"},"E"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"2"),(0,m.kt)("mi",{parentName:"msup"},"H")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"low(H - 2) + low(H - 1) + 1 \\le SIZE(H) \\le 2^H - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.78041em",verticalAlign:"-0.13597em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"I"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"Z"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"E"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.924661em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8413309999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.08125em"}},"H")))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"4"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"4"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"7"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mtext",{parentName:"mrow"},"\u6590\u6ce2\u90a3\u5951\u6570\u5217"),(0,m.kt)("mo",{parentName:"mrow"},":"),(0,m.kt)("mn",{parentName:"mrow"},"1.61"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"8"),(0,m.kt)("mi",{parentName:"msup"},"n"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"low(1) = 1, low(2) = 2, low(3) = 4, low(4) = 7, \u6590\u6ce2\u90a3\u5951\u6570\u5217:1.618^n")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"4"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"4"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"7"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6590"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6ce2"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u90a3"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u5951"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6570"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u5217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},":"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.664392em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"6"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"8"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.664392em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n"))))))))))))))),(0,m.kt)("h2",{id:"132-\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565"},"13.2. \u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53d1\u751f\u5728\u56de\u6eaf\u9636\u6bb5\u7684\uff0c\u7b2c\u4e00\u4e2a\u5931\u8861\u8282\u70b9\u5904"),(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u5e73\u8861\u8c03\u6574\u7b56\u7565\u7684\u5173\u952e\u5728\u4e8e\uff1a\u5206\u6790\u6e05\u695a\u56db\u79cd\u60c5\u51b5\u4e0b\uff0cABCD \u56db\u68f5\u5b50\u6811\u6811\u9ad8\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"LL\uff0c\u5927\u53f3\u65cb"),(0,m.kt)("li",{parentName:"ol"},"LR\uff0c\u5148\u5c0f\u5de6\u65cb\uff0c\u518d\u5927\u53f3\u65cb"),(0,m.kt)("li",{parentName:"ol"},"RL\uff0c\u5148\u5c0f\u53f3\u65cb\uff0c\u518d\u5927\u5de6\u65cb"),(0,m.kt)("li",{parentName:"ol"},"RR\uff0c\u5927\u5de6\u65cb")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152153712",src:n(82091).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152314037",src:n(52939).Z})),(0,m.kt)("h2",{id:"133-\u4e94\u3001\u4ee3\u7801\u6f14\u793a"},"13.3. \u4e94\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u548c\u5220\u9664\u4ee5\u540e\uff0c\u6ce8\u610f\u91cd\u65b0\u8ba1\u7b97\u6811\u9ad8\u5b57\u6bb5"),(0,m.kt)("li",{parentName:"ol"},"\u5f15\u5165\u4e86 NIL \u9636\u6bb5\uff0c\u4ee3\u66ff NULL\uff0cNULL \u4e0d\u53ef\u8bbf\u95ee\uff0cNIL \u662f\u4e00\u4e2a\u662f\u5b9e\u9645\u8282\u70b9\uff0c\u53ef\u8bbf\u95ee")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define H(root) (root)->h\n#define K(root) (root)->key\n#define L(root) (root)->lchild\n#define R(root) (root)->rchild\n\ntypedef struct Node {\n    int key, h;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode __NIL;\n#define NIL (&__NIL)\n__attribute__((constructor))\nvoid init_NIL() {\n    NIL->key = NIL->h = 0;\n    NIL->lchild = NIL->rchild = NIL;\n    return ;\n}\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->h = 1;\n    p->lchild = p->rchild = NIL;\n    return p;\n}\n\nvoid update_height(Node *root) {\n    root->h = (H(L(root)) > H(R(root)) ? H(L(root)) : H(R(root))) + 1;\n    return ;\n}\n\nNode *left_rotate(Node *root) {\n    Node *temp = root->rchild;\n    root->rchild = temp->lchild;\n    temp->lchild = root;\n    update_height(root);\n    update_height(temp);\n    return temp;\n}\n\nNode *right_rotate(Node *root) {\n    Node *temp = root->lchild;\n    root->lchild = temp->rchild;\n    temp->rchild = root;\n    update_height(root);\n    update_height(temp);\n    return temp;\n}\n\nNode *maintain(Node *root) {\n    if (abs(H(L(root)) - H(R(root))) <= 1) return root;\n    if (H(L(root)) > H(R(root))) {\n        if (H(R(L(root))) > H(L(L(root)))) {\n            root->lchild = left_rotate(root->lchild);\n        }\n        root = right_rotate(root);\n    } else {\n        if (H(L(R(root))) > H(R(R(root)))) {\n            root->rchild = right_rotate(root->rchild);\n        }\n        root = left_rotate(root);\n    }\n    return root;\n}\n\nNode *insert(Node *root, int key) {\n    if (root == NIL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (root->key > key) root->lchild = insert(root->lchild, key);\n    else root->rchild = insert(root->rchild, key);\n    update_height(root);\n    return maintain(root);\n}\n\nNode *predeccessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild != NIL) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase(Node *root, int key) {\n    if (root == NIL) return root;\n    if (root->key > key) {\n        root->lchild = erase(root->lchild, key);\n    } else if (root->key < key) {\n        root->rchild = erase(root->rchild, key);\n    } else {\n        if (root->lchild == NIL || root->rchild == NIL) {\n            Node *temp = root->lchild == NIL ? root->rchild : root->lchild;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predeccessor(root);\n            root->key = temp->key;\n            root->lchild = erase(root->lchild, temp->key);\n        }\n    }\n    return maintain(root);\n}\n\nvoid clear(Node *root) {\n    if (root == NIL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NIL) return ;\n    printf("(%d, %d, %d)\\n", K(root), K(L(root)), K(R(root)));\n    output(root->lchild);\n    output(root->rchild);\n    return ;\n}\n\nint main() {\n    #define MAX_OP 20\n    Node *root = NIL;\n    for (int i = 0; i < MAX_OP; i++) {\n        int val = rand() % 100;\n        root = insert(root, val);\n    }\n    output(root);\n    int val;\n    while (~scanf("%d", &val)) {\n        root = erase(root, val);\n        printf("erase %d from AVL tree\\n", val);\n        output(root);\n    }\n    return 0;\n}\n')),(0,m.kt)("h1",{id:"14-sb\u6811"},"14. SB\u6811"),(0,m.kt)("p",null,"SB \u6811 :\u540d\u79f0:Size Balanced \u6811"),(0,m.kt)("p",null,"\u6bcf\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u4e0d\u5c0f\u4e8e\u5176\u5144\u5f1f\u7684\u5b50\u6811\u5927\u5c0f"),(0,m.kt)("p",null,"\u6027\u8d28:\nSize(left) >= Size(right->left)\nSize(left) >= Size(right->right)\nSize(right) >= Size(left->left)\nSize(right) >= Size(left->right)\n\u4f18\u70b9:\n\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\u505a\u4e86\u9650\u5236,\u6240\u4ee5\u6574\u68f5\u6811\u4e0d\u4f1a\u9000\u5316\u6210\u4e00\u4e2a\u94fe\u8868"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152513580",src:n(54175).Z})),(0,m.kt)("p",null,"\u601d\u8003:\n1\u3001\u9ad8\u5ea6\u4e3a H \u7684 BS \u6811,\u6240\u5305\u542b\u7684\u8282\u70b9\u6570\u91cf\u5728\u4ec0\u4e48\u8303\u56f4\u4e4b\u5185?\n2\u3001\u9ad8\u5ea6\u4e3a H \u7684 SB \u6811,\u6240\u5305\u542b\u7684\u8282\u70b9\u6570\u91cf\u5728\u4ec0\u4e48\u8303\u56f4\u4e4b\u5185?"),(0,m.kt)("p",null,"\uff2daintain (T) \u7528\u4e8e\u4fee\u590d\u4ee5 T \u4e3a\u6839\u7684 SBT \u3002\u7531\u4e8e\u6027\u8d28(a)\u548c(b)\u662f\u5bf9\u79f0\u7684\uff0c\u4e0b\u9762\u4ec5\u8ba8\u8bba\u5bf9\u6027\u8d28(a)\u7684\u4fee\u590d\u3002"),(0,m.kt)("h3",{id:"1401-case-1-s-left-left-t--s-right-t--"},"14.0.1. Case 1: s[ Left[ Left","[ T ]"," ]>s[ Right","[ T ]"," ]"),(0,m.kt)("p",null,"\u5728\u4e0b\u56fe\u4e2d\uff0c\u5c31\u662f\u8bf4 s","[A]",">s","[R]"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(88421).Z})),(0,m.kt)("p",null,"\u9996\u5148\u6267\u884c\u53f3\u65cb\uff08Right-Rotate (T)\uff09\u53ef\u5f97"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(81745).Z})),(0,m.kt)("p",null,"\u6709\u53ef\u80fd\u65cb\u8f6c\u540e\u7684\u6811\u4ecd\u7136\u4e0d\u662fSBT,\u9700\u8981\u518d\u6b21\u6267\u884cMaintain(T)"),(0,m.kt)("p",null,"\u7531\u4e8eL\u7684\u53f3\u513f\u5b50\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u56e0\u6b64\u9700\u8981\u6267\u884cMaintain(L)"),(0,m.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u60c5\u51b5\u5148\u6267\u884c\u4e00\u6b21Right-Rotate (T)\uff0c\u63a5\u7740\u6267\u884cMaintain (T) \u4fdd\u8bc1T\u4e3aSBT\uff0c\u7136\u540e\u6267\u884cMaintain(L)\uff0c\u4fdd\u8bc1L\u4e3aSBT"),(0,m.kt)("h3",{id:"1402-case-2-s-right-left-t--s-right-t--"},"14.0.2. Case 2: s[ right[ left","[ t ]"," ]>s[ right","[ t ]"," ]"),(0,m.kt)("p",null,"\u5728\u4e0b\u56fe\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4 s","[B]",">s","[R]"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(48674).Z})),(0,m.kt)("p",null,"\u5148\u6267\u884c\u5de6\u65cbLeft-Rotate(L)\u3002\u5982\u4e0b\u56fe"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(57229).Z})),(0,m.kt)("p",null,"\u6267\u884c\u53f3\u65cbRight-Rotate(T)\uff0c\u5982\u4e0b\u56fe\uff1a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:n(49567).Z})),(0,m.kt)("p",null,"\u63a5\u7740\u6267\u884cMaintain (L) \u548cMaintain (T)\uff0c\u6765\u4fdd\u8bc1L\u548cT\u662fSBT"),(0,m.kt)("p",null,"\u540c\u7406\u6267\u884cMaintain (B)"),(0,m.kt)("h1",{id:"15-\u7ea2\u9ed1\u6811\uff08\u4e0a\uff09"},"15. ==\u7ea2\u9ed1\u6811\uff08\u4e0a\uff09=="),(0,m.kt)("h2",{id:"151-\u4e00\u3001\u5e73\u8861\u6761\u4ef6"},"15.1. \u4e00\u3001\u5e73\u8861\u6761\u4ef6"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u8282\u70b9\u975e\u9ed1\u65e2\u7ea2"),(0,m.kt)("li",{parentName:"ol"},"\u6839\u8282\u70b9\u662f\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u53f6\u5b50\uff08NIL\uff09\u7ed3\u70b9\u662f\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u7ea2\u8272\u8282\u70b9\u4e0b\u9762\u63a5\u4e24\u4e2a\u9ed1\u8272\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u8def\u5f84\u4e0a\uff0c\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c")),(0,m.kt)("h3",{id:"1511-\u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6"},"15.1.1. \u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6"),(0,m.kt)("p",null,"\u7b2c4\u6761\u548c\u7b2c5\u6761\u6761\u4ef6\uff0c\u6ce8\u5b9a\u4e86\uff0c\u7ea2\u9ed1\u6811\u4e2d\u6700\u957f\u8def\u5f84\u662f\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u7684 2 \u500d\u3002"),(0,m.kt)("p",null,"\u672c\u8d28\u4e0a\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662f\u901a\u8fc7\u6811\u9ad8\u6765\u63a7\u5236\u5e73\u8861\u7684\u3002"),(0,m.kt)("p",null,"\u7ea2\u9ed1\u6811\u6bd4 AVL \u6811\u6811\u9ad8\u63a7\u5236\u6761\u4ef6\u8981\u66f4\u677e\u6563\uff0c\u7ea2\u9ed1\u6811\u5728\u53d1\u751f\u8282\u70b9\u63d2\u5165\u548c\u5220\u9664\u4ee5\u540e\uff0c\u53d1\u751f\u8c03\u6574\u7684\u6982\u7387\uff0c\u6bd4 AVL \u6811\u8981\u66f4\u5c0f\u3002"),(0,m.kt)("h2",{id:"152-\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d"},"15.2. \u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u7ea2\u9ed1\u6811\u7684\u63d2\u5165\u8c03\u6574\uff0c\u8981\u7ad9\u5728==\u7956\u7236\u8282\u70b9==\u5411\u4e0b\u8fdb\u884c\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u8c03\u6574\uff0c\u8981\u7ad9\u5728==\u7236\u8282\u70b9==\u5411\u4e0b\u8fdb\u884c\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\uff0c\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u53cc\u7ea2\u60c5\u51b5"),(0,m.kt)("li",{parentName:"ol"},"\u65b0\u63d2\u5165\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u7ea2\u8272\uff0c\u63d2\u5165\u9ed1\u8272\u8282\u70b9\u4e00\u5b9a\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u8fdd\u53cd\u6761\u4ef65\uff0c\u63d2\u5165\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u4e00\u5b9a\u4ea7\u751f\u51b2\u7a81"),(0,m.kt)("li",{parentName:"ol"},"\u628a\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u60f3\u8c61\u6210\u4e00\u68f5\u5927\u7684\u7ea2\u9ed1\u6811\u4e2d\u7684\u5c40\u90e8\u5b50\u6811"),(0,m.kt)("li",{parentName:"ol"},"\u5c40\u90e8\u8c03\u6574\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u5168\u5c40\uff0c\u8c03\u6574\u524d\u540e\u7684\u8def\u5f84\u4e0a\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c")),(0,m.kt)("h2",{id:"153-\u4e09\u3001\u63d2\u5165\u7b56\u7565"},"15.3. \u4e09\u3001\u63d2\u5165\u7b56\u7565"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53d4\u53d4\u8282\u70b9\u4e3a\u7ea2\u8272\u7684\u65f6\u5019\uff0c\u4fee\u6539\u4e09\u5143\u7ec4\u5c0f\u5e3d\u5b50\uff0c\u6539\u6210\u7ea2\u9ed1\u9ed1"),(0,m.kt)("li",{parentName:"ol"},"\u53d4\u53d4\u8282\u70b9\u4e3a\u9ed1\u8272\u7684\u65f6\u5019\uff0c\u53c2\u8003 AVL \u6811\u7684\u5931\u8861\u60c5\u51b5\uff0c\u5206\u6210 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mi",{parentName:"mrow"},"R")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"LL,LR,RL,RR")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"))))),", \u5148\u53c2\u8003 AVL \u6811\u7684\u65cb\u8f6c\u8c03\u6574\u7b56\u7565\uff0c\u7136\u540e\u518d\u4fee\u6539\u4e09\u5143\u7ec4\u7684\u989c\u8272\uff0c\u6709\u4e24\u79cd\u8c03\u6574\u7b56\u7565\uff1a\u7ea2\u8272\u4e0a\u6d6e\uff0c\u7ea2\u8272\u4e0b\u6c89\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u4e24\u5927\u7c7b\u60c5\u51b5\uff0c\u5305\u542b 8 \u79cd\u5c0f\u60c5\u51b5")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204513136",src:n(25585).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:1\u548c20\u4fee\u6539\u6210\u9ed1\u8272,15\u4fee\u6539\u6210\u7ea2\u8272(\u6240\u8c13\u7684\u7ea2\u8272\u4e0a\u9876)"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204553104",src:n(56841).Z})),(0,m.kt)("p",null,"\u5904\u7406\u7406\u529e\u6cd5:\u5927\u53f3(\u5de6)\u65cb,20\u8c03\u6574\u6210\u7ea2\u8272,15\u8c03\u6574\u6210\u9ed1\u8272,\u5373\u53ef\u641e\u5b9a\u95ee\u9898"),(0,m.kt)("p",null,"\u53ea\u670917\u4e0d\u786e\u5b9a"),(0,m.kt)("p",null,"\u5176\u4f59\u60c5\u51b5\u5747\u53ef\u4ee5\u8c03\u6574\u6210\u4e3a\u60c5\u51b5\u4e8c\u53ef\u5904\u7406\u7406\u7684\u60c5\u51b5,\u6240\u4ee5\u5c31\u4e0d\u5355\u72ec\u8ba8\u8bba\u4e86\u3002"),(0,m.kt)("h2",{id:"154-\u56db\u3001\u4ee3\u7801\u6f14\u793a"},"15.4. \u56db\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\uff0c\u53d1\u6b63\u5728\u9012\u5f52\u7684\u56de\u6eaf\u9636\u6bb5"),(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528 goto \u8bed\u53e5\uff0c8\u884c\u4ee3\u7801\uff0c\u53d8\u6210\u4e864\u884c"),(0,m.kt)("li",{parentName:"ol"},"\u5904\u7406\u6839\u8282\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\uff0c\u901a\u8fc7\u4ee3\u7801\u5c01\u88c5\uff0c",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"t")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"insert->\\_\\_insert")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.9695199999999999em",verticalAlign:"-0.31em"}}),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"))))))),(0,m.kt)("h1",{id:"16-\u7ea2\u9ed1\u6811\uff08\u4e0b\uff09"},"16. ==\u7ea2\u9ed1\u6811\uff08\u4e0b\uff09=="),(0,m.kt)("h2",{id:"161-\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0"},"16.1. \u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u4f1a\u5bf9\u7ea2\u9ed1\u6811\u7684\u5e73\u8861\u4ea7\u751f\u5f71\u54cd"),(0,m.kt)("li",{parentName:"ol"},"\u5ea6\u4e3a1\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u552f\u4e00\u5b50\u5b69\u5b50\uff0c\u4e00\u5b9a\u662f\u7ea2\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a1\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5220\u9664\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a0\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u53cc\u91cd\u9ed1\u7684 NIL \u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u8c03\u6574\uff0c\u5c31\u662f\u4e3a\u4e86\u5e72\u6389\u53cc\u91cd\u9ed1\uff08\u9ed1\u8272\u4e0a\u6d6e\uff09")),(0,m.kt)("h2",{id:"162-\u4e8c\u3001\u5220\u9664\u8c03\u6574"},"16.2. \u4e8c\u3001\u5220\u9664\u8c03\u6574"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u53cc\u91cd\u9ed1\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u5144\u5f1f\u8282\u70b9\u4e0b\u9762\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u4e5f\u662f\u9ed1\u8272\uff0c\u7236\u8282\u70b9\u589e\u52a0\u4e00\u91cd\u9ed1\u8272\uff0c\u53cc\u91cd\u9ed1\u4e0e\u5144\u5f1f\u8282\u70b9\uff0c\u5206\u522b\u51cf\u5c11\u4e00\u91cd\u9ed1\u8272\u3002")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u5e76\u4e14\uff0c\u5144\u5f1f\u8282\u70b9\u4e2d\u6709\u7ea2\u8272\u5b50\u8282\u70b9"),(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"R\uff08\u5144\u5f1f\uff09R\uff08\u53f3\u5b50\u8282\u70b9\uff09\uff0c\u5de6\u65cb\uff0c\u65b0\u6839\u6539\u6210\u539f\u6839\u7684\u989c\u8272\uff0c\u5c06\u65b0\u6839\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6539\u6210\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"R\uff08\u5144\u5f1f\uff09L\uff08\u5de6\u5b50\u8282\u70b9\uff09\uff0c\u5148\u5c0f\u53f3\u65cb\uff0c\u5bf9\u8c03\u65b0\u6839\u4e0e\u539f\u6839\u7684\u989c\u8272\uff0c\u8f6c\u6210\u4e0a\u4e00\u79cd\u60c5\u51b5"),(0,m.kt)("li",{parentName:"ol"},"LL \u540c\u7406 RR"),(0,m.kt)("li",{parentName:"ol"},"LR \u540c\u7406 RL"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5144\u5f1f\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u901a\u8fc7\u65cb\u8f6c\uff0c\u8f6c\u53d8\u6210\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\u7684\u60c5\u51b5"))),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204629813",src:n(10609).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:brother \u8c03\u6574\u4e3a\u7ea2\u8272,x \u51cf\u5c11\u4e00\u91cd\u9ed1\u8272,father \u589e\u52a0\u4e00\u91cd\u9ed1\u8272"),(0,m.kt)("p",null,"\u9ed1\u8272\u4e0a\u6d6e\uff1a\u6839\u8282\u70b9\u76f4\u63a5\u5e72\u6389"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204703406",src:n(17108).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204230645450",src:n(18169).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:brother \u53f3(\u5de6)\u65cb,51\u53d8\u9ed1,72\u53d8\u7ea2,\u8f6c\u6210\u5904\u7406\u60c5\u51b5\u4e09"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204736229",src:n(97995).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204230035628",src:n(62428).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:father \u5de6(\u53f3)\u65cb,\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a48\u7684\u989c\u8272,\u6240\u4ee538\u6539\u6210\u9ed1\u8272,51\u6539\u621038\u7684\u989c\u8272,x \u51cf\u5c11\n\u4e00\u91cd\u9ed1\u8272,72\u6539\u6210\u9ed1\u8272"),(0,m.kt)("p",null,"28\uff0c72\uff0c64\uff0c85\u786e\u5b9a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204231107195",src:n(93598).Z})),(0,m.kt)("p",null,"\u5144\u5f1f\u8282\u70b9\u662f\u7ea2\u8272\u60c5\u51b5\uff1a\u5de6(\u53f3)\u65cb\uff0c\u65b0\u6839\u53d8\u9ed1\uff0c\u65e7\u6839\u53d8\u7ea2"),(0,m.kt)("h2",{id:"163-\u4e09\u3001\u4ee3\u7801\u6f14\u793a"},"16.3. \u4e09\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u8fdb\u884c LR/RL \u7c7b\u578b\u5224\u65ad\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5224\u65ad LL \u5b50\u6811\u662f\u5426\u4e3a\u9ed1\u8272\uff0cLL \u5b50\u6811\u6709\u53ef\u80fd\u662f NIL \u8282\u70b9\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u8bfb\u5230\u7684\u989c\u8272\u53ef\u80fd\u662f\u53cc\u91cd\u9ed1\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u5224\u65ad\u65b9\u6cd5\u5c31\u662f\u3010LL \u5b50\u6811\u4e0d\u662f\u7ea2\u8272\u3011\u3002")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205001401045",src:n(53835).Z})),(0,m.kt)("p",null,"\u7a7a\u5fc3\u4ee3\u8868\u7ea2\u8272\uff1a==RED:LR \t\t!=RED:LL"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204235441764",src:n(35774).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#define RED 0\n#define BLACK 1\n#define DOUBLE_BLACK 2\n\ntypedef struct Node {\n    int key, color; // 0 red, 1 black, 2 double black\n    struct Node *lchild, *rchild;\n} Node;\n\nNode _NIL, * const NIL = &_NIL;\n\n__attribute__((constructor))\nvoid init_NIL() {\n    NIL->key = 0;\n    NIL->lchild = NIL->rchild = NIL;\n    NIL->color = BLACK;\n    return ;\n}\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->lchild = p->rchild = NIL;\n    p->color = RED;\n    return p;\n}\n\nint hasRedChild(Node *root) {\n    return root->lchild->color == RED || root->rchild->color == RED;\n}\n\nNode *left_rotate(Node *root) {\n    Node *temp = root->rchild;\n    root->rchild = temp->lchild;\n    temp->lchild = root;\n    return temp;\n}\n\nNode *right_rotate(Node *root) {\n    Node *temp = root->lchild;\n    root->lchild = temp->rchild;\n    temp->rchild = root;\n    return temp;\n}\n\nNode *insert_maintain(Node *root) {\n    if (!hasRedChild(root)) return root;\n    if (root->lchild->color == RED && root->rchild->color == RED) {\n        if (!hasRedChild(root->lchild) && !hasRedChild(root->rchild)) return root;\n        goto insert_end;\n    }\n    if (root->lchild->color == RED) {\n        if (!hasRedChild(root->lchild)) return root;\n        if (root->lchild->rchild->color == RED) {\n            root->lchild = left_rotate(root->lchild);\n        }\n        root = right_rotate(root);\n    } else {\n        if (!hasRedChild(root->rchild)) return root;\n        if (root->rchild->lchild->color == RED) {\n            root->rchild = right_rotate(root->rchild);\n        }\n        root = left_rotate(root);\n    }\ninsert_end:\n    root->color = RED;\n    root->lchild->color = root->rchild->color = BLACK;\n    return root;\n}\n\nNode *__insert(Node *root, int key) {\n    if (root == NIL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (root->key > key) root->lchild = __insert(root->lchild, key);\n    else root->rchild = __insert(root->rchild, key);\n    return insert_maintain(root);\n}\n\nNode *insert(Node *root, int key) {\n    root = __insert(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nNode *predeccessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild != NIL) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase_maintain(Node *root) {\n    if (root->lchild->color != DOUBLE_BLACK && root->rchild->color != DOUBLE_BLACK) return root;\n    if (root->rchild->color == DOUBLE_BLACK) {\n        if (root->lchild->color == RED) {\n            root->color = RED;\n            root->lchild->color = BLACK;\n            root = right_rotate(root);\n            root->rchild = erase_maintain(root->rchild);\n            return root;\n        }\n        if (!hasRedChild(root->lchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->lchild->lchild->color != RED) {\n            root->lchild->rchild->color = BLACK;\n            root->lchild->color = RED;\n            root->lchild = left_rotate(root->lchild);\n        }\n        root->lchild->color = root->color;\n        root->rchild->color -= 1;\n        root = right_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    } else {\n        if (root->rchild->color == RED) {\n            root->color = RED;\n            root->rchild->color = BLACK;\n            root = left_rotate(root);\n            root->lchild = erase_maintain(root->lchild);\n            return root;\n        }\n        if (!hasRedChild(root->rchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->rchild->rchild->color != RED) {\n            root->rchild->lchild->color = BLACK;\n            root->rchild->color = RED;\n            root->rchild = right_rotate(root->rchild);\n        }\n        root->rchild->color = root->color;\n        root->lchild->color -= 1;\n        root = left_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    }\n    return root;\n}\n\nNode *__erase(Node *root, int key) {\n    if (root == NIL) return root;\n    if (root->key > key) {\n        root->lchild = __erase(root->lchild, key);\n    } else if (root->key < key) {\n        root->rchild = __erase(root->rchild, key);\n    } else {\n        if (root->lchild == NIL || root->rchild == NIL) {\n            Node *temp = root->lchild == NIL ? root->rchild : root->lchild;\n            temp->color += root->color;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predeccessor(root);\n            root->key = temp->key;\n            root->lchild = __erase(root->lchild, temp->key);\n        }\n    }\n    return erase_maintain(root);\n}\n\nNode *erase(Node *root, int key) {\n    root = __erase(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nvoid clear(Node *root) {\n    if (root == NIL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NIL) return ;\n    printf("%d [%d, %d] %s\\n", \n        root->key, \n        root->lchild->key, \n        root->rchild->key,\n        root->color ? "BLACK" : "RED"\n    );\n    output(root->lchild);\n    output(root->rchild);\n    return ;\n}\n\nint main() {\n    int op, val;\n    Node *root = NIL;\n    while (~scanf("%d%d", &op, &val)) {\n        switch (op) {\n            case 1: root = insert(root, val); break;\n            case 2: root = erase(root, val); break;\n        }\n        output(root);\n    }\n    return 0;\n}\n\n')))}c.isMDXComponent=!0},23219:function(a,e,n){"use strict";e.Z=n.p+"assets/images/1600316277-YhGBBy-685.\u5197\u4f59\u8fde\u63a5II1-89a69aa32aad754bbc4acfa3b6091c8f.png"},69792:function(a,e,n){"use strict";e.Z=n.p+"assets/images/1600316290-fCDJSg-685.\u5197\u4f59\u8fde\u63a5II2-82672abac30c09478733e72586545e45.png"},88421:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20131129202211734-3c2d544acf3933d5bb11c88bc9ef632c.bin"},81745:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20131129203355843-41b0690f854da71dd51826a95e6e09d0.bin"},48674:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20131129203745125-a7258c59f13e7dc1686974eb04d9ed25.bin"},57229:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20131129203857906-bcd460ea023ee2ac18ac59e2febc1931.bin"},49567:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20131129203924718-8b8beb0f8722c4a2b24194988b0cd492.bin"},17155:function(a,e,n){"use strict";e.Z=n.p+"assets/images/20151212110619965-f83b705c461c7a6abf1d9ae3fa9c13d5.bin"},83236:function(a,e,n){"use strict";e.Z=n.p+"assets/images/4_fig1-3787e682b75c7e163ca123a74370c355.png"},93544:function(a,e,n){"use strict";e.Z=n.p+"assets/images/849589-20171015223238449-2146169197-9b053bb1c7bf889037b38345190b913f.gif"},93073:function(a,e,n){"use strict";e.Z=n.p+"assets/images/849589-20180402133438219-1946132192-650c82c2b5cce8c1d3dde9aa493862a5.png"},24586:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201008200910691-3baab76da896d3a08ac944b03c954f74.png"},25438:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201017104134948-0c87b2c8bc7f6d8939b9841251005089.png"},79680:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201018110356663-969cd9cdfee41ac987a1ac951737d60b.png"},68969:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201018110407696-12829b61a09f915a025231ed43aa984f.png"},42219:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201018110431340-2e94e0b992effa739ff5de9adb9e804c.png"},82290:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201018110438419-e36fa1280c0a43c5aa0bba7c049c36ed.png"},52503:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20201022132834261-d299dffb7cba1f908e56d4ccf6265f0b.png"},9903:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210121192544196-d89e97924f384bf79b855f068b028b00.png"},59530:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210121192854505-fb96ca781f4a9ef6abf7f67001a2033b.png"},70661:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210125213921849-fb9b95a291d43e9a12469b4f409c2465.png"},22359:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210125233324739-bd4a549c1eed282c4c101fad97613d84.png"},56437:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126164802088-6dc15da5699c457f465c942e5bad1c28.png"},24661:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126223755896-1611674126158-de18c0ec6ee5f758c66e49e14da4707d.png"},43632:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126223810625-1611674126158-ac8107605c7fda0814449217f91eda92.png"},84827:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126223819648-1611674126158-f3e8e4e9046021cbccdaead65f053591.png"},99735:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126223842372-1611674126158-ba2f78d18aee2d9364bd58cdb268e26b.png"},24036:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126231420260-6bde8b905cecb81db7a15b3b9a2f68fb.png"},73192:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210126235307421-1623756908422-2176259e3577b5f1455264448e32cece.png"},17178:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210127193634993-0fe7ec113c3e15e7f17d855724e45688.png"},98658:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210127193826398-67e299a2b2bce03bb6e9c5c4fc69754b.png"},46422:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210131134715524-f4bca8f907a05fbe788232fea3c71726.png"},83276:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210131145149668-1a15373ee193c11389cf5d5ffbf69e2b.png"},23420:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210131164748767-2bf27c5277cd46c0e9474bdd099f6e48.png"},20512:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210131164801074-b1b07935ae49d51ebe03512907029da7.png"},95910:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210131164827184-cbb2372ca0c0d668ec155fe2590164cc.png"},25585:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204204513136-685128ecde9a9e37f2e59faa6da7fe32.png"},56841:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204204553104-c23c65a90f0d3c0f8ad0173aa32e8729.png"},10609:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204204629813-292fab26710616aa6de93af4f0a0df23.png"},17108:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204204703406-0ae511bcea5397a4b92eb943394be0a3.png"},97995:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204204736229-f43546b9d69b336412b909f23146a3f1.png"},62428:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204230035628-f954b7b2f8d32cd0ea5cff29aa00ff3b.png"},18169:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204230645450-f954b7b2f8d32cd0ea5cff29aa00ff3b.png"},93598:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204231107195-d1df6121674e392426d3a3433262334e.png"},35774:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210204235441764-33741c12d4b55c4572266686c318cc42.png"},53835:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210205001401045-885ef269eb9d62952570b1e1c1d62a7d.png"},82091:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210205152153712-6329b9b605f677c2192a1d32c854e43a.png"},52939:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210205152314037-3602ab13250a39db57698fc93bc0c3fe.png"},54175:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210205152513580-31715422c5528c63968acdd375e7ba19.png"},50703:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210217201415813-3188ca5f0d8817b304d57dd40e14c7fa.png"},85948:function(a,e,n){"use strict";e.Z=n.p+"assets/images/image-20210308140505286-ded6edfb2f76b68c2cc8c9911150c3cd.png"}}]);