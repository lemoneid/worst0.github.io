(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[3580],{3905:function(a,e,t){"use strict";t.d(e,{Zo:function(){return i},kt:function(){return k}});var n=t(67294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function m(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function s(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function o(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},m=Object.keys(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var l=n.createContext({}),p=function(a){var e=n.useContext(l),t=e;return a&&(t="function"==typeof a?a(e):s(s({},e),a)),t},i=function(a){var e=p(a.components);return n.createElement(l.Provider,{value:e},a.children)},N={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,m=a.originalType,l=a.parentName,i=o(a,["components","mdxType","originalType","parentName"]),c=p(t),k=r,h=c["".concat(l,".").concat(k)]||c[k]||N[k]||m;return t?n.createElement(h,s(s({ref:e},i),{},{components:t})):n.createElement(h,s({ref:e},i))}));function k(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var m=t.length,s=new Array(m);s[0]=c;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=a,o.mdxType="string"==typeof a?a:r,s[1]=o;for(var p=2;p<m;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},54837:function(a,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return N}});var n=t(22122),r=t(19756),m=(t(67294),t(3905)),s=["components"],o={id:"A11.\u5e73\u8861\u6811",title:"A11.\u5e73\u8861\u6811","typora-root-url":"../"},l={unversionedId:"Algorithm/A11.\u5e73\u8861\u6811",id:"Algorithm/A11.\u5e73\u8861\u6811",isDocsHomePage:!1,title:"\u5e73\u8861\u6811",description:"\u4e00\u3001\u6027\u8d28",source:"@site/docs/2.Algorithm/A13.\u5e73\u8861\u6811.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/A11.\u5e73\u8861\u6811",permalink:"/Algorithm/A11.\u5e73\u8861\u6811",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/A13.\u5e73\u8861\u6811.md",version:"current",frontMatter:{id:"A11.\u5e73\u8861\u6811",title:"A11.\u5e73\u8861\u6811","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811",permalink:"/Algorithm/A10.\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811"},next:{title:"\u5e76\u67e5\u96c6",permalink:"/Algorithm/A11.\u5e76\u67e5\u96c6"}},p=[{value:"\u4e00\u3001\u6027\u8d28",id:"\u4e00\u3001\u6027\u8d28",children:[]},{value:"\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c",id:"\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c",children:[]},{value:"\u4e09\u3001\u5220\u9664\u64cd\u4f5c",id:"\u4e09\u3001\u5220\u9664\u64cd\u4f5c",children:[]},{value:"\u56db\u3001\u968f\u5802\u7ec3\u4e60",id:"\u56db\u3001\u968f\u5802\u7ec3\u4e60",children:[]},{value:"\u4e94\u3001\u6269\u5c55\u5185\u5bb9",id:"\u4e94\u3001\u6269\u5c55\u5185\u5bb9",children:[]},{value:"\u4e8c\u3001\u6027\u8d28",id:"\u4e8c\u3001\u6027\u8d28",children:[]},{value:"\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565",id:"\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565",children:[]},{value:"\u4e94\u3001\u4ee3\u7801\u6f14\u793a",id:"\u4e94\u3001\u4ee3\u7801\u6f14\u793a",children:[]},{value:"14.0.1. Case 1: s[ Left[ Left T  ]&gt;s[ Right T  ]",id:"1401-case-1-s-left-left-t--s-right-t--",children:[]},{value:"14.0.2. Case 2: s[ right[ left t  ]&gt;s[ right t  ]",id:"1402-case-2-s-right-left-t--s-right-t--",children:[]},{value:"\u4e00\u3001\u5e73\u8861\u6761\u4ef6",id:"\u4e00\u3001\u5e73\u8861\u6761\u4ef6",children:[]},{value:"\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d",id:"\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d",children:[]},{value:"\u4e09\u3001\u63d2\u5165\u7b56\u7565",id:"\u4e09\u3001\u63d2\u5165\u7b56\u7565",children:[]},{value:"\u56db\u3001\u4ee3\u7801\u6f14\u793a",id:"\u56db\u3001\u4ee3\u7801\u6f14\u793a",children:[]},{value:"\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0",id:"\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0",children:[]},{value:"\u4e8c\u3001\u5220\u9664\u8c03\u6574",id:"\u4e8c\u3001\u5220\u9664\u8c03\u6574",children:[]},{value:"\u4e09\u3001\u4ee3\u7801\u6f14\u793a",id:"\u4e09\u3001\u4ee3\u7801\u6f14\u793a",children:[]},{value:"\u7ea2\u9ed1\u6811",id:"\u7ea2\u9ed1\u6811",children:[]},{value:"\u591a\u8def\u67e5\u627e\u68112 3\u6811",id:"\u591a\u8def\u67e5\u627e\u68112-3\u6811",children:[{value:"2-3\u6811",id:"2-3\u6811",children:[]}]},{value:"B/B+\u6811",id:"bb\u6811",children:[{value:"B/B+\u6811\u7684\u533a\u522b",id:"bb\u6811\u7684\u533a\u522b",children:[]},{value:"B\u6811\u548c\u7ea2\u9ed1\u6811\u5e94\u7528\u573a\u666f",id:"b\u6811\u548c\u7ea2\u9ed1\u6811\u5e94\u7528\u573a\u666f",children:[]}]}],i={toc:p};function N(a){var e=a.components,o=(0,r.Z)(a,s);return(0,m.kt)("wrapper",(0,n.Z)({},i,o,{components:e,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"\u4e8c\u53c9\u6392\u5e8f\u6811"},"\u4e8c\u53c9\u6392\u5e8f\u6811"),(0,m.kt)("h3",{id:"\u4e00\u3001\u6027\u8d28"},"\u4e00\u3001\u6027\u8d28"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5de6\u5b50\u6811 < \u6839\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u53f3\u5b50\u6811 > \u6839\u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217")),(0,m.kt)("p",null,"\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u5b9a\u4e49\u4e00\u79cd\u6027\u8d28\uff0c\u5e76\u4e14\u7ef4\u62a4\u8fd9\u79cd\u6027\u8d28\u3002"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6811\u4e2d\uff0c\u7b2c i \u5c42\u6700\u591a\u6709$ 2^{i-1}$ \u4e2a\u7ed3\u70b9\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u5982\u679c\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a K\uff0c\u90a3\u4e48\u6b64\u4e8c\u53c9\u6811\u6700\u591a\u6709 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"2"),(0,m.kt)("mi",{parentName:"msup"},"K")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^K-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.924661em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8413309999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.07153em"}},"K")))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," \u4e2a\u7ed3\u70b9\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6811\u4e2d\uff0c\u7ec8\u7aef\u7ed3\u70b9\u6570\uff08\u53f6\u5b50\u7ed3\u70b9\u6570\uff09\u4e3a n0\uff0c\u5ea6\u4e3a 2 \u7684\u7ed3\u70b9\u6570\u4e3a n2\uff0c\u5219 n0=n2+1")),(0,m.kt)("h3",{id:"\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c"},"\u4e8c\u3001\u63d2\u5165\u64cd\u4f5c"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u7684\u65b0\u8282\u70b9\uff0c\u4e00\u5b9a\u4f1a\u505a\u4e3a\u53f6\u5b50\u7ed3\u70b9")),(0,m.kt)("h3",{id:"\u4e09\u3001\u5220\u9664\u64cd\u4f5c"},"\u4e09\u3001\u5220\u9664\u64cd\u4f5c"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a0\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a1\u7684\u8282\u70b9\uff0c\u628a\u300e\u5b64\u513f\u5b50\u6811\u300f\u6302\u5230\u5176\u7236\u8282\u70b9\u4e0a\u9762\u53bb"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a2\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u5220\u9664\u5ea6\u4e3a1\u7684\u8282\u70b9")),(0,m.kt)("p",null,"\u5bf9\u4e8e\u5ea6\u4e3a2\u7684\u8282\u70b9\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u524d\u9a71\uff1a\u5de6\u5b50\u6811\u6700\u5927\u503c"),(0,m.kt)("li",{parentName:"ol"},"\u540e\u7ee7\uff1a\u53f3\u5b50\u6811\u6700\u5c0f\u503c")),(0,m.kt)("h3",{id:"\u56db\u3001\u968f\u5802\u7ec3\u4e60"},"\u56db\u3001\u968f\u5802\u7ec3\u4e60"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u6811\u5f62\u7ed3\u6784"),(0,m.kt)("li",{parentName:"ol"},"\u4e0d\u540c\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u67e5\u627e\u6548\u7387\u4e0d\u540c")),(0,m.kt)("p",null,"\u5e73\u5747\u67e5\u627e\u6548\u7387\uff1a\u8282\u70b9\u67e5\u627e\u6b21\u6570\u7684\u671f\u671b\u503c\uff0c",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mfrac",{parentName:"mrow"},(0,m.kt)("mtext",{parentName:"mfrac"},"\u603b\u6b21\u6570"),(0,m.kt)("mtext",{parentName:"mfrac"},"\u8282\u70b9\u6570\u91cf"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\frac{\u603b\u6b21\u6570}{\u8282\u70b9\u6570\u91cf}")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.217331em",verticalAlign:"-0.345em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,m.kt)("span",{parentName:"span",className:"mfrac"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.872331em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.6550000000000002em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u8282"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u70b9"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6570"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u91cf")))),(0,m.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,m.kt)("span",{parentName:"span",style:{top:"-3.394em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u603b"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6b21"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback mtight"},"\u6570"))))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,m.kt)("span",{parentName:"span"}))))),(0,m.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})))))),"\uff0c\u5047\u8bbe\u6bcf\u4e2a\u8282\u70b9\u7b49\u6982\u7387\u7684\u88ab\u67e5\u627e"),(0,m.kt)("h3",{id:"\u4e94\u3001\u6269\u5c55\u5185\u5bb9"},"\u4e94\u3001\u6269\u5c55\u5185\u5bb9"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u5220\u9664\u4ee3\u7801\u4f18\u5316",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u6389\u5904\u7406\u5ea6\u4e3a0\u7684\u4ee3\u7801\u903b\u8f91\uff0c\u4e0d\u5f71\u54cd\u4ee3\u7801\u6574\u4f53\u529f\u80fd"))),(0,m.kt)("li",{parentName:"ol"},"\u5982\u4f55\u89e3\u51b3==\u6392\u540d==\u76f8\u5173\u7684\u68c0\u7d22\u9700\u6c42",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u4fee\u6539\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u7ed3\u6784\u5b9a\u4e49\uff0c\u589e\u52a0 size \u5b57\u6bb5\uff0c\u8bb0\u5f55\u6bcf\u68f5\u6811\u7684\u8282\u70b9\u6570\u91cf"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k = LS - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"))))),"\uff0c\u6839\u8282\u70b9\u5c31\u662f\u6392\u540d\u7b2c k \u4f4d\u7684\u5143\u7d20"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k \\le LS")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83041em",verticalAlign:"-0.13597em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"))))),"\uff0c\u6392\u540d\u7b2c k \u4f4d\u7684\u5143\u7d20\u5728\u5de6\u5b50\u6811\u4e2d"),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mtext",{parentName:"mrow"},"\uff0c"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"a"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"c"),(0,m.kt)("msub",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msub"},"h"),(0,m.kt)("mi",{parentName:"msub"},"k")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"c"),(0,m.kt)("mi",{parentName:"mrow"},"h"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"k"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k \\gt LS\uff0csearch_k(root->rchild, k - LS - 1)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.73354em",verticalAlign:"-0.0391em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\uff0c"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"h"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,m.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,m.kt)("span",{parentName:"span"})))))),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8888799999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"h"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.76666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))))),(0,m.kt)("li",{parentName:"ol"},"\u89e3\u51b3 Top-K \u95ee\u9898\uff08\u627e\u5230\u5c0f\u4e8e\u7b2c k \u4f4d\u7684\u6240\u6709\u5143\u7d20\uff09",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u6839\u8282\u70b9\u5c31\u662f\u7b2c k \u4f4d\u5143\u7d20\u7684\u8bdd\uff0c\u5c31\u628a\u5de6\u5b50\u6811\u4e2d\u7684\u503c\u5168\u90e8\u8f93\u51fa\u51fa\u6765"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c k \u4f4d\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u524d k \u4f4d\u5143\u7d20\u5168\u90fd\u5728\u5de6\u5b50\u6811\u4e2d"),(0,m.kt)("li",{parentName:"ol"},"\u7b2c k \u4f4d\u5728\u53f3\u5b50\u6811\u4e2d\uff0c\u8bf4\u660e\u6839\u8282\u70b9\u548c\u5de6\u5b50\u6811\u4e2d\u7684\u5143\u7d20\uff0c\u90fd\u662f\u524d k \u4f4d\u5143\u7d20\u91cc\u9762\u7684\u503c"))),(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u548c\u5feb\u901f\u6392\u5e8f\u7684\u5173\u7cfb",(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u5feb\u901f\u6392\u5e8f\u5728\u601d\u7ef4\u903b\u8f91\u7ed3\u6784\u5c42\u9762\u7528\u7684\u6570\u636e\u7ed3\u6784"),(0,m.kt)("li",{parentName:"ol"},"\u601d\u80031\uff1a\u5feb\u901f\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u5efa\u6811\u65f6\u95f4\u590d\u6742\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u601d\u80032\uff1a\u5feb\u901f\u9009\u62e9\u7b97\u6cd5\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u4e4b\u95f4\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784")))),(0,m.kt)("p",null,"\u6240\u8c13\u7b97\u6cd5\u8bbe\u8ba1\u53ca\u5206\u6790\u80fd\u529b\uff1a\u5206\u7c7b\u8ba8\u8bba\u53ca\u5f52\u7eb3\u603b\u7ed3\u7684\u80fd\u529b"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#define KEY(n) (n ? n->key : 0)\n#define SIZE(n) (n ? n->size : 0)\n#define L(n) (n ? n->lchild : NULL)\n\ntypedef struct Node {\n    int key, size;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->size = 1;\n    p->lchild = p->rchild = NULL;\n    return p;\n}\n\nvoid update_size(Node *root) {\n    root->size = SIZE(root->lchild) + SIZE(root->rchild) + 1;\n    return ;\n}\n\nint search(Node *root, int val) {\n    if (root == NULL) return 0;\n    if (root->key == val) return 1;\n    if (val < root->key) return search(root->lchild, val);\n    return search(root->rchild, val);\n}\n\nint search_k(Node *root, int k) {\n    if (root == NULL) return -1;\n    if (SIZE(L(root)) == k - 1) return root->key;\n    if (k <= SIZE(L(root))) {\n        return search_k(root->lchild, k);\n    }\n    return search_k(root->rchild, k - SIZE(L(root)) - 1);\n}\n\nNode *insert(Node *root, int key) {\n    if (root == NULL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (key < root->key) root->lchild = insert(root->lchild, key);\n    else root->rchild = insert(root->rchild, key);\n    update_size(root);\n    return root;\n}\n\nNode *predecessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase(Node *root, int key) {\n    if (root == NULL) return NULL;\n    if (key < root->key) {\n        root->lchild = erase(root->lchild, key);\n    } else if (key > root->key) {\n        root->rchild = erase(root->rchild, key);\n    } else {\n        if (root->lchild == NULL || root->rchild == NULL) {\n            Node *temp = root->lchild ? root->lchild : root->rchild;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predecessor(root);\n            root->key = temp->key;\n            root->lchild = erase(root->lchild, temp->key);\n        }\n    }\n    update_size(root);\n    return root;\n}\n\nvoid clear(Node *root) {\n    if (root == NULL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid print(Node *root) {\n    printf("(%d[%d], %d, %d)\\n", \n           KEY(root), SIZE(root), \n           KEY(root->lchild), KEY(root->rchild)\n    );\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NULL) return ;\n    output(root->lchild);\n    print(root);\n    output(root->rchild);\n    return ;\n}\n\nvoid output_k(Node *root, int k) {\n    if (k == 0 || root == NULL) return ;\n    if (k <= SIZE(L(root))) {\n        output_k(root->lchild, k);\n    } else {\n        output(root->lchild);\n        print(root);\n        output_k(root->rchild, k - SIZE(L(root)) - 1);\n    }\n    return ;\n}\n\nint main() {\n    int op, val;\n    Node *root =  NULL;\n    while (~scanf("%d%d", &op, &val)) {\n        switch (op) {\n            case 0: printf("search %d, result : %d\\n", val, search(root, val)); break;\n            case 1: root = insert(root, val); break;\n            case 2: root = erase(root, val); break;\n            case 3: {\n                printf("search k = %d, result : %d\\n", \n                    val, search_k(root, val)); \n            } break;\n            case 4: { \n                printf("output top-%d elements\\n", val);\n                output_k(root, val); \n                printf("------------\\n");\n            } break;\n        }\n        if (op == 1 || op == 2) {\n            output(root);\n            printf("------------\\n");\n        }\n    }\n    return 0;\n}\n')),(0,m.kt)("p",null,"Leetcode 110\nLeetcode 669"),(0,m.kt)("h1",{id:"13-avl-\u6811"},"13. ==AVL \u6811=="),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5e73\u8861\u4e8c\u53c9\u6811\u6392\u5e8f\u6811\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u6240\u4ee5\u62e5\u6709\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u6240\u6709\u6027\u8d28"),(0,m.kt)("li",{parentName:"ol"},"\u5e73\u8861\u4e8c\u53c9\u6811\u6392\u5e8f\u6811\u7684\u5b66\u4e60\u91cd\u70b9\uff0c\u5728\u4e8e\u5e73\u8861\u6761\u4ef6\u4ee5\u53ca\u5e73\u8861\u8c03\u6574\u7684\u76f8\u5173\u5b66\u4e60")),(0,m.kt)("h3",{id:"\u4e8c\u3001\u6027\u8d28"},"\u4e8c\u3001\u6027\u8d28"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5e73\u8861\u6761\u4ef6\uff1a\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"AVL \u6811\u6539\u8fdb\u7684\u662f\u8282\u70b9\u6570\u91cf\u7684\u4e0b\u9650"),(0,m.kt)("p",{parentName:"li"},"$ H \\le SIZE(H) \\le 2^H - 1 $"),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("mi",{parentName:"mrow"},"S"),(0,m.kt)("mi",{parentName:"mrow"},"I"),(0,m.kt)("mi",{parentName:"mrow"},"Z"),(0,m.kt)("mi",{parentName:"mrow"},"E"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"H"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"\u2264"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"2"),(0,m.kt)("mi",{parentName:"msup"},"H")),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"low(H - 2) + low(H - 1) + 1 \\le SIZE(H) \\le 2^H - 1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.78041em",verticalAlign:"-0.13597em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"I"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"Z"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"E"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.08125em"}},"H"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.924661em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8413309999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.08125em"}},"H")))))))),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"1"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"2"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"3"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"4"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"l"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"4"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mn",{parentName:"mrow"},"7"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mtext",{parentName:"mrow"},"\u6590\u6ce2\u90a3\u5951\u6570\u5217"),(0,m.kt)("mo",{parentName:"mrow"},":"),(0,m.kt)("mn",{parentName:"mrow"},"1.61"),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mn",{parentName:"msup"},"8"),(0,m.kt)("mi",{parentName:"msup"},"n"))),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"low(1) = 1, low(2) = 2, low(3) = 4, low(4) = 7, \u6590\u6ce2\u90a3\u5951\u6570\u5217:1.618^n")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"2"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"4"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"4"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"7"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6590"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6ce2"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u90a3"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u5951"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u6570"),(0,m.kt)("span",{parentName:"span",className:"mord cjk_fallback"},"\u5217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},":"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.664392em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"6"),(0,m.kt)("span",{parentName:"span",className:"mord"},"1"),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord"},"8"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.664392em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n"))))))))))))))),(0,m.kt)("h3",{id:"\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565"},"\u56db\u3001\u5e73\u8861\u8c03\u6574\u7b56\u7565"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53d1\u751f\u5728\u56de\u6eaf\u9636\u6bb5\u7684\uff0c\u7b2c\u4e00\u4e2a\u5931\u8861\u8282\u70b9\u5904"),(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u5e73\u8861\u8c03\u6574\u7b56\u7565\u7684\u5173\u952e\u5728\u4e8e\uff1a\u5206\u6790\u6e05\u695a\u56db\u79cd\u60c5\u51b5\u4e0b\uff0cABCD \u56db\u68f5\u5b50\u6811\u6811\u9ad8\u7684\u5173\u7cfb"),(0,m.kt)("li",{parentName:"ol"},"LL\uff0c\u5927\u53f3\u65cb"),(0,m.kt)("li",{parentName:"ol"},"LR\uff0c\u5148\u5c0f\u5de6\u65cb\uff0c\u518d\u5927\u53f3\u65cb"),(0,m.kt)("li",{parentName:"ol"},"RL\uff0c\u5148\u5c0f\u53f3\u65cb\uff0c\u518d\u5927\u5de6\u65cb"),(0,m.kt)("li",{parentName:"ol"},"RR\uff0c\u5927\u5de6\u65cb")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152153712",src:t(59510).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152314037",src:t(83287).Z})),(0,m.kt)("h3",{id:"\u4e94\u3001\u4ee3\u7801\u6f14\u793a"},"\u4e94\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u548c\u5220\u9664\u4ee5\u540e\uff0c\u6ce8\u610f\u91cd\u65b0\u8ba1\u7b97\u6811\u9ad8\u5b57\u6bb5"),(0,m.kt)("li",{parentName:"ol"},"\u5f15\u5165\u4e86 NIL \u9636\u6bb5\uff0c\u4ee3\u66ff NULL\uff0cNULL \u4e0d\u53ef\u8bbf\u95ee\uff0cNIL \u662f\u4e00\u4e2a\u662f\u5b9e\u9645\u8282\u70b9\uff0c\u53ef\u8bbf\u95ee")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#define H(root) (root)->h\n#define K(root) (root)->key\n#define L(root) (root)->lchild\n#define R(root) (root)->rchild\n\ntypedef struct Node {\n    int key, h;\n    struct Node *lchild, *rchild;\n} Node;\n\nNode __NIL;\n#define NIL (&__NIL)\n__attribute__((constructor))\nvoid init_NIL() {\n    NIL->key = NIL->h = 0;\n    NIL->lchild = NIL->rchild = NIL;\n    return ;\n}\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->h = 1;\n    p->lchild = p->rchild = NIL;\n    return p;\n}\n\nvoid update_height(Node *root) {\n    root->h = (H(L(root)) > H(R(root)) ? H(L(root)) : H(R(root))) + 1;\n    return ;\n}\n\nNode *left_rotate(Node *root) {\n    Node *temp = root->rchild;\n    root->rchild = temp->lchild;\n    temp->lchild = root;\n    update_height(root);\n    update_height(temp);\n    return temp;\n}\n\nNode *right_rotate(Node *root) {\n    Node *temp = root->lchild;\n    root->lchild = temp->rchild;\n    temp->rchild = root;\n    update_height(root);\n    update_height(temp);\n    return temp;\n}\n\nNode *maintain(Node *root) {\n    if (abs(H(L(root)) - H(R(root))) <= 1) return root;\n    if (H(L(root)) > H(R(root))) {\n        if (H(R(L(root))) > H(L(L(root)))) {\n            root->lchild = left_rotate(root->lchild);\n        }\n        root = right_rotate(root);\n    } else {\n        if (H(L(R(root))) > H(R(R(root)))) {\n            root->rchild = right_rotate(root->rchild);\n        }\n        root = left_rotate(root);\n    }\n    return root;\n}\n\nNode *insert(Node *root, int key) {\n    if (root == NIL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (root->key > key) root->lchild = insert(root->lchild, key);\n    else root->rchild = insert(root->rchild, key);\n    update_height(root);\n    return maintain(root);\n}\n\nNode *predeccessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild != NIL) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase(Node *root, int key) {\n    if (root == NIL) return root;\n    if (root->key > key) {\n        root->lchild = erase(root->lchild, key);\n    } else if (root->key < key) {\n        root->rchild = erase(root->rchild, key);\n    } else {\n        if (root->lchild == NIL || root->rchild == NIL) {\n            Node *temp = root->lchild == NIL ? root->rchild : root->lchild;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predeccessor(root);\n            root->key = temp->key;\n            root->lchild = erase(root->lchild, temp->key);\n        }\n    }\n    return maintain(root);\n}\n\nvoid clear(Node *root) {\n    if (root == NIL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NIL) return ;\n    printf("(%d, %d, %d)\\n", K(root), K(L(root)), K(R(root)));\n    output(root->lchild);\n    output(root->rchild);\n    return ;\n}\n\nint main() {\n    #define MAX_OP 20\n    Node *root = NIL;\n    for (int i = 0; i < MAX_OP; i++) {\n        int val = rand() % 100;\n        root = insert(root, val);\n    }\n    output(root);\n    int val;\n    while (~scanf("%d", &val)) {\n        root = erase(root, val);\n        printf("erase %d from AVL tree\\n", val);\n        output(root);\n    }\n    return 0;\n}\n')),(0,m.kt)("h1",{id:"14-sb\u6811"},"14. SB\u6811"),(0,m.kt)("p",null,"SB \u6811 :\u540d\u79f0:Size Balanced \u6811"),(0,m.kt)("p",null,"\u6bcf\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u4e0d\u5c0f\u4e8e\u5176\u5144\u5f1f\u7684\u5b50\u6811\u5927\u5c0f"),(0,m.kt)("p",null,"\u6027\u8d28:\nSize(left) >= Size(right->left)\nSize(left) >= Size(right->right)\nSize(right) >= Size(left->left)\nSize(right) >= Size(left->right)\n\u4f18\u70b9:\n\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\u505a\u4e86\u9650\u5236,\u6240\u4ee5\u6574\u68f5\u6811\u4e0d\u4f1a\u9000\u5316\u6210\u4e00\u4e2a\u94fe\u8868"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205152513580",src:t(49394).Z})),(0,m.kt)("p",null,"\u601d\u8003:\n1\u3001\u9ad8\u5ea6\u4e3a H \u7684 BS \u6811,\u6240\u5305\u542b\u7684\u8282\u70b9\u6570\u91cf\u5728\u4ec0\u4e48\u8303\u56f4\u4e4b\u5185?\n2\u3001\u9ad8\u5ea6\u4e3a H \u7684 SB \u6811,\u6240\u5305\u542b\u7684\u8282\u70b9\u6570\u91cf\u5728\u4ec0\u4e48\u8303\u56f4\u4e4b\u5185?"),(0,m.kt)("p",null,"\uff2daintain (T) \u7528\u4e8e\u4fee\u590d\u4ee5 T \u4e3a\u6839\u7684 SBT \u3002\u7531\u4e8e\u6027\u8d28(a)\u548c(b)\u662f\u5bf9\u79f0\u7684\uff0c\u4e0b\u9762\u4ec5\u8ba8\u8bba\u5bf9\u6027\u8d28(a)\u7684\u4fee\u590d\u3002"),(0,m.kt)("h3",{id:"1401-case-1-s-left-left-t--s-right-t--"},"14.0.1. Case 1: s[ Left[ Left","[ T ]"," ]>s[ Right","[ T ]"," ]"),(0,m.kt)("p",null,"\u5728\u4e0b\u56fe\u4e2d\uff0c\u5c31\u662f\u8bf4 s","[A]",">s","[R]"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:t(75402).Z})),(0,m.kt)("p",null,"\u9996\u5148\u6267\u884c\u53f3\u65cb\uff08Right-Rotate (T)\uff09\u53ef\u5f97"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:t(21047).Z})),(0,m.kt)("p",null,"\u6709\u53ef\u80fd\u65cb\u8f6c\u540e\u7684\u6811\u4ecd\u7136\u4e0d\u662fSBT,\u9700\u8981\u518d\u6b21\u6267\u884cMaintain(T)"),(0,m.kt)("p",null,"\u7531\u4e8eL\u7684\u53f3\u513f\u5b50\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u56e0\u6b64\u9700\u8981\u6267\u884cMaintain(L)"),(0,m.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u60c5\u51b5\u5148\u6267\u884c\u4e00\u6b21Right-Rotate (T)\uff0c\u63a5\u7740\u6267\u884cMaintain (T) \u4fdd\u8bc1T\u4e3aSBT\uff0c\u7136\u540e\u6267\u884cMaintain(L)\uff0c\u4fdd\u8bc1L\u4e3aSBT"),(0,m.kt)("h3",{id:"1402-case-2-s-right-left-t--s-right-t--"},"14.0.2. Case 2: s[ right[ left","[ t ]"," ]>s[ right","[ t ]"," ]"),(0,m.kt)("p",null,"\u5728\u4e0b\u56fe\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4 s","[B]",">s","[R]"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:t(68401).Z})),(0,m.kt)("p",null,"\u5148\u6267\u884c\u5de6\u65cbLeft-Rotate(L)\u3002\u5982\u4e0b\u56fe"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:t(28271).Z})),(0,m.kt)("p",null,"\u6267\u884c\u53f3\u65cbRight-Rotate(T)\uff0c\u5982\u4e0b\u56fe\uff1a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"img",src:t(28734).Z})),(0,m.kt)("p",null,"\u63a5\u7740\u6267\u884cMaintain (L) \u548cMaintain (T)\uff0c\u6765\u4fdd\u8bc1L\u548cT\u662fSBT"),(0,m.kt)("p",null,"\u540c\u7406\u6267\u884cMaintain (B)"),(0,m.kt)("h1",{id:"15-\u7ea2\u9ed1\u6811"},"15. ==\u7ea2\u9ed1\u6811=="),(0,m.kt)("h3",{id:"\u4e00\u3001\u5e73\u8861\u6761\u4ef6"},"\u4e00\u3001\u5e73\u8861\u6761\u4ef6"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u8282\u70b9\u975e\u9ed1\u65e2\u7ea2"),(0,m.kt)("li",{parentName:"ol"},"\u6839\u8282\u70b9\u662f\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u53f6\u5b50\uff08NIL\uff09\u7ed3\u70b9\u662f\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u7ea2\u8272\u8282\u70b9\u4e0b\u9762\u63a5\u4e24\u4e2a\u9ed1\u8272\u8282\u70b9\uff08\u6ca1\u6709\u8fde\u7eed\u7684\u7ea2\u7ed3\u70b9\uff09"),(0,m.kt)("li",{parentName:"ol"},"\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u8def\u5f84\u4e0a\uff0c\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c")),(0,m.kt)("h4",{id:"\u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6"},"\u5e73\u8861\u6761\u4ef6\u7684\u8ba4\u8bc6"),(0,m.kt)("p",null,"\u7b2c4\u6761\u548c\u7b2c5\u6761\u6761\u4ef6\uff0c\u6ce8\u5b9a\u4e86\uff0c\u7ea2\u9ed1\u6811\u4e2d\u6700\u957f\u8def\u5f84\u4e0d\u8d85\u8fc7\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u7684 2 \u500d\uff0c\u56e0\u800c\u8fd1\u4f3c\u5e73\u8861\u3002"),(0,m.kt)("p",null,"\u672c\u8d28\u4e0a\uff0c\u7ea2\u9ed1\u6811\u4e5f\u662f\u901a\u8fc7\u6811\u9ad8\u6765\u63a7\u5236\u5e73\u8861\u7684\u3002"),(0,m.kt)("p",null,"\u7ea2\u9ed1\u6811\u6bd4 AVL \u6811\u6811\u9ad8\u63a7\u5236\u6761\u4ef6\u8981\u66f4\u677e\u6563\uff0c\u7ea2\u9ed1\u6811\u5728\u53d1\u751f\u8282\u70b9\u63d2\u5165\u548c\u5220\u9664\u4ee5\u540e\uff0c\u53d1\u751f\u8c03\u6574\u7684\u6982\u7387\uff0c\u6bd4 AVL \u6811\u8981\u66f4\u5c0f\u3002"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u5e73\u8861\u6811\u548c\u7ea2\u9ed1\u6811\u7684\u533a\u522b",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"AVL\u6811\u662f\u9ad8\u5ea6\u5e73\u8861\u7684"),"\uff0c\u9891\u7e41\u7684\u63d2\u5165\u548c\u5220\u9664\uff0c\u4f1a\u5f15\u8d77\u9891\u7e41\u7684\u8c03\u6574\u4ee5\u91cd\u65b0\u5e73\u8861\uff0c\u5bfc\u81f4\u6548\u7387\u4e0b\u964d"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"\u7ea2\u9ed1\u6811\u4e0d\u662f\u9ad8\u5ea6\u5e73\u8861\u7684"),"\uff0c\u7b97\u662f\u4e00\u79cd\u6298\u4e2d\uff0c\u63d2\u5165\u6700\u591a\u4e24\u6b21\u65cb\u8f6c\uff0c\u5220\u9664\u6700\u591a\u4e09\u6b21\u65cb\u8f6c\uff0c\u8c03\u6574\u65f6\u65b0\u63d2\u5165\u7684\u90fd\u662f\u7ea2\u8272\u3002"))),(0,m.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u7ea2\u9ed1\u6811\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u5982\u6b64\u9ad8\u6548\uff1f",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\u4e0e\u6811\u7684\u9ad8\u5ea6\u6210\u6b63\u6bd4\uff0c\u56e0\u6b64\u5982\u679c\u5e73\u8861\u4e8c\u53c9\u6811\u4e0d\u4f1a\u9891\u7e41\u7684\u8c03\u6574\u4ee5\u91cd\u65b0\u5e73\u8861\uff0c\u90a3\u5b83\u80af\u5b9a\u662f\u6700\u5feb\u7684\uff0c\u4f46\u5b83\u9700\u8981\u9891\u7e41\u8c03\u6574\u4ee5\u4fdd\u8bc1\u5e73\u8861"),(0,m.kt)("li",{parentName:"ul"},"\u7ea2\u9ed1\u6811\u7b97\u662f\u4e00\u79cd\u6298\u4e2d\uff0c\u4fdd\u8bc1\u6700\u957f\u8def\u5f84\u4e0d\u8d85\u8fc7\u6700\u77ed\u8def\u5f84\u7684\u4e8c\u500d\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u63d2\u5165\u6700\u591a\u4e24\u6b21\u65cb\u8f6c\uff0c\u5220\u9664\u6700\u591a\u4e09\u6b21\u65cb\u8f6c\uff0c\u56e0\u6b64\u6bd4\u5e73\u8861\u4e8c\u53c9\u6811\u9ad8\u6548\u3002"))),(0,m.kt)("li",{parentName:"ul"},"\u7ea2\u9ed1\u6811\u4e3a\u4ec0\u4e48\u8981\u4fdd\u8bc1\u6bcf\u6761\u8def\u5f84\u4e0a\u9ed1\u8272\u7ed3\u70b9\u6570\u76ee\u4e00\u81f4\uff1f",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u4fdd\u8bc1\u6700\u957f\u8def\u5f84\u4e0d\u8d85\u8fc7\u6700\u77ed\u8def\u5f84\u7684\u4e8c\u500d"),(0,m.kt)("li",{parentName:"ul"},"\u5047\u8bbe\u4e00\u4e2a\u7ea2\u9ed1\u6811T\uff0c\u5176\u5230\u53f6\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u80af\u5b9a\u5168\u90e8\u662f\u9ed1\u8272\u8282\u70b9\uff08\u5171B\u4e2a\uff09\uff0c\u6700\u957f\u8def\u5f84\u80af\u5b9a\u6709\u76f8\u540c\u4e2a\u9ed1\u8272\u8282\u70b9\uff08\u6027\u8d285\uff1a\u9ed1\u8272\u8282\u70b9\u7684\u6570\u91cf\u662f\u76f8\u7b49\uff09\uff0c\u53e6\u5916\u4f1a\u591a\u51e0\u4e2a\u7ea2\u8272\u8282\u70b9\u3002\u6027\u8d284\uff08\u7ea2\u8272\u8282\u70b9\u5fc5\u987b\u6709\u4e24\u4e2a\u9ed1\u8272\u513f\u5b50\u8282\u70b9\uff09\u80fd\u4fdd\u8bc1\u4e0d\u4f1a\u518d\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u3002\u6240\u4ee5\u6700\u957f\u7684\u8def\u5f84\u957f\u5ea6\u5e94\u8be5\u662f2B\u4e2a\u8282\u70b9\uff0c\u5176\u4e2dB\u4e2a\u7ea2\u8272\uff0cB\u4e2a\u9ed1\u8272\u3002")))),(0,m.kt)("h3",{id:"\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d"},"\u4e8c\u3001\u5b66\u4e60\u8bc0\u7a8d"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u7ea2\u9ed1\u6811\u7684\u63d2\u5165\u8c03\u6574\uff0c\u8981\u7ad9\u5728==\u7956\u7236\u8282\u70b9==\u5411\u4e0b\u8fdb\u884c\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u7406\u89e3\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u8c03\u6574\uff0c\u8981\u7ad9\u5728==\u7236\u8282\u70b9==\u5411\u4e0b\u8fdb\u884c\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\uff0c\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u53cc\u7ea2\u60c5\u51b5"),(0,m.kt)("li",{parentName:"ol"},"\u65b0\u63d2\u5165\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u7ea2\u8272\uff0c\u63d2\u5165\u9ed1\u8272\u8282\u70b9\u4e00\u5b9a\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u8fdd\u53cd\u6761\u4ef65\uff0c\u63d2\u5165\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u4e00\u5b9a\u4ea7\u751f\u51b2\u7a81"),(0,m.kt)("li",{parentName:"ol"},"\u628a\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u60f3\u8c61\u6210\u4e00\u68f5\u5927\u7684\u7ea2\u9ed1\u6811\u4e2d\u7684\u5c40\u90e8\u5b50\u6811"),(0,m.kt)("li",{parentName:"ol"},"\u5c40\u90e8\u8c03\u6574\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u5168\u5c40\uff0c\u8c03\u6574\u524d\u540e\u7684\u8def\u5f84\u4e0a\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c")),(0,m.kt)("h3",{id:"\u4e09\u3001\u63d2\u5165\u7b56\u7565"},"\u4e09\u3001\u63d2\u5165\u7b56\u7565"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u53d4\u53d4\u8282\u70b9\u4e3a\u7ea2\u8272\u7684\u65f6\u5019\uff0c\u4fee\u6539\u4e09\u5143\u7ec4\u5c0f\u5e3d\u5b50\uff0c\u6539\u6210\u7ea2\u9ed1\u9ed1"),(0,m.kt)("li",{parentName:"ol"},"\u53d4\u53d4\u8282\u70b9\u4e3a\u9ed1\u8272\u7684\u65f6\u5019\uff0c\u53c2\u8003 AVL \u6811\u7684\u5931\u8861\u60c5\u51b5\uff0c\u5206\u6210 ",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"R"),(0,m.kt)("mi",{parentName:"mrow"},"R")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"LL,LR,RL,RR")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"))))),", \u5148\u53c2\u8003 AVL \u6811\u7684\u65cb\u8f6c\u8c03\u6574\u7b56\u7565\uff0c\u7136\u540e\u518d\u4fee\u6539\u4e09\u5143\u7ec4\u7684\u989c\u8272\uff0c\u6709\u4e24\u79cd\u8c03\u6574\u7b56\u7565\uff1a\u7ea2\u8272\u4e0a\u6d6e\uff0c\u7ea2\u8272\u4e0b\u6c89\u3002"),(0,m.kt)("li",{parentName:"ol"},"\u4e24\u5927\u7c7b\u60c5\u51b5\uff0c\u5305\u542b 8 \u79cd\u5c0f\u60c5\u51b5")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204513136",src:t(27713).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:1\u548c20\u4fee\u6539\u6210\u9ed1\u8272,15\u4fee\u6539\u6210\u7ea2\u8272(\u6240\u8c13\u7684\u7ea2\u8272\u4e0a\u9876)"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204553104",src:t(21948).Z})),(0,m.kt)("p",null,"\u5904\u7406\u7406\u529e\u6cd5:\u5927\u53f3(\u5de6)\u65cb,20\u8c03\u6574\u6210\u7ea2\u8272,15\u8c03\u6574\u6210\u9ed1\u8272,\u5373\u53ef\u641e\u5b9a\u95ee\u9898"),(0,m.kt)("p",null,"\u53ea\u670917\u4e0d\u786e\u5b9a"),(0,m.kt)("p",null,"\u5176\u4f59\u60c5\u51b5\u5747\u53ef\u4ee5\u8c03\u6574\u6210\u4e3a\u60c5\u51b5\u4e8c\u53ef\u5904\u7406\u7406\u7684\u60c5\u51b5,\u6240\u4ee5\u5c31\u4e0d\u5355\u72ec\u8ba8\u8bba\u4e86\u3002"),(0,m.kt)("h3",{id:"\u56db\u3001\u4ee3\u7801\u6f14\u793a"},"\u56db\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\uff0c\u53d1\u6b63\u5728\u9012\u5f52\u7684\u56de\u6eaf\u9636\u6bb5"),(0,m.kt)("li",{parentName:"ol"},"\u63d2\u5165\u8c03\u6574\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528 goto \u8bed\u53e5\uff0c8\u884c\u4ee3\u7801\uff0c\u53d8\u6210\u4e864\u884c"),(0,m.kt)("li",{parentName:"ol"},"\u5904\u7406\u6839\u8282\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\uff0c\u901a\u8fc7\u4ee3\u7801\u5c01\u88c5\uff0c",(0,m.kt)("span",{parentName:"li",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"t"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mo",{parentName:"mrow"},">"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"_"),(0,m.kt)("mi",{parentName:"mrow"},"i"),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"s"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mi",{parentName:"mrow"},"t")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"insert->\\_\\_insert")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.74285em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},">"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.9695199999999999em",verticalAlign:"-0.31em"}}),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord",style:{marginRight:"0.02778em"}},"_"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"))))))),(0,m.kt)("h3",{id:"\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0"},"\u4e00\u3001\u5220\u9664\u8c03\u6574\u53d1\u751f\u7684\u524d\u63d0"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u4f1a\u5bf9\u7ea2\u9ed1\u6811\u7684\u5e73\u8861\u4ea7\u751f\u5f71\u54cd"),(0,m.kt)("li",{parentName:"ol"},"\u5ea6\u4e3a1\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u552f\u4e00\u5b50\u5b69\u5b50\uff0c\u4e00\u5b9a\u662f\u7ea2\u8272"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a1\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5220\u9664\u8c03\u6574"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u5ea6\u4e3a0\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u53cc\u91cd\u9ed1\u7684 NIL \u8282\u70b9"),(0,m.kt)("li",{parentName:"ol"},"\u5220\u9664\u8c03\u6574\uff0c\u5c31\u662f\u4e3a\u4e86\u5e72\u6389\u53cc\u91cd\u9ed1\uff08\u9ed1\u8272\u4e0a\u6d6e\uff09")),(0,m.kt)("h3",{id:"\u4e8c\u3001\u5220\u9664\u8c03\u6574"},"\u4e8c\u3001\u5220\u9664\u8c03\u6574"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u53cc\u91cd\u9ed1\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u5144\u5f1f\u8282\u70b9\u4e0b\u9762\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u4e5f\u662f\u9ed1\u8272\uff0c\u7236\u8282\u70b9\u589e\u52a0\u4e00\u91cd\u9ed1\u8272\uff0c\u53cc\u91cd\u9ed1\u4e0e\u5144\u5f1f\u8282\u70b9\uff0c\u5206\u522b\u51cf\u5c11\u4e00\u91cd\u9ed1\u8272\u3002")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u5e76\u4e14\uff0c\u5144\u5f1f\u8282\u70b9\u4e2d\u6709\u7ea2\u8272\u5b50\u8282\u70b9"),(0,m.kt)("ol",{parentName:"li"},(0,m.kt)("li",{parentName:"ol"},"R\uff08\u5144\u5f1f\uff09R\uff08\u53f3\u5b50\u8282\u70b9\uff09\uff0c\u5de6\u65cb\uff0c\u65b0\u6839\u6539\u6210\u539f\u6839\u7684\u989c\u8272\uff0c\u5c06\u65b0\u6839\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6539\u6210\u9ed1\u8272"),(0,m.kt)("li",{parentName:"ol"},"R\uff08\u5144\u5f1f\uff09L\uff08\u5de6\u5b50\u8282\u70b9\uff09\uff0c\u5148\u5c0f\u53f3\u65cb\uff0c\u5bf9\u8c03\u65b0\u6839\u4e0e\u539f\u6839\u7684\u989c\u8272\uff0c\u8f6c\u6210\u4e0a\u4e00\u79cd\u60c5\u51b5"),(0,m.kt)("li",{parentName:"ol"},"LL \u540c\u7406 RR"),(0,m.kt)("li",{parentName:"ol"},"LR \u540c\u7406 RL"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"\u5144\u5f1f\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u901a\u8fc7\u65cb\u8f6c\uff0c\u8f6c\u53d8\u6210\u5144\u5f1f\u8282\u70b9\u662f\u9ed1\u8272\u7684\u60c5\u51b5"))),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204629813",src:t(41735).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:brother \u8c03\u6574\u4e3a\u7ea2\u8272,x \u51cf\u5c11\u4e00\u91cd\u9ed1\u8272,father \u589e\u52a0\u4e00\u91cd\u9ed1\u8272"),(0,m.kt)("p",null,"\u9ed1\u8272\u4e0a\u6d6e\uff1a\u6839\u8282\u70b9\u76f4\u63a5\u5e72\u6389"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204703406",src:t(84118).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204230645450",src:t(43419).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:brother \u53f3(\u5de6)\u65cb,51\u53d8\u9ed1,72\u53d8\u7ea2,\u8f6c\u6210\u5904\u7406\u60c5\u51b5\u4e09"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204204736229",src:t(82655).Z})),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204230035628",src:t(26910).Z})),(0,m.kt)("p",null,"\u5904\u7406\u529e\u6cd5:father \u5de6(\u53f3)\u65cb,\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a48\u7684\u989c\u8272,\u6240\u4ee538\u6539\u6210\u9ed1\u8272,51\u6539\u621038\u7684\u989c\u8272,x \u51cf\u5c11\n\u4e00\u91cd\u9ed1\u8272,72\u6539\u6210\u9ed1\u8272"),(0,m.kt)("p",null,"28\uff0c72\uff0c64\uff0c85\u786e\u5b9a"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204231107195",src:t(87644).Z})),(0,m.kt)("p",null,"\u5144\u5f1f\u8282\u70b9\u662f\u7ea2\u8272\u60c5\u51b5\uff1a\u5de6(\u53f3)\u65cb\uff0c\u65b0\u6839\u53d8\u9ed1\uff0c\u65e7\u6839\u53d8\u7ea2"),(0,m.kt)("h3",{id:"\u4e09\u3001\u4ee3\u7801\u6f14\u793a"},"\u4e09\u3001\u4ee3\u7801\u6f14\u793a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"\u8fdb\u884c LR/RL \u7c7b\u578b\u5224\u65ad\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5224\u65ad LL \u5b50\u6811\u662f\u5426\u4e3a\u9ed1\u8272\uff0cLL \u5b50\u6811\u6709\u53ef\u80fd\u662f NIL \u8282\u70b9\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u8bfb\u5230\u7684\u989c\u8272\u53ef\u80fd\u662f\u53cc\u91cd\u9ed1\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u5224\u65ad\u65b9\u6cd5\u5c31\u662f\u3010LL \u5b50\u6811\u4e0d\u662f\u7ea2\u8272\u3011\u3002")),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210205001401045",src:t(62200).Z})),(0,m.kt)("p",null,"\u7a7a\u5fc3\u4ee3\u8868\u7ea2\u8272\uff1a==RED:LR \t\t!=RED:LL"),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"image-20210204235441764",src:t(57852).Z})),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#define RED 0\n#define BLACK 1\n#define DOUBLE_BLACK 2\n\ntypedef struct Node {\n    int key, color; // 0 red, 1 black, 2 double black\n    struct Node *lchild, *rchild;\n} Node;\n\nNode _NIL, * const NIL = &_NIL;\n\n__attribute__((constructor))\nvoid init_NIL() {\n    NIL->key = 0;\n    NIL->lchild = NIL->rchild = NIL;\n    NIL->color = BLACK;\n    return ;\n}\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->lchild = p->rchild = NIL;\n    p->color = RED;\n    return p;\n}\n\nint hasRedChild(Node *root) {\n    return root->lchild->color == RED || root->rchild->color == RED;\n}\n\nNode *left_rotate(Node *root) {\n    Node *temp = root->rchild;\n    root->rchild = temp->lchild;\n    temp->lchild = root;\n    return temp;\n}\n\nNode *right_rotate(Node *root) {\n    Node *temp = root->lchild;\n    root->lchild = temp->rchild;\n    temp->rchild = root;\n    return temp;\n}\n\nNode *insert_maintain(Node *root) {\n    if (!hasRedChild(root)) return root;\n    if (root->lchild->color == RED && root->rchild->color == RED) {\n        if (!hasRedChild(root->lchild) && !hasRedChild(root->rchild)) return root;\n        goto insert_end;\n    }\n    if (root->lchild->color == RED) {\n        if (!hasRedChild(root->lchild)) return root;\n        if (root->lchild->rchild->color == RED) {\n            root->lchild = left_rotate(root->lchild);\n        }\n        root = right_rotate(root);\n    } else {\n        if (!hasRedChild(root->rchild)) return root;\n        if (root->rchild->lchild->color == RED) {\n            root->rchild = right_rotate(root->rchild);\n        }\n        root = left_rotate(root);\n    }\ninsert_end:\n    root->color = RED;\n    root->lchild->color = root->rchild->color = BLACK;\n    return root;\n}\n\nNode *__insert(Node *root, int key) {\n    if (root == NIL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (root->key > key) root->lchild = __insert(root->lchild, key);\n    else root->rchild = __insert(root->rchild, key);\n    return insert_maintain(root);\n}\n\nNode *insert(Node *root, int key) {\n    root = __insert(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nNode *predeccessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild != NIL) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase_maintain(Node *root) {\n    if (root->lchild->color != DOUBLE_BLACK && root->rchild->color != DOUBLE_BLACK) return root;\n    if (root->rchild->color == DOUBLE_BLACK) {\n        if (root->lchild->color == RED) {\n            root->color = RED;\n            root->lchild->color = BLACK;\n            root = right_rotate(root);\n            root->rchild = erase_maintain(root->rchild);\n            return root;\n        }\n        if (!hasRedChild(root->lchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->lchild->lchild->color != RED) {\n            root->lchild->rchild->color = BLACK;\n            root->lchild->color = RED;\n            root->lchild = left_rotate(root->lchild);\n        }\n        root->lchild->color = root->color;\n        root->rchild->color -= 1;\n        root = right_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    } else {\n        if (root->rchild->color == RED) {\n            root->color = RED;\n            root->rchild->color = BLACK;\n            root = left_rotate(root);\n            root->lchild = erase_maintain(root->lchild);\n            return root;\n        }\n        if (!hasRedChild(root->rchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->rchild->rchild->color != RED) {\n            root->rchild->lchild->color = BLACK;\n            root->rchild->color = RED;\n            root->rchild = right_rotate(root->rchild);\n        }\n        root->rchild->color = root->color;\n        root->lchild->color -= 1;\n        root = left_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    }\n    return root;\n}\n\nNode *__erase(Node *root, int key) {\n    if (root == NIL) return root;\n    if (root->key > key) {\n        root->lchild = __erase(root->lchild, key);\n    } else if (root->key < key) {\n        root->rchild = __erase(root->rchild, key);\n    } else {\n        if (root->lchild == NIL || root->rchild == NIL) {\n            Node *temp = root->lchild == NIL ? root->rchild : root->lchild;\n            temp->color += root->color;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predeccessor(root);\n            root->key = temp->key;\n            root->lchild = __erase(root->lchild, temp->key);\n        }\n    }\n    return erase_maintain(root);\n}\n\nNode *erase(Node *root, int key) {\n    root = __erase(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nvoid clear(Node *root) {\n    if (root == NIL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NIL) return ;\n    printf("%d [%d, %d] %s\\n", \n        root->key, \n        root->lchild->key, \n        root->rchild->key,\n        root->color ? "BLACK" : "RED"\n    );\n    output(root->lchild);\n    output(root->rchild);\n    return ;\n}\n\nint main() {\n    int op, val;\n    Node *root = NIL;\n    while (~scanf("%d%d", &op, &val)) {\n        switch (op) {\n            case 1: root = insert(root, val); break;\n            case 2: root = erase(root, val); break;\n        }\n        output(root);\n    }\n    return 0;\n}\n\n')),(0,m.kt)("p",null,(0,m.kt)("img",{alt:"\u5355\u8bcd\u63a5\u9f99.jpg",src:t(24065).Z})),(0,m.kt)("h2",{id:"\u7ea2\u9ed1\u6811"},"\u7ea2\u9ed1\u6811"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'/*************************************************************************\n   > File Name: 15.RBT.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u516d  9/21 20:04:44 2019\n ************************************************************************/\n\n#include <stdio.h>\n#include <stdlib.h>\n#define RED 0\n#define BLACK 1\n#define DOUBLE_BLACK 2\n\ntypedef struct Node {\n    int key, color; // 0 red, 1 black, 2 double black\n    struct Node *lchild, *rchild;\n} Node;\n\nNode _NIL, * const NIL = &_NIL;\n\n__attribute__((constructor))\nvoid init_NIL() {\n    NIL->key = 0;\n    NIL->lchild = NIL->rchild = NIL;\n    NIL->color = BLACK;\n    return ;\n}\n\nNode *getNewNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p->key = key;\n    p->lchild = p->rchild = NIL;\n    p->color = RED;\n    return p;\n}\n\nint hasRedChild(Node *root) {\n    return root->lchild->color == RED || root->rchild->color == RED;\n}\n\nNode *left_rotate(Node *root) {\n    Node *temp = root->rchild;\n    root->rchild = temp->lchild;\n    temp->lchild = root;\n    return temp;\n}\n\nNode *right_rotate(Node *root) {\n    Node *temp = root->lchild;\n    root->lchild = temp->rchild;\n    temp->rchild = root;\n    return temp;\n}\n\nNode *insert_maintain(Node *root) {\n    if (!hasRedChild(root)) return root;\n    if (root->lchild->color == RED && root->rchild->color == RED) {\n        if (!hasRedChild(root->lchild) && !hasRedChild(root->rchild)) return root;\n        goto insert_end;\n    }\n    if (root->lchild->color == RED) {\n        if (!hasRedChild(root->lchild)) return root;\n        if (root->lchild->rchild->color == RED) {\n            root->lchild = left_rotate(root->lchild);\n        }\n        root = right_rotate(root);\n    } else {\n        if (!hasRedChild(root->rchild)) return root;\n        if (root->rchild->lchild->color == RED) {\n            root->rchild = right_rotate(root->rchild);\n        }\n        root = left_rotate(root);\n    }\ninsert_end:\n    root->color = RED;\n    root->lchild->color = root->rchild->color = BLACK;\n    return root;\n}\n\nNode *__insert(Node *root, int key) {\n    if (root == NIL) return getNewNode(key);\n    if (root->key == key) return root;\n    if (root->key > key) root->lchild = __insert(root->lchild, key);\n    else root->rchild = __insert(root->rchild, key);\n    return insert_maintain(root);\n}\n\nNode *insert(Node *root, int key) {\n    root = __insert(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nNode *predeccessor(Node *root) {\n    Node *temp = root->lchild;\n    while (temp->rchild != NIL) temp = temp->rchild;\n    return temp;\n}\n\nNode *erase_maintain(Node *root) {\n    if (root->lchild->color != DOUBLE_BLACK && root->rchild->color != DOUBLE_BLACK) return root;\n    if (root->rchild->color == DOUBLE_BLACK) {\n        if (root->lchild->color == RED) {\n            root->color = RED;\n            root->lchild->color = BLACK;\n            root = right_rotate(root);\n            root->rchild = erase_maintain(root->rchild);\n            return root;\n        }\n        if (!hasRedChild(root->lchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->lchild->lchild->color != RED) {\n            root->lchild->rchild->color = BLACK;\n            root->lchild->color = RED;\n            root->lchild = left_rotate(root->lchild);\n        }\n        root->lchild->color = root->color;\n        root->rchild->color -= 1;\n        root = right_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    } else {\n        if (root->rchild->color == RED) {\n            root->color = RED;\n            root->rchild->color = BLACK;\n            root = left_rotate(root);\n            root->lchild = erase_maintain(root->lchild);\n            return root;\n        }\n        if (!hasRedChild(root->rchild)) {\n            root->color += 1;\n            root->lchild->color -= 1;\n            root->rchild->color -= 1;\n            return root;\n        }\n        if (root->rchild->rchild->color != RED) {\n            root->rchild->lchild->color = BLACK;\n            root->rchild->color = RED;\n            root->rchild = right_rotate(root->rchild);\n        }\n        root->rchild->color = root->color;\n        root->lchild->color -= 1;\n        root = left_rotate(root);\n        root->lchild->color = root->rchild->color = BLACK;\n    }\n    return root;\n}\n\nNode *__erase(Node *root, int key) {\n    if (root == NIL) return root;\n    if (root->key > key) {\n        root->lchild = __erase(root->lchild, key);\n    } else if (root->key < key) {\n        root->rchild = __erase(root->rchild, key);\n    } else {\n        if (root->lchild == NIL || root->rchild == NIL) {\n            Node *temp = root->lchild == NIL ? root->rchild : root->lchild;\n            temp->color += root->color;\n            free(root);\n            return temp;\n        } else {\n            Node *temp = predeccessor(root);\n            root->key = temp->key;\n            root->lchild = __erase(root->lchild, temp->key);\n        }\n    }\n    return erase_maintain(root);\n}\n\nNode *erase(Node *root, int key) {\n    root = __erase(root, key);\n    root->color = BLACK;\n    return root;\n}\n\nvoid clear(Node *root) {\n    if (root == NIL) return ;\n    clear(root->lchild);\n    clear(root->rchild);\n    free(root);\n    return ;\n}\n\nvoid output(Node *root) {\n    if (root == NIL) return ;\n    printf("%d [%d, %d] %s\\n", \n        root->key, \n        root->lchild->key, \n        root->rchild->key,\n        root->color ? "BLACK" : "RED"\n    );\n    output(root->lchild);\n    output(root->rchild);\n    return ;\n}\n\nint main() {\n    int op, val;\n    Node *root = NIL;\n    while (~scanf("%d%d", &op, &val)) {\n        switch (op) {\n            case 1: root = insert(root, val); break;\n            case 2: root = erase(root, val); break;\n        }\n        output(root);\n    }\n    return 0;\n}\n')),(0,m.kt)("h2",{id:"\u591a\u8def\u67e5\u627e\u68112-3\u6811"},(0,m.kt)("a",{parentName:"h2",href:"https://blog.csdn.net/u014688145/article/details/67636509"},"\u591a\u8def\u67e5\u627e\u68112 3\u6811")),(0,m.kt)("p",null,"\u591a\u8def\u67e5\u627e\u6811\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b69\u5b50\u6570\u53ef\u4ee5\u591a\u4e8e\u4e24\u4e2a\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u5904\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u5143\u7d20"),(0,m.kt)("h3",{id:"2-3\u6811"},"2-3\u6811"),(0,m.kt)("p",null,"\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u5177\u6709\u4e24\u4e2a\u5b69\u5b50(2\u7ed3\u70b9)\u6216\u4e09\u4e2a\u5b69\u5b50(3\u7ed3\u70b9) \u4e00\u4e2a2\u7ed3\u70b9\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u548c\u4e24\u4e2a\u5b69\u5b50 \u4e00\u4e2a3\u7ed3\u70b9\u5305\u542b\u4e00\u5c0f\u4e00\u5927\u4e24\u4e2a\u5143\u7d20\u548c\u4e09\u4e2a\u5b69\u5b50"),(0,m.kt)("h2",{id:"bb\u6811"},(0,m.kt)("a",{parentName:"h2",href:"https://blog.csdn.net/du5006150054/article/details/82379210"},"B/B+\u6811")),(0,m.kt)("p",null,"B\u6811\u662f\u4e00\u79cd\u5e73\u8861\u7684\u591a\u8def\u67e5\u627e\u6811\uff0c2-3\u6811\u548c2-3-4\u6811\u90fd\u662fB\u6811\u7684\u7279\u4f8b\uff0c\u7ed3\u70b9\u6700\u5927\u7684\u5b69\u5b50\u6570\u76ee\u79f0\u4e3aB\u6811\u7684\u9636\u3002"),(0,m.kt)("h3",{id:"bb\u6811\u7684\u533a\u522b"},"B/B+\u6811\u7684\u533a\u522b"),(0,m.kt)("p",null,"\u4ee5\uff08key\uff0cvalue\uff09\u4e8c\u5143\u7ec4\u6765\u5b58\u50a8\u4fe1\u606f"),(0,m.kt)("h4",{id:"b\u6811"},"B\u6811"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"B\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e2d\u65e2\u5305\u542bkey\uff0c\u4e5f\u5305\u542bvalue\u503c\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5360\u7528\u4e00\u4e2a\u76d8\u5757\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u6709\u4e24\u4e2a\u5347\u5e8f\u6392\u5e8f\u7684\u5173\u952e\u5b57\u548c\u4e09\u4e2a\u6307\u5411\u5b50\u6811\u6839\u7ed3\u70b9\u7684\u6307\u9488\uff0c\u6307\u9488\u5b58\u50a8\u7684\u662f\u5b50\u7ed3\u70b9\u6240\u5728\u78c1\u76d8\u5757\u7684\u5730\u5740\u3002"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"\u7f3a\u70b9"),"\uff1a\u6bcf\u4e2a\u8282\u70b9\u4e2d\u4e0d\u4ec5\u5305\u542b\u6570\u636e\u7684key\u503c\uff0c\u8fd8\u6709data\u503c\u3002\u800c\u6bcf\u4e00\u4e2a\u9875\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u5982\u679cdata\u6570\u636e\u8f83\u5927\u65f6\u5c06\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u8282\u70b9\uff08\u5373\u4e00\u4e2a\u9875\uff09\u80fd\u5b58\u50a8\u7684key\u7684\u6570\u91cf\u5f88\u5c0f\uff0c\u5f53\u5b58\u50a8\u7684\u6570\u636e\u91cf\u5f88\u5927\u65f6\u540c\u6837\u4f1a\u5bfc\u81f4B-Tree\u7684\u6df1\u5ea6\u8f83\u5927\uff0c\u589e\u5927\u67e5\u8be2\u65f6\u7684\u78c1\u76d8I/O\u6b21\u6570\uff0c\u8fdb\u800c\u5f71\u54cd\u67e5\u8be2\u6548\u7387\u3002")),(0,m.kt)("h4",{id:"b\u6811-1"},"B+\u6811"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u6240\u6709\u6570\u636e\u8bb0\u5f55\u8282\u70b9\u90fd\u662f\u6309\u7167\u952e\u503c\u5927\u5c0f\u987a\u5e8f\u5b58\u653e\u5728\u540c\u4e00\u5c42\u7684\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u800c\u975e\u53f6\u5b50\u8282\u70b9\u4e0a\u53ea\u5b58\u50a8key\u503c\u4fe1\u606f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u52a0\u5927\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u7684key\u503c\u6570\u91cf\uff0c\u964d\u4f4eB+Tree\u7684\u9ad8\u5ea6"),(0,m.kt)("li",{parentName:"ul"},"B+\u6811\u7684\u5934\u6307\u9488\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u6307\u5411\u6839\u8282\u70b9\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u5173\u952e\u5b57\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u56e0\u6b64B+\u6811\u6709\u4e24\u79cd\u904d\u5386\u7684\u65b9\u5f0f",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u968f\u673a\u67e5\u8be2"),(0,m.kt)("li",{parentName:"ul"},"\u4ece\u6700\u5c0f\u5173\u952e\u8bcd\u987a\u5e8f\u67e5\u8be2"))),(0,m.kt)("li",{parentName:"ul"},"\u4f18\u70b9",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"\u7531\u4e8eB+\u6811\u5728\u5185\u90e8\u8282\u70b9\u4e0a\u4e0d\u5305\u542b\u6570\u636e\u4fe1\u606f\uff0c\u56e0\u6b64\u5728\u5185\u5b58\u9875\u4e2d\u80fd\u591f\u5b58\u653e\u66f4\u591a\u7684key\u3002"),(0,m.kt)("li",{parentName:"ul"},"B+\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f\u76f8\u8fde\u7684\uff0c\u56e0\u6b64\u5bf9\u6574\u68f5\u6811\u7684\u4fbf\u5229\u53ea\u9700\u8981\u4e00\u6b21\u7ebf\u6027\u904d\u5386\u53f6\u5b50\u7ed3\u70b9\u5373\u53ef\uff0c\u65b9\u4fbf\u968f\u673a\u67e5\u627e\u548c\u8303\u56f4\u67e5\u627e")))),(0,m.kt)("h4",{id:"\u533a\u522b"},"\u533a\u522b"),(0,m.kt)("blockquote",null,(0,m.kt)("ul",{parentName:"blockquote"},(0,m.kt)("li",{parentName:"ul"},"\u975e\u53f6\u5b50\u8282\u70b9\u53ea\u5b58\u50a8\u952e\u503c\u4fe1\u606f\uff0c\u8be5\u503c\u662f\u5176\u5b50\u6811\u4e2d\u7684\u6700\u5927\u6216\u6700\u5c0f\u503c"),(0,m.kt)("li",{parentName:"ul"},"\u6240\u6709\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u4e2a\u94fe\u6307\u9488\u3002"),(0,m.kt)("li",{parentName:"ul"},"\u6570\u636e\u8bb0\u5f55\u90fd\u5b58\u653e\u5728\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u53f6\u5b50\u7ed3\u70b9\u6309\u7167\u5173\u952e\u5b57\u7684\u5927\u5c0f\u81ea\u5c0f\u800c\u5927\u987a\u5e8f\u8fde\u63a5"),(0,m.kt)("li",{parentName:"ul"},"n\u68f5\u5b50\u6811\u7684\u7ed3\u70b9\u4e2d\u5305\u542bn\u4e2a\u5173\u952e\u5b57"),(0,m.kt)("li",{parentName:"ul"},"\u975e\u53f6\u5b50\u7ed3\u70b9\u4e2d\u7684\u5143\u7d20\u4f1a\u5728\u5b50\u6811\u6839\u7ed3\u70b9\u4e2d\u518d\u6b21\u5217\u51fa"))),(0,m.kt)("h3",{id:"b\u6811\u548c\u7ea2\u9ed1\u6811\u5e94\u7528\u573a\u666f"},(0,m.kt)("a",{parentName:"h3",href:"https://blog.csdn.net/zcf9916/article/details/84915506"},"B\u6811\u548c\u7ea2\u9ed1\u6811\u5e94\u7528\u573a\u666f")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"B\u6811",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"B/B+\u6811\u662f\u4e3a\u4e86\u78c1\u76d8\u6216\u5176\u5b83\u5b58\u50a8\u8bbe\u5907\u800c\u8bbe\u8ba1\u7684\u4e00\u79cd\u5e73\u8861\u591a\u8def\u67e5\u627e\u6811(\u76f8\u5bf9\u4e8e\u4e8c\u53c9,B\u6811\u6bcf\u4e2a\u5185\u8282\u70b9\u6709\u591a\u4e2a\u5206\u652f),\u4e0e\u7ea2\u9ed1\u6811\u76f8\u6bd4,\u5728\u76f8\u540c\u7684\u7684\u8282\u70b9\u7684\u60c5\u51b5\u4e0b,\u4e00\u9897B/B+\u6811\u7684\u9ad8\u5ea6\u8fdc\u8fdc\u5c0f\u4e8e\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6."))),(0,m.kt)("li",{parentName:"ul"},"\u7ea2\u9ed1\u6811",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"IO\u591a\u8def\u590d\u7528epoll\u7684\u5b9e\u73b0\u91c7\u7528\u7ea2\u9ed1\u6811\u7ec4\u7ec7\u7ba1\u7406sockfd\uff0c\u4ee5\u652f\u6301\u5feb\u901f\u7684\u589e\u5220\u6539\u67e5.")))),(0,m.kt)("h4",{id:"\u5b9e\u4f8b"},"\u5b9e\u4f8b"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"\u5047\u5b9a\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u5bb9\u7eb3100\u4e2a\u503c\uff0c\u90a3\u4e483\u5c42\u7684B\u6811\u53ef\u4ee5\u5bb9\u7eb3100\u4e07\u4e2a\u6570\u636e\uff0c\u5982\u679c\u6362\u6210\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5219\u9700\u898120\u5c42\uff01\u5047\u5b9a\u64cd\u4f5c\u7cfb\u7edf\u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u6839\u8282\u70b9\u4fdd\u7559\u5728\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48B\u6811\u5728100\u4e07\u4e2a\u6570\u636e\u4e2d\u67e5\u627e\u76ee\u6807\u503c\uff0c\u53ea\u9700\u8981\u8bfb\u53d6\u4e24\u6b21\u786c\u76d8\u3002")),(0,m.kt)("h2",{id:""}))}N.isMDXComponent=!0},75402:function(a,e,t){"use strict";e.Z=t.p+"assets/images/20131129202211734-3c2d544acf3933d5bb11c88bc9ef632c.bin"},21047:function(a,e,t){"use strict";e.Z=t.p+"assets/images/20131129203355843-41b0690f854da71dd51826a95e6e09d0.bin"},68401:function(a,e,t){"use strict";e.Z=t.p+"assets/images/20131129203745125-a7258c59f13e7dc1686974eb04d9ed25.bin"},28271:function(a,e,t){"use strict";e.Z=t.p+"assets/images/20131129203857906-bcd460ea023ee2ac18ac59e2febc1931.bin"},28734:function(a,e,t){"use strict";e.Z=t.p+"assets/images/20131129203924718-8b8beb0f8722c4a2b24194988b0cd492.bin"},24065:function(a,e,t){"use strict";e.Z=t.p+"assets/images/56202fa47f46b90f9de8a1ddae7826b76140eefb664ec29d598b0775764ef2c0-\u5355\u8bcd\u63a5\u9f99-30c7ce9a7240998cd1e0191bacb31ab0.jpg"},27713:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204204513136-685128ecde9a9e37f2e59faa6da7fe32.png"},21948:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204204553104-c23c65a90f0d3c0f8ad0173aa32e8729.png"},41735:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204204629813-292fab26710616aa6de93af4f0a0df23.png"},84118:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204204703406-0ae511bcea5397a4b92eb943394be0a3.png"},82655:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204204736229-f43546b9d69b336412b909f23146a3f1.png"},26910:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204230035628-f954b7b2f8d32cd0ea5cff29aa00ff3b.png"},43419:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204230645450-f954b7b2f8d32cd0ea5cff29aa00ff3b.png"},87644:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204231107195-d1df6121674e392426d3a3433262334e.png"},57852:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210204235441764-33741c12d4b55c4572266686c318cc42.png"},62200:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210205001401045-885ef269eb9d62952570b1e1c1d62a7d.png"},59510:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210205152153712-6329b9b605f677c2192a1d32c854e43a.png"},83287:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210205152314037-3602ab13250a39db57698fc93bc0c3fe.png"},49394:function(a,e,t){"use strict";e.Z=t.p+"assets/images/image-20210205152513580-31715422c5528c63968acdd375e7ba19.png"}}]);