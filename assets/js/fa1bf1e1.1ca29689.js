"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[5430],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),o=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=o(n),m=a,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},91822:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return s},default:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),l=["components"],c={id:"C1.STL",title:"C1.STL","typora-root-url":"../"},p="STL",o={unversionedId:"Programming_Language/C1.STL",id:"Programming_Language/C1.STL",isDocsHomePage:!1,title:"C1.STL",description:"Standard Template Library \u6807\u51c6\u6a21\u677f\u5e93",source:"@site/docs/4.Programming_Language/C1.STL.md",sourceDirName:"4.Programming_Language",slug:"/Programming_Language/C1.STL",permalink:"/Programming_Language/C1.STL",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/4.Programming_Language/C1.STL.md",version:"current",lastUpdatedAt:1633869865,formattedLastUpdatedAt:"10/10/2021",frontMatter:{id:"C1.STL",title:"C1.STL","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"B6.C++-question",permalink:"/Programming_Language/B6.C++-question"},next:{title:"C2.STL-question",permalink:"/Programming_Language/C2.STL-question"}},s=[{value:"C++",id:"c",children:[{value:"sort\u51fd\u6570",id:"sort\u51fd\u6570",children:[]}]},{value:"\u5404\u79cd\u5bb9\u5668\u5bf9\u6bd4",id:"\u5404\u79cd\u5bb9\u5668\u5bf9\u6bd4",children:[]},{value:"1.1 \u5e8f\u5217\u5bb9\u5668",id:"11-\u5e8f\u5217\u5bb9\u5668",children:[{value:"vector",id:"vector",children:[]},{value:"dequeue",id:"dequeue",children:[]},{value:"\u53cc\u5411\u94fe\u8868list",id:"\u53cc\u5411\u94fe\u8868list",children:[]},{value:"array",id:"array",children:[]}]},{value:"1.2 \u6709\u5e8f\u5173\u8054\u5bb9\u5668\uff08\u7ea2\u9ed1\u4e8c\u53c9\u6811\uff09",id:"12-\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u7ea2\u9ed1\u4e8c\u53c9\u6811",children:[]},{value:"1.3  \u65e0\u5e8f\u5173\u8054\u5bb9\u5668\uff08\u54c8\u5e0c\uff09",id:"13--\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u54c8\u5e0c",children:[]},{value:"\u7ed3\u679c\u5206\u6790",id:"\u7ed3\u679c\u5206\u6790",children:[]},{value:"pair\u7c7b\u578b",id:"pair\u7c7b\u578b",children:[{value:"priority_queue",id:"priority_queue",children:[]},{value:"<code>string</code> \u7c7b",id:"string-\u7c7b",children:[]}]},{value:"\u8fd0\u7b97\u7b26\u91cd\u8f7d",id:"\u8fd0\u7b97\u7b26\u91cd\u8f7d",children:[]},{value:"\u5b9a\u4e49\u4e00\u4e2abitset",id:"\u5b9a\u4e49\u4e00\u4e2abitset",children:[]},{value:"\u7b97\u6cd5",id:"\u7b97\u6cd5",children:[{value:"\u8d28\u53d8\u7b97\u6cd5\u548c\u975e\u8d28\u53d8\u7b97\u6cd5",id:"\u8d28\u53d8\u7b97\u6cd5\u548c\u975e\u8d28\u53d8\u7b97\u6cd5",children:[]}]}],d={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stl"},"STL"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"}," Standard Template Library \u6807\u51c6\u6a21\u677f\u5e93")),(0,i.kt)("h2",{id:"c"},"C++"),(0,i.kt)("h3",{id:"sort\u51fd\u6570"},"sort\u51fd\u6570"),(0,i.kt)("p",null,"\u91cd\u70b9\u5982\u4f55\u5982\u4f55\u5904\u7406\u591a\u7ef4\u6570\u7ec4\uff1b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u6307\u9488\u6570\u7ec4\uff0c\u7136\u540e\u52a8\u6001\u5206\u914d\u7a7a\u95f4"),(0,i.kt)("li",{parentName:"ul"},"\u901a\u8fc7",(0,i.kt)("inlineCode",{parentName:"li"},"struct"),"\u7ed3\u6784\u4f53\uff0c\u964d\u7ef4\u5ea6\u5230\u4e00\u7ef4")),(0,i.kt)("h1",{id:"\u5bb9\u5668"},"\u5bb9\u5668"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"  \u5bb9\u5668\uff08container\uff09\uff0c\u76f8\u540c\u7c7b\u578b\u5bf9\u8c61\u7684\u96c6\u5408")),(0,i.kt)("h2",{id:"\u5404\u79cd\u5bb9\u5668\u5bf9\u6bd4"},"\u5404\u79cd\u5bb9\u5668\u5bf9\u6bd4"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"\u5bb9\u5668"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u5e95\u5c42\u6570\u636e\u7ed3\u6784"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u65f6\u95f4\u590d\u6742\u5ea6"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u6709\u65e0\u5e8f"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u53ef\u4e0d\u53ef\u91cd\u590d"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u5176\u4ed6"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"array"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6570\u7ec4"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u968f\u673a\u8bfb\u6539 O(1)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"vector"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6570\u7ec4"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u968f\u673a\u8bfb\u6539\u3001\u5c3e\u90e8\u63d2\u5165\u3001\u5c3e\u90e8\u5220\u9664 O(1)\u3001\u5934\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"list"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53cc\u5411\u94fe\u8868"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664 O(1)\u3001\u968f\u673a\u8bfb\u6539 O(n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u652f\u6301\u5feb\u901f\u589e\u5220")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"deque"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53cc\u7aef\u961f\u5217"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5934\u5c3e\u63d2\u5165\u3001\u5934\u5c3e\u5220\u9664 O(1)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4e00\u4e2a\u4e2d\u592e\u63a7\u5236\u5668 + \u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u652f\u6301\u9996\u5c3e\u5feb\u901f\u589e\u5220\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"stack"),(0,i.kt)("td",{parentName:"tr",align:"center"},"deque / list"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u9876\u90e8\u63d2\u5165\u3001\u9876\u90e8\u5220\u9664 O(1)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"deque / list"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5c3e\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(1)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u65e0\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"priority_queue"),(0,i.kt)("td",{parentName:"tr",align:"center"},"vector + max - heap"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664 O(log2n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6709\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"},"vector\u5bb9\u5668 + heap\u5904\u7406\u89c4\u5219")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"set"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7ea2\u9ed1\u6811"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log2n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6709\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4e0d\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"multiset"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7ea2\u9ed1\u6811"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log2n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6709\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"map"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7ea2\u9ed1\u6811"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log2n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6709\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4e0d\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"multimap"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7ea2\u9ed1\u6811"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log2n)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6709\u5e8f"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u53ef\u91cd\u590d"),(0,i.kt)("td",{parentName:"tr",align:"center"})))),(0,i.kt)("h2",{id:"11-\u5e8f\u5217\u5bb9\u5668"},"1.1 \u5e8f\u5217\u5bb9\u5668"),(0,i.kt)("p",null,"  \u53ea\u6709\u987a\u5e8f\u5bb9\u5668\u7684\u6784\u9020\u51fd\u6570\u624d\u63a5\u53d7\u5927\u5c0f\u53c2\u6570\uff0c\u5173\u8054\u5bb9\u5668\u5e76\u4e0d\u652f\u6301\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  vector \xa0 \u53ef\u53d8\u5927\u5c0f\u6570\u7ec4\u3002\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u3002\u5728\u5c3e\u90e8\u4e4b\u5916\u7684\u4f4d\u7f6e\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u53ef\u80fd\u5f88\u6162\u3002\n           vector<int> vi(10, -1); // 10\u4e2a-1\n\n  deque    \u53cc\u7aef\u961f\u5217\u3002\u652f\u6301\u5feb\u901f\u5feb\u901f\u8bbf\u95ee\u3002\u5728\u5934\u5c3e\u4f4d\u7f6e\u63d2\u5165/\u5220\u9664\u901f\u5ea6\u5f88\u5feb\u3002\n           deque<double> deqd(10); // 10\u4e2a\u5143\u7d20 0\n\n  list     \u53cc\u5411\u94fe\u8868\u3002\u53ea\u652f\u6301\u53cc\u5411\u987a\u5e8f\u8bbf\u95ee\u3002\u5728list\u4e2d\u4efb\u4f55\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u901f\u5ea6\u90fd\u5f88\u5feb\u3002\n           list<int> li(5,1); // 5\u4e2a1\n\n  forward_list \u5355\u5411\u94fe\u8868\u3002\u53ea\u652f\u6301\u5355\u5411\u987a\u5e8f\u8bbf\u95ee\u3002\u5728\u94fe\u8868\u4efb\u4f55\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u901f\u5ea6\u90fd\u5f88\u5feb\u3002 \n           forward_list<string> fls(10); // 10\u4e2a\u5143\u7d20 0\n\n  array    \u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\u3002\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\uff0c\u4e0d\u80fd\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20\u3002\n           array<int, 42> ia;  // 42\u4e2aint\u7684\u6570\u7ec4, \u652f\u6301\u62f7\u8d1d\u6784\u9020\n           array<int, 42> ia2 = ia; //\u800c\u5185\u7f6e\u6570\u7ec4\u4e0d\u652f\u6301\u62f7\u8d1d\u6784\u9020.\n           std::array\u4e5f\u63d0\u4f9b\u4e86 at() \u51fd\u6570\u3002\n\n  string   \u4e0evector\u76f8\u4f3c\u7684\u5bb9\u5668\uff0c\u4f46\u4e13\u95e8\u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u3002\u968f\u673a\u8bbf\u95ee\u5feb\uff0c\u5728\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u90fd\u5f88\u5feb\u3002\n")),(0,i.kt)("h3",{id:"vector"},"vector"),(0,i.kt)("p",null,"  vector\u5bb9\u5668\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\u3002"),(0,i.kt)("p",null,"  \u5b58\u653e\u5728\u65e7\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u88ab\u590d\u5236\u5230\u65b0\u7684\u5bb9\u5668\u4e2d\uff0c\u63a5\u7740\u63d2\u5165\u65b0\u7684\u5143\u7d20\uff0c\u6700\u540e\u64a4\u9500\u65e7\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\n\u5f53push_back\u68c0\u6d4b\u5230\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u5c06\u81ea\u52a8\u4ee5 2\u500d \u7684\u65b9\u5f0f\u6269\u5c55\u7a7a\u95f4\u3002"),(0,i.kt)("p",null,"  \u4e3a\u4e86\u4f7fvector\u5bb9\u5668\u5b9e\u73b0\u5feb\u901f\u7684\u5185\u5b58\u5206\u914d\uff0c  \u5176\u5b9e\u9645\u5206\u914d\u7684\u5bb9\u91cf\u8981\u6bd4\u5f53\u524d\u6240\u9700\u7684\u7a7a\u95f4\u591a\u4e00\u4e9b"),(0,i.kt)("p",null,"  \u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528 vector::reserve \u65b9\u6cd5\u6765\u6539\u5584\u3002"),(0,i.kt)("h4",{id:"resize\u548creserve"},"resize\u548creserve"),(0,i.kt)("p",null,"capacity\uff1a\u6307\u5bb9\u5668\u5728\u5206\u914d\u65b0\u7684\u5b58\u50a8\u7a7a\u95f4\u4e4b\u524d\u80fd\u5b58\u50a8\u7684\u5143\u7d20\u603b\u6570\u3002\nsize\uff1a\u6307\u5f53\u524d\u5bb9\u5668\u6240\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570\nreserve\u8868\u793a\u5bb9\u5668\u9884\u7559\u7a7a\u95f4\uff0c\u4f46\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u521b\u5efa\u5bf9\u8c61\uff0c\u9700\u8981\u901a\u8fc7insert\uff08\uff09\u6216push_back\uff08\uff09\u7b49\u521b\u5efa\u5bf9\u8c61\u3002\nresize\u65e2\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u4e5f\u521b\u5efa\u4e86\u5bf9\u8c61\u3002\nreserve\u53ea\u4fee\u6539capacity\u5927\u5c0f\uff0c\u4e0d\u4fee\u6539size\u5927\u5c0f\uff0cresize\u65e2\u4fee\u6539capacity\u5927\u5c0f\uff0c\u4e5f\u4fee\u6539size\u5927\u5c0f\u3002"),(0,i.kt)("p",null,"\u8ddf\u6570\u7ec4\u4e0d\u540c\uff0cvector\u5b9a\u4e49\u7684\u6570\u7ec4\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316\uff1a\u5bf9\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u6240\u6709\u5143\u7d20\u4f1a\u88ab\u4ee5 0 \u521d\u59cb\u5316\uff0c\u800c\u5bf9\u4e8e\u5bf9\u8c61\uff0c\u5219\u4f1a\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u7528\u5bf9\u8c61\u5efa\u7acbvector\u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u786e\u4fdd\u4f5c\u4e3a\u6570\u7ec4\u5143\u7d20\u7684\u7c7b\u5177\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002"),(0,i.kt)("p",null,"\u6b64\u5916\uff0c\u521d\u59cb\u503c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u6307\u5b9a\uff0c\u4f46\u662f\u5fc5\u987b\u4e3a\u6240\u6709\u5143\u7d20\u6307\u5b9a\u5b8c\u5168\u76f8\u540c\u7684\u521d\u59cb\u503c\uff1a "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"1.\u521d\u59cb\u5316\u4e8c\u7ef4vector\uff0c\u4e3ar*c\u7684vector\uff0c\u6240\u6709\u503c\u4e3a0.\n\nvector<vector<int> > newOne(r, vector<int>(c, 0));\n\n2.\u7528resize()\u6765\u63a7\u5236\u5927\u5c0f\nvector<vector<int> > res;\nres.resize(r);//r\u884c\nfor (int k = 0; k < r; ++k){\n\xa0 \xa0 res[k].resize(c);//\u6bcf\u884c\u4e3ac\u5217\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<\u7c7b\u578b>\u6570\u7ec4\u5bf9\u8c61\u540d(\u6570\u7ec4\u957f\u5ea6,\u5143\u7d20\u521d\u503c); \nvector<int> v(10,1);//\u5efa\u7acb\u4e00\u4e2a\u670910\u4e2a\u5143\u7d20\u7684vector\u6574\u578b\u5bf9\u8c61v\uff0c\u521d\u503c\u5168\u8bbe\u7f6e\u4e3a1\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n1. \u5728\u5411\u91cf\u5c3e\u90e8\u589e\u5220\u5143\u7d20 - \u5e73\u644a\uff08amortized\uff09\u5e38\u6570 O(1)}} \n2. \u5728\u5411\u91cf\u5934\u90e8 \u6216\u8005 \u4e2d\u95f4\u63d2\u5165\u5143\u7d20 \u589e\u5220\u5143\u7d20 - \u81f3 vector \u5c3e\u90e8\u7684\u7ebf\u6027\u8ddd\u79bb O(n)}}\n3. \u5728\u5411\u91cf\u4e2d\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u7279\u522b\u6162 O(n)\n4. \u968f\u673a\u8bbf\u95ee - \u5e38\u6570 O(1) \n\n|||  ........... -----\x3e\n\u5934            \u5c3e\n*/\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'template < class T, class Alloc = allocator<T> > class vector;  \nvector<vector<int>> vvi;//\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u6570\u7ec4\n  STL\u4e2d\u7684vector\u5bb9\u5668\u5c31\u662f\u52a8\u6001\u5927\u5c0f\u6570\u7ec4\u3002\n  vector<int> v;\n  v.push_back(k); \u5728\u540e\u9762\u63d2\u5165 k \u8fd9\u4e2a\u5143\u7d20\n  v.size()  \u8fd4\u56de\u5bb9\u5668\u4e2d\u5b9e\u9645\u5143\u7d20\u7684\u4e2a\u6570\n  v.resize(n)   \u8c03\u6574\u5bb9\u5668\u7684\u5927\u5c0f\uff0c\u4f7f\u5176\u5305\u542bn\u4e2a\u5143\u7d20\u3002\n        //\u5982\u679cn\u5c0f\u4e8e\u5f53\u524d\u7684\u5bb9\u5668size\uff0c\u5185\u5bb9\u5c06\u88ab\u7f29\u5c0f\u5230\u524dn\u4e2a\u5143\u7d20\uff0c\u5c06\u5176\u5220\u9664\uff08\u5e76\u9500\u6bc1\u5b83\u4eec\uff09\u3002\n        //\u5982\u679cn\u5927\u4e8e\u5f53\u524d\u5bb9\u5668size\uff0c\u5219\u901a\u8fc7\u5728\u672b\u5c3e\u63d2\u5165\u5c3d\u53ef\u80fd\u591a\u7684\u5143\u7d20\u4ee5\u8fbe\u5230\u5927\u5c0fn\u6765\u6269\u5c55\u5185\u5bb9\u3002\u5982\u679c\u6307\u5b9a\u4e86val\uff0c\u5219\u65b0\u5143\u7d20\u5c06\u521d\u59cb\u5316\u4e3aval\u7684\u526f\u672c\uff0c\u5426\u5219\u5c06\u8fdb\u884c\u503c\u521d\u59cb\u5316\u3002\n        //\u5982\u679cn\u4e5f\u5927\u4e8e\u5f53\u524d\u7684\u5bb9\u5668\u7684capacity\uff08\u5bb9\u91cf\uff09\uff0c\u5206\u914d\u7684\u5b58\u50a8\u7a7a\u95f4\u5c06\u81ea\u52a8\u91cd\u65b0\u5206\u914d\u3002\n        //\u6ce8\u610f\u8fd9\u4e2a\u51fd\u6570\u901a\u8fc7\u63d2\u5165\u6216\u8005\u5220\u9664\u5143\u7d20\u7684\u5185\u5bb9\u6765\u6539\u53d8\u5bb9\u5668\u7684\u5b9e\u9645\u5185\u5bb9\u3002\n\n  v.capacity() \u8fd4\u56de\u5f53\u524d\u4e3avector\u5206\u914d\u7684\u5b58\u50a8\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u989d\u5916\u7684\u7a7a\u95f4\u5141\u8bb8\u9002\u5e94\u589e\u957f\n  v.reserve(n)   \u8bf7\u6c42vector\u5bb9\u91cf\u81f3\u5c11\u8db3\u4ee5\u5305\u542bn\u4e2a\u5143\u7d20\u3002\n      //\u5982\u679cn\u5927\u4e8e\u5f53\u524dvector\u5bb9\u91cf\uff0c\u5219\u8be5\u51fd\u6570\u4f7f\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u5176\u5b58\u50a8\u5bb9\u91cf\uff0c\u4ece\u800c\u5c06\u5176\u5bb9\u91cf\u589e\u52a0\u5230n\uff08\u6216\u66f4\u5927\uff09\u3002\n      //\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u8c03\u7528\u4e0d\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u914d\uff0c\u5e76\u4e14vector\u5bb9\u91cf\u4e0d\u53d7\u5f71\u54cd\u3002\n  v.shrink_to_fit(); //\u8981\u6c42\u5bb9\u5668\u51cf\u5c0f\u5176capacity(\u5bb9\u91cf)\u4ee5\u9002\u5e94\u5176\u5c3a\u5bf8\u3002\n  v.at(index)   \u8fd4\u56de\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20,\u4f1a\u68c0\u67e5\u7ed9\u5b9a\u7684\u7d22\u5f15\u503c\u662f\u5426\u8d8a\u754c\uff0c\u5982\u679c\u8d8a\u754c\u5219\u8fd4\u56de\u4e00\u4e2a\u5f02\u5e38\u3002\n  v.begin() \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668 vector<T>::iterator \n  v.end()   \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u9762\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\n  v.front() \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\n  v.back()  \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n  v.empty() \u8fd4\u56de1\u4e3a\u7a7a\uff0c0\u4e3a\u975e\u7a7a\n  v.swap()  \u4ea4\u6362\u4e24\u5bb9\u5668\n      vec2.swap(vec); // \u4e24\u5411\u91cf\u4ea4\u6362\u5143\u7d20\uff0cvec2.size() == 0, vec = {5, 2, 0}\n  rbegin()  \u8fd4\u56de\u9006\u5411\u5bb9\u5668\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\n  rend()    \u8fd4\u56de\u9006\u5411\u5bb9\u5668\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u9762\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\n  clear()   \u6e05\u9664\u5bb9\u5668\u4e2d\u6240\u6709\u5143\u7d20\n  max_size()    \u8fd4\u56de\u6700\u5927\u6570\u636e\u91cf\n  insert()  \u63d2\u5165\n        vec.insert(vec.begin()+i,a); //\u5728\u7b2ci+1\u4e2a\u5143\u7d20\u524d\u9762\u63d2\u5165a;\n  v.erase() \u64e6\u9664\u5143\u7d20\n        vec.erase(vec.begin()+2);   //\u5220\u9664\u7b2c3\u4e2a\u5143\u7d20               |\n        vec.erase(vec.begin()+i,vec.end()+j); //\u5220\u9664\u533a\u95f4[i,j-1];\u533a\u95f4\u4ece0\u5f00\u59cb\n\n\n\n// \u8bbf\u95ee\u6570\u636e \u968f\u673a\u8bbf\u95ee\n    cout << vec[2] << endl;    // 0, []\u8bbf\u95ee\uff0c\u65e0\u8303\u56f4\u68c0\u67e5\n    cout << vec.at(1) << endl; // 2, .at()\u8bbf\u95ee\uff0c\u4f1a\u8fdb\u884c\u8303\u56f4\u68c0\u67e5\uff0c\u8bbf\u95ee\u901f\u5ea6\u7a0d\u6162\uff0c\u4f46\u662f\u5b89\u5168\n    \n// \u901a\u8fc7 \u7d22\u5f15 \u904d\u5386\u5143\u7d20\n    for(int i = 0; i < vec.size(); ++i){\n        cout << vec[i] << " "; //\u786e\u5b9a\u7d22\u5f15\u4e0d\u4f1a\u8d85\u8303\u56f4\uff0c\u5c31\u7528\u7d22\u5f15\u8bbf\u95ee  vec.at(i)\n    }\n    cout << endl;\n    \n// \u901a\u8fc7\u8fed\u4ee3\u5668 \u904d\u5386\u5143\u7d20\n    for(vector<int>::iterator iter = vec.begin(); iter != vec.end(); ++iter){\n        cout << *iter << " "; // \u5bf9\u8fed\u4ee3\u5668\u8fdb\u884c\u89e3\u5f15\u7528\u5f97\u5230\n    }\n    cout << endl;\n    \n//\u8303\u56f4for c++ 11 \u904d\u5386\u5143\u7d20\n//    for(item:vec){\n//      cout << item << " ";\n//    }\n//    cout << endl;\n\n// \u6307\u9488\u8bbf\u95ee\n    int* p = &vec[0];\n    for(int i = 0; i < vec.size(); ++i){\n        cout << p[i]<< " ";\n    }\n\n  push_back()\u4f7f\u7528 vector::insert \u65b9\u6cd5\u5b9e\u73b0\uff0c\u5728\u5bb9\u5668\u5c3e\u90e8insert\u6765\u5b9e\u73b0\u7684\u3002\n  void push_back(_Elem _Ch)  \n  {   // insert element at end  \n   insert(end(), _Ch);  // \u7b97\u6cd5\n  } \n  pop_back() \u4f7f\u7528vector::earse\uff0c\u64e6\u9664\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5143\u7d20\u6765\u5b9e\u73b0\u7684\u3002\n  \u5220\u9664\u5bb9\u5668\u5c3e\u90e8\u5143\u7d20\uff0c\u540c\u65f6c.size()\u4f1a\u51cf\u5c11\u3002\n  void pop_back()  \n  {   // erase element at end  \n   erase(this->_Mysize - 1);    // throws if _Mysize == 0  \n  } \n  \n  v.shrink_to_fit();\n  //  \u4e3a\u4e86\u4e0d\u8ba9vector\u6d6a\u8d39\u592a\u591a\u7684\u5185\u5b58\uff0c\u6211\u4eec\u5728\u6700\u540e\u8c03\u7528\u4e86shrink_to_fit\u3002\n  // \u8be5\u51fd\u6570\u4f1a\u4e3a\u5143\u7d20\u5206\u914d\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5c06\u5269\u4f59\u7684\u5143\u7d20\u79fb\u5230\u8be5\u7a7a\u95f4\u5185\uff0c\u5e76\u4e14\u5220\u9664\u4e4b\u524d\u90a3\u4e2a\u6bd4\u8f83\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u3002\n  // \u4f1a\u5c06\u591a\u4f59\u7684\u7a7a\u95f4\u5f52\u8fd8\u7ed9\u7cfb\u7edf\n')),(0,i.kt)("h4",{id:"vector-\u4f18\u70b9"},"vector \u4f18\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\u968f\u673a\u5b58\u53d6\uff0c\u5373 vi[i] \u64cd\u4f5c \u548c vi.at(i)\u3002\n\nat() \u51fd\u6570\u56e0\u4e3a\u68c0\u67e5\u8d8a\u754c\u8981\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\uff0c\u6240\u4ee5at\u51fd\u6570\u4f1a\u8ba9\u7a0b\u5e8f\u6162\u4e00\u4e9b\u3002\n\u5f53\u9700\u8981\u975e\u5e38\u5feb\u7684\u7d22\u5f15\u6210\u5458\u65f6\uff0c\u5e76\u80fd\u4fdd\u8bc1\u7d22\u5f15\u4e0d\u8d8a\u754c\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528[]\u5feb\u901f\u8bbf\u95eevector\u5b9e\u4f8b\u3002\n\n\u52a8\u6001\u64cd\u4f5c, \u5c3e\u90e8\u63d2\u5165 vi.push_back() \u4e0e \u5c3e\u90e8\u63d2\u5220\u9664 vi.pop_back()\n\u81ea\u52a8\u8c03\u6574\u5185\u5b58\uff0c\u8282\u7701\u7a7a\u95f4\n    \ntry{} catch(){} \u6355\u83b7 vector\u8bbf\u95ee\u8d8a\u754c \u5f02\u5e38\ntry{\n   temp = v.at(k);\n}\ncatch(std::out_of_range &e){\n   std::cout << e.what() << std::endl;\n}\n\n")),(0,i.kt)("h4",{id:"vector\u7f3a\u70b9"},"vector\u7f3a\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  \u5b9e\u73b0\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c\u6548\u7387\u4f4e\n  \u53ea\u80fd\u5728\u5c3e\u90e8\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u5728\u5934\u90e8\u63d2\u5165\u4e0e\u5220\u9664\u6d88\u8017\u65f6\u95f4\u89c4\u6a21\u4e0e\u5bb9\u5668\u5927\u5c0f\u6210\u6b63\u6bd4,\u5b83\u4f1a\u5c06\u540e\u9762\u7684\u5143\u7d20\u4f9d\u6b21\u524d\u79fb\u3002\n  \u5f53\u52a8\u6001\u6dfb\u52a0\u7684\u6570\u636e\u8d85\u8fc7\u9ed8\u8ba4\u5185\u5b58\u5927\u5c0f\u65f6\uff0c\u8981\u8fdb\u884c\u6574\u4f53\u7684\u91cd\u65b0\u5206\u914d\uff0c\u62f7\u8d1d\u4e0e\u91ca\u653e\u3002\n")),(0,i.kt)("h3",{id:""}),(0,i.kt)("p",null,"3\u3001\u7b97\u6cd5\u9700\u8981\u5934\u6587\u4ef6",(0,i.kt)("inlineCode",{parentName:"p"},"#include<algorithm>")),(0,i.kt)("p",null,"(1) \u4f7f\u7528reverse\u5c06\u5143\u7d20\u7ffb\u8f6c\uff1areverse(vec.begin(),vec.end());\u5c06\u5143\u7d20\u7ffb\u8f6c\uff0c\u5373\u9006\u5e8f\u6392\u5217\uff01(\u5728vector\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e2d\u9700\u8981\u4e24\u4e2a\u8fed\u4ee3\u5668\uff0c\u4e00\u822c\u540e\u4e00\u4e2a\u90fd\u4e0d\u5305\u542b)"),(0,i.kt)("p",null,"(2)\u4f7f\u7528sort\u6392\u5e8f\uff1asort(vec.begin(),vec.end());(\u9ed8\u8ba4\u662f\u6309\u5347\u5e8f\u6392\u5217,\u5373\u4ece\u5c0f\u5230\u5927)."),(0,i.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\u6309\u7167\u964d\u5e8f\u6bd4\u8f83\uff0c\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-C++"},"\u5b9a\u4e49\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\uff1a\n\nbool Comp(const int &a,const int &b)\n{\n    return a>b;\n}\n\u8c03\u7528\u65f6:sort(vec.begin(),vec.end(),Comp)\uff0c\u8fd9\u6837\u5c31\u964d\u5e8f\u6392\u5e8f\u3002 \n\n")),(0,i.kt)("h3",{id:"dequeue"},"dequeue"),(0,i.kt)("p",null," double-end queue\uff0c\u8fde\u7eed\u5b58\u50a8\u7ed3\u6784"),(0,i.kt)("p",null,"  deque\u8fde\u7eed\u5b58\u50a8\u7ed3\u6784\uff0c\u5373\u5176\u6bcf\u4e2a\u5143\u7d20\u5728\u5185\u5b58\u4e0a\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u7c7b\u4f3c\u4e8evector\uff0c\n\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0cdeque\u63d0\u4f9b\u4e86\u4e24\u7ea7\u6570\u7ec4\u7ed3\u6784\uff0c \u7b2c\u4e00\u7ea7\u5b8c\u5168\u7c7b\u4f3c\u4e8evector\uff0c\u4ee3\u8868\u5b9e\u9645\u5bb9\u5668\uff1b  \u53e6\u4e00\u7ea7\u7ef4\u62a4\u5bb9\u5668\u7684\u9996\u4f4d\u5730\u5740\u3002\n\u8fd9\u6837\uff0cdeque\u9664\u4e86\u5177\u6709vector\u7684\u6240\u6709\u529f\u80fd\u5916\uff0c\u8fd8\u652f\u6301\u9ad8\u6548\u7684\u9996/\u5c3e\u7aef\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n1. \u5728\u961f\u5217 \u5934\u90e8\u548c\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\uff0c\u7279\u522b\u5feb O(1)\n2. \u5728\u961f\u5217\u4e2d\u95f4\u63d2\u5165\u5143\u7d20\uff0c\u7279\u522b\u6162 O(n)\n3. \u5728\u961f\u5217\u4e2d\u67e5\u627e\u5143\u7d20\uff0c\u7279\u522b\u6162 O(n)\n<-----|..................|-----\x3e\n     \u961f\u9996               \u961f\u5c3e \n*/\n#include<deque>\n#include<algorithm>\nclass deque {\n    // \u5728\u961f\u5934\u63d2\u5165\u5143\u7d20 n\n    void push_front(int n);\n    // \u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20 n\n    void push_back(int n);\n    // \u5728\u961f\u5934\u5220\u9664\u5143\u7d20\n    void pop_front();\n    // \u5728\u961f\u5c3e\u5220\u9664\u5143\u7d20\n    void pop_back();\n    // \u8fd4\u56de\u961f\u5934\u5143\u7d20\n    int front();\n    // \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\n    int back();\n}\n// \u5176\u4ed6\u63a5\u53e3\u548c vector \u7684\u7c7b\u4f3c\ncout << deq[1] ; // 5\ncout << deq.at(2) ;// 2\ndeque<int>::iterator iter = deq.begin() + 3;\ncout << *iter ; // 0\n// size() empty()  clear() swap()\n  deque<int>::iterator iter;\n  for (iter = a.begin(); iter < a.end(); ++iter)\n  {\n    // \u8ba1\u7b97\u6570\u7ec4\u4e0b\u6807\uff0cdistance\u5305\u542b\u5728algorithm\u4e2d #include<algorithm>\n    int index = distance(a.begin(), iter);\n    cout << "a[" << index << "] = " << *iter << endl;\n  }\n')),(0,i.kt)("h4",{id:"deque-\u4f18\u70b9"},"deque \u4f18\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  1\uff09\u968f\u673a\u8bbf\u95ee\uff0c\u5373[]\u64cd\u4f5c\u548cdeque.at()\n  2) \u5728\u5185\u90e8\u65b9\u4fbf\u7684\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\n  3\uff09\u53ef\u5728\u53cc\u7aef\u8fdb\u884cpop\uff0cpush\n")),(0,i.kt)("h4",{id:"deque-\u7f3a\u70b9"},"deque \u7f3a\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  \u5360\u7528\u5185\u5b58\u591a\u3002\n")),(0,i.kt)("h3",{id:"-1"}),(0,i.kt)("h3",{id:"\u53cc\u5411\u94fe\u8868list"},"\u53cc\u5411\u94fe\u8868list"),(0,i.kt)("p",null,"  list\u53cc\u5411\u94fe\u8868\uff0c\u975e\u8fde\u7eed\u5b58\u50a8\u7ed3\u6784\uff0c\u5177\u6709\u53cc\u94fe\u8868\u7ed3\u6784"),(0,i.kt)("p",null,"  \u975e\u8fde\u7eed\u5b58\u50a8\u7ed3\u6784\uff0c\u5177\u6709\u53cc\u94fe\u8868\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5143\u7d20\u7ef4\u62a4\u4e00\u5bf9\u524d\u5411\u548c\u540e\u5411\u6307\u9488\uff0c\u56e0\u6b64\u652f\u6301\u524d\u5411/\u540e\u5411\u904d\u5386\u3002   "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n1. \u5728\u94fe\u8868\u4e2d\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165/\u5220\u9664 \u5143\u7d20 \u7279\u522b\u5feb O(1)\n2. \u5728\u94fe\u8868\u4e2d\u67e5\u627e\u5143\u7d20 \u7279\u522b\u6162\uff0c O(n)\uff0c \u5b9e\u9645\u4e0a\u56e0\u4e3a\u5185\u5b58\u4e0d\u8fde\u7eed\uff0c\u6d6a\u8d39\u8bbf\u5b58case\uff0c\u6bd4vector\u6162\u4e86\u5f88\u591a\n3. \u65e0\u968f\u673a\u8bbf\u95ee [] \u4ee5\u53ca .at()\n4. splice() \u5b9e\u73b0list\u62fc\u63a5\u7684\u529f\u80fd\u3002\u5c06\u6e90list\u7684\u5185\u5bb9\u90e8\u5206\u6216\u5168\u90e8\u5143\u7d20\u5220\u9664\uff0c\u62fc\u63d2\u5165\u5230\u76ee\u7684list\u3002 O(1)\n*/\n#include<list>\n#include<algorithm> // std::find\n#include<iostream>\nusing namespace std;\nint main(){\n  list<char> lit;   \n  //-----------\u94fe\u8868\u53ef\u4ee5\u4ece\u4e24\u7aef\u63d2\u5165------------------- \xa0 \xa0 \xa0 \xa0\n  lit.push_back('b');  \n  lit.push_front('d');\n  //-----------\u94fe\u8868\u6253\u5370------------------- \n  list<char>::iterator it;    \n  for(it=lit.begin();it!=lit.end();it++)  \n  {  \n    cout<<*it<<\"  \";  \n  }  \n  cout<<endl;  \n  //-----------\u94fe\u8868\u53ef\u4ee5\u4ece\u4e24\u7aef\u5220\u9664-------------------   \n  lit.pop_back();    \n  lit.pop_front();  \n  //-------------\u5220\u9664\u6240\u6709\u7684a---------------------------------  \n  //lit.remove('a');  //\u5220\u9664\u6240\u6709\u7684a;  \n  //-----------\u5c06list\u91cc\u7684\u6570\u636e\u5012\u5e8f\u6392\u5217---------------  \n  lit.reverse();  \n  //-------------\u79fb\u9664\u8fde\u7eed\u4e14\u76f8\u540c\u7684a\uff0c\u53ea\u5269\u4e0b\u4e00\u4e2a;--------------------------------  \n  lit.unique();  //\u79fb\u9664\u8fde\u7eed\u4e14\u76f8\u540c\u7684a\uff0c\u53ea\u5269\u4e0b\u4e00\u4e2a;  \n  list<char> lit1; \n  list<char>::iterator it1; \n  //-------------\u5c06\u4e00\u4e2a\u94fe\u8868\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u94fe\u8868---------------------------------  \n  it1=find(lit.begin(),lit.end(),'f');  //\u5148\u7684\u627e\u5230\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u5728\u8be5\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u63d2\u5165\uff1b  \n  lit.splice(it1,lit1); //\u5c06\u7b2c\u4e8c\u4e2a\u94felit1\u8868\u63d2\u5165\u5230\u7b2c\u4e00\u4e2a\u94fe\u8868lit\u4e2d\uff1b\u5408\u5e76\u540e\u7684\u94fe\u8868\u5c31\u6ca1\u4e86\uff0c\u56e0\u4e3a\u4f20\u7684\u662f&\n  // \u6253\u5370\u51fd\u6570\n  void printList(const list<int>& a)\n  {\n  // \u6ce8\u610f\u5f62\u53c2\u4e2d\u662fconst list\uff0c\u6240\u4ee5\u4e0b\u9762\u4e5f\u9700\u8981\u7528const_iterator\n  // \u5426\u5219distance\u65e0\u6cd5\u4f7f\u7528\n  list<int>::const_iterator iter;\n  for (iter = a.begin(); iter != a.end(); ++iter)\n  {// \u8ba1\u7b97\u6570\u7ec4\u4e0b\u6807\uff0cdistance\u5305\u542b\u5728algorithm\u4e2d #include<algorithm>\n    size_t index = distance(a.begin(), iter);\n    cout << \"a[\" << index << \"] = \" << *iter << endl;\n  }\n  cout << endl;\n  }\n\n  list<int> a;\n  // push_front\u3001push_back\u63d2\u5165\u6570\u636e\n  a.push_front(4);\n  a.push_front(3);\n  a.push_front(2);\n  a.push_front(1);\n  a.push_back(50);\n  printList(a);\n\n  // insert\u63d2\u5165\u6570\u636e\n  list<int>::iterator iter;\n  iter = a.begin();\n  a.insert(iter, 0);\n  a.insert(++iter, 10);\n  a.insert(++iter, 4, 20); // \u63d2\u51654\u4e2a20\n  printList(a);\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'  // sort\u6392\u5e8f\n  cout << "sort\u6392\u5e8f" << endl;\n  a.sort();\n  printList(a);\n\n  // reverse\u9006\u5e8f\n  cout << "reverse\u9006\u5e8f" << endl;\n  a.reverse();\n  printList(a);\n\n  // erase\u5220\u9664\u6307\u5b9a\u5143\u7d20\n  cout << "erase\u5220\u9664\u6307\u5b9a\u5143\u7d20" << endl;\n  a.erase(iter);\n  printList(a);\n\n  // erase\u5220\u9664\u6307\u5b9a\u533a\u95f4\u7684\u5143\u7d20\n  cout << "erase\u5220\u9664\u6307\u5b9a\u533a\u95f4\u5143\u7d20" << endl;\n  a.erase(++a.begin(), --a.end());\n  printList(a);\n')),(0,i.kt)("h4",{id:"list-\u4f18\u70b9"},"list \u4f18\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  1\uff09\u4e0d\u4f7f\u7528\u8fde\u7eed\u5185\u5b58\u5b8c\u6210\u52a8\u6001\u64cd\u4f5c\u3002\n  2\uff09\u5728\u5185\u90e8\u65b9\u4fbf\u7684\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c \u52a8\u6001\u64cd\u4f5c\uff0c\u63d2\u5165\u4e0e\u5220\u9664\u6548\u7387\u9ad8\n  3\uff09\u53ef\u5728\u4e24\u7aef\u8fdb\u884cpush\u3001pop \n")),(0,i.kt)("h4",{id:"list\u7f3a\u70b9"},"list\u7f3a\u70b9\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  1) \u4e0d\u80fd\u8fdb\u884c\u5185\u90e8\u7684\u968f\u673a\u8bbf\u95ee\uff0c\u5373\u4e0d\u652f\u6301[ ]\u64cd\u4f5c\u7b26\u548cvector.at()\n  2) \u4e0d\u80fd\u8fdb\u884c\u5185\u90e8\u7684\u968f\u673a\u8bbf\u95ee\uff0c\u5373\u4e0d\u652f\u6301[ ]\u64cd\u4f5c\u7b26\u548cvector.at()\n")),(0,i.kt)("h3",{id:"array"},"array"),(0,i.kt)("p",null,"array\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u987a\u5e8f\u5bb9\u5668\uff0c\u5b83\u4eec\u4fdd\u5b58\u4e86\u4e00\u4e2a\u4ee5\u4e25\u683c\u7684\u7ebf\u6027\u987a\u5e8f\u6392\u5217\u7684\u7279\u5b9a\u6570\u91cf\u7684\u5143\u7d20\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'template < class T, size_t N > class array;\n      iterator begin() noexcept; //\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002\n\n      reverse_iterator rbegin\uff08\uff09noexcept; //\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u53cd\u5411\u8fed\u4ee3\u5668\u3002\n\nconst_iterator cbegin\uff08\uff09const noexcept; //\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5e38\u91cf\u8fed\u4ee3\u5668\uff08const_iterator\uff09\uff1b\u8fd9\u4e2a\u8fed\u4ee3\u5668\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\uff0c\u4f46\u662f\u4e0d\u80fd\u7528\u6765\u4fee\u6539\u5b83\u6307\u5411\u7684\u5185\u5bb9\u3002\n\nconstexpr size_type size\uff08\uff09noexcept; //\u8fd4\u56de\u6570\u7ec4\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\n\nconstexpr size_type max_size() noexcept; //\u8fd4\u56de\u6570\u7ec4\u5bb9\u5668\u53ef\u5bb9\u7eb3\u7684\u6700\u5927\u5143\u7d20\u6570\u3002\u6570\u7ec4\u5bf9\u8c61\u7684max_size\u4e0e\u5176size\u4e00\u6837\uff0c\u59cb\u7ec8\u7b49\u4e8e\u7528\u4e8e\u5b9e\u4f8b\u5316\u6570\u7ec4\u6a21\u677f\u7c7b\u7684\u7b2c\u4e8c\u4e2a\u6a21\u677f\u53c2\u6570\u3002\n\n      value_type* data() noexcept; //\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u5bf9\u8c61\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\n//\u7531\u4e8e\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5b58\u50a8\u5728\u8fde\u7eed\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u6240\u4ee5\u68c0\u7d22\u5230\u7684\u6307\u9488\u53ef\u4ee5\u504f\u79fb\u4ee5\u8bbf\u95ee\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\u3002\nint main ()\n{\n  const char* cstr = "Test string";\n  std::array<char,12> charray;\n  std::memcpy (charray.data(),cstr,12);\n  std::cout << charray.data() << \'\\n\';\n  return 0;\n}\nvoid fill (const value_type& val); //\u7528val\u586b\u5145\u6570\u7ec4\u6240\u6709\u5143\u7d20\uff0c\u5c06val\u8bbe\u7f6e\u4e3a\u6570\u7ec4\u5bf9\u8c61\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u3002\n\nstd::get<0>(myarray)\uff1b//\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\u5bb9\u5668\uff0c\u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20\u7684\u5f15\u7528\u3002\n  myelement = std::get<2>(myarray);\n  std::get<2>(myarray) = std::get<0>(myarray);\n  std::get<0>(myarray) = myelement;\n\n\nrelational operators (array) //\u4f9d\u6b64\u6bd4\u8f83\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u5173\u7cfb\u3002\n  if (a==b) std::cout << "a and b are equal\\n";\n  if (b!=c) std::cout << "b and c are not equal\\n";\n  if (b<c) std::cout << "b is less than c\\n";\n  if (c>b) std::cout << "c is greater than b\\n";\n  if (a<=b) std::cout << "a is less than or equal to b\\n";\n  if (a>=b) std::cout << "a is greater than or equal to b\\n";\n')),(0,i.kt)("h2",{id:"12-\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u7ea2\u9ed1\u4e8c\u53c9\u6811"},"1.2 \u6709\u5e8f\u5173\u8054\u5bb9\u5668\uff08\u7ea2\u9ed1\u4e8c\u53c9\u6811\uff09"),(0,i.kt)("p",null,"\u6309\u5173\u952e\u5b57\u4fdd\u5b58\u548c\u8bbf\u95ee  map (key-value\u952e\u503c\u5bf9\uff0c\u7c7b\u4f3c\u5b57\u5178\u7684\u6982\u5ff5) set(\u53ea\u5305\u542b\u4e00\u4e2a\u5173\u952e\u5b57(\u5173\u952e\u5b57\u5373\u503c)) "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"set, multiset \u5355\u503c\u6811\u96c6\u5408  multi \u5173\u952e\u5b57\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\nmap, multimap \u914d\u5bf9\u53cc\u503c\u6811\u96c6\u5408\n\n  map      \u5173\u8054\u6570\u7ec4\uff1a\u4fdd\u5b58\u5173\u952e\u5b57-\u503c\u5bf9\n  set      \u5173\u952e\u5b57\u5373\u503c,\u53ea\u4fdd\u5b58\u5173\u952e\u5b57\u7684\u5bb9\u5668\n  multimap \u5173\u952e\u5b57\u53ef\u91cd\u590d\u51fa\u73b0\u7684 map\n  multiset \u5173\u952e\u5b57\u53ef\u91cd\u590d\u51fa\u73b0\u7684 set \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'  //map\u521d\u59cb\u5316\u4e3a\u7a7a\n  map<string, size_t> word_count;//string \u5230 size_t \u7684\u7a7amap\n  //set\u7684\u5217\u8868\u521d\u59cb\u5316\n  set<string> exclude = {"The", "But", "And", "Or", "An", "A",\n                         "the", "but", "and", "or", "an", "a"};//\u9700\u8981\u5254\u9664\u7684\u5355\u8bcd\n  //map\u7684\u5217\u8868\u521d\u59cb\u5316 \u4e09\u4e2a\u5143\u7d20 \u5c06\u59d3 \u6620\u5c04\u4e3a \u540d\u5b57\n  map<string, string> authers = {{"Jyly", "Jeam"}\uff0c\n                                 {"Aust", "Amy"},\n                                 {"Dickens", "Charles"} };\n  // multimap multisetde\u521d\u59cb\u5316,\u4e00\u4e2a\u5355\u8bcd\u5bf9\u5e94\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8bcd\u4e49,\u5c31\u662f\u8bf4 \u5173\u952e\u5b57\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\n  vector<int> ivec;\n  for(vector<int>::size_type i = 0; i != 10; ++i){\n        ivec.push_back(i);\n        ivec.push_back(i);// \u6bcf\u4e2a\u6570\u91cd\u590d\u4fdd\u5b58\u4e00\u6b21\n  }\n  // iset\u5305\u542b\u6765\u81eaivec\u7684\u4e0d\u91cd\u590d\u7684\u5143\u7d20 \u542b\u670910\u4e2a\u5143\u7d20\n  set<int> iset(ivec.cbegin(), ivec.cend());\n  // multiset \u5305\u542bivec\u7684\u6240\u670920\u4e2a\u5143\u7d20\n  multiset<int> miset(ivec.cbegin(), ivec.cend());\n')),(0,i.kt)("h2",{id:"13--\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u54c8\u5e0c"},"1.3  \u65e0\u5e8f\u5173\u8054\u5bb9\u5668\uff08\u54c8\u5e0c\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"unordered set/multiset  \u5355\u503c\u6876\u96c6\u5408\nunordered map/multimap  \u914d\u5bf9\u53cc\u503c\u6876\u96c6\u5408 \n//\u54c8\u5e0c\u51fd\u6570\u5b9e\u73b0\n  unordered_map \u54c8\u5e0c\u51fd\u6570\u7ec4\u7ec7\u7684map\n  unordered_set \u54c8\u5e0c\u51fd\u6570\u7ec4\u7ec7\u7684set\n  unordered_multimap \u54c8\u5e0c\u51fd\u6570\u7ec4\u7ec7\u7684multimap, \u5173\u952e\u5b57\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\n  unordered_multiset \u54c8\u5e0c\u51fd\u6570\u7ec4\u7ec7\u7684multiset\uff0c \u5173\u952e\u5b57\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\n\n// \u57fa\u4e8ehash table\uff08\u54c8\u5e0c\u8868\uff09\n  hash_map\n  hash_set\n  hash_multimap\n  hash_multiset\n")),(0,i.kt)("h4",{id:"\u65e0\u5e8f\u5bb9\u5668\u7684\u5b58\u50a8\u65b9\u5f0f"},"\u65e0\u5e8f\u5bb9\u5668\u7684\u5b58\u50a8\u65b9\u5f0f"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u7ba1\u7406\u6876")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u65e0\u5e8f\u5bb9\u5668\u5728\u5b58\u50a8\u7ec4\u7ec7\u4e0a\u4e3a\u4e00\u7ec4\u6876(bucket)\uff0c\u6bcf\u4e2a\u6876\u4fdd\u5b58\u96f6\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528\u4e00\u4e2ahash function(\u54c8\u5e0c\u51fd\u6570)\u5c06\u5143\u7d20\u6620\u5c04\u5230\u6876\uff0c")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u4e3a\u4e86\u8bbf\u95ee\u5143\u7d20\uff0c\u5bb9\u5668\u9996\u5148\u8ba1\u7b97\u5143\u7d20\u7684\u54c8\u5e0c\u503c\uff0c\u5b83\u6307\u51fa\u5e94\u8be5\u641c\u7d22\u54ea\u4e2a\u6876\uff0c\u5bb9\u5668\u5c06\u5177\u6709\u56fa\u5b9a\u54c8\u5e0c\u503c\u7684\u6240\u6709\u5143\u7d20\u90fd\u4fdd\u5b58\u5728\u76f8\u5e94\u7684\u6876\u4e2d\u3002")),(0,i.kt)("p",null,"\u5bf9\u4e8e\u5b58\u50a8\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u65e0\u5e8f\u5bb9\u5668\uff0c \u9700\u8981\u81ea\u5df1\u5b9a\u4e49\u300c\u54c8\u5e0c\u51fd\u6570\u300d\u548c\u300c\u6bd4\u8f83\u51fd\u6570\u300d(==) \u6765\u5b9e\u73b0\u5b58\u50a8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  //\u54c8\u5e0c\u51fd\u6570\n  size_t hasher(const Sales_data &sd){\n        return hash<string>()(sd.isbn());//h\u54c8\u5e0c\u7c7b\u578b\n  }\n  //\u6bd4\u8f83\u51fd\u6570\n  bool eqOp(const Sales_data &lhs, const Sales_data &rhs){\n    return \xa0 lhs.isbn() == rhs.isbn();// \u6bd4\u8f83\u51fd\u6570\xa0\n  }\n  // \u5b9a\u4e49\u7279\u5b9a\u7c7b\u7684 unordered_multiset\n  using = sd_unordered_multiset = unordered_multiset<Sales_data, decltype(hasher)*, decltype(eqOp)*>// \u4e24\u4e2a\u51fd\u6570\u6307\u9488\n")),(0,i.kt)("h2",{id:"\u7ed3\u679c\u5206\u6790"},"\u7ed3\u679c\u5206\u6790"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"  \u8fd0\u884c\u6548\u7387\u65b9\u9762\uff1aunordered_map\u6700\u9ad8\uff0chash_map\u5176\u6b21\uff0c\u800cmap\u6548\u7387\u6700\u4f4e\n  \u5360\u7528\u5185\u5b58\u65b9\u9762\uff1ahash_map\u5185\u5b58\u5360\u7528\u6700\u4f4e\uff0cunordered_map\u5176\u6b21\uff0c\u800cmap\u5360\u7528\u6700\u9ad8\n")),(0,i.kt)("h2",{id:"pair\u7c7b\u578b"},"pair\u7c7b\u578b"),(0,i.kt)("p",null,"\u7528\u6765\u751f\u6210 \u7279\u70b9\u7c7b\u578b\u7684\u6a21\u677f\nfirst \u548c second \u6765\u8bbf\u95ee",(0,i.kt)("br",{parentName:"p"}),"\n","map\u7684\u5143\u7d20\u662f pair\u7c7b\u578b",(0,i.kt)("br",{parentName:"p"}),"\n","make_pair(v1, v2)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'  pair<string, string> anon;//\n  pair<string, size_t> word_count;//\n  pair<string, vector<int>> line;//\u4fdd\u5b58 string \u548c vector<int> \n  pair<string, string> author{"James", "Joyce"};//\u5217\u8868\u521d\u59cb\u5316\n  // pair\u7c7b\u578b\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u51fd\u6570\n  pair<string, int> process(vector<string> &v){\n        if(!v.empty())//back()  \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n              return {v.back(), v.back().size()};//\u5217\u8868\u521d\u59cb\u5316\n              // return pair<string, int>(v.back(), v.back().size());\n              // return make_pair(v.back(), v.back().size()):\n        else \n              return pair<string, int>();//\u9690\u5f0f\u6784\u9020\u8fd4\u56de\u503c\n        }\n')),(0,i.kt)("h3",{id:"priority_queue"},"priority_queue"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <queue>  // std::priority_queue\n// \u672c\u6587\u91cc\u7684\u6240\u6709\u4f18\u5148\u961f\u5217\u90fd\u4f1a\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\n// \u5982\u679c\u4e0d\u60f3\u52a0\u547d\u540d\u7a7a\u95f4\uff0c\u9700\u8981\u4f7f\u7528\uff1ausing std::priority_queue;\n// \u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 using namespace std;\nstd::priority_queue<T, Container, Compare> q;\n/*\n * T: \u50a8\u5b58\u7684\u5143\u7d20\u7c7b\u578b\n * Container:\n * \u50a8\u5b58\u7684\u5bb9\u5668\u7c7b\u578b\uff0c\u4e14\u8981\u6c42\u6ee1\u8db3\u987a\u5e8f\u5bb9\u5668\u7684\u8981\u6c42\u3001\u5177\u6709\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u7684\u8981\u6c42 \u4e14\u652f\u6301\n * front() / push_back() / pop_back() \u4e09\u4e2a\u51fd\u6570\uff0c \u6807\u51c6\u5bb9\u5668\u4e2d std::vector /\n * std::deque \u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u3002 Compare: \u9ed8\u8ba4\u4e3a\u4e25\u683c\u7684\u5f31\u5e8f\u6bd4\u8f83\u7c7b\u578b\n * priority_queue \u662f\u6309\u7167\u5143\u7d20\u4f18\u5148\u7ea7\u5927\u7684\u5728\u5806\u9876\uff0c\u6839\u636e operator <\n * \u7684\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u662f\u5927\u6839\u5806\uff0c \u6211\u4eec\u53ef\u4ee5\u5229\u7528\n * greater<T>\uff08\u82e5\u652f\u6301\uff09\uff0c\u6216\u8005\u81ea\u5b9a\u4e49\u7c7b\u7684\u5c0f\u4e8e\u53f7\u91cd\u8f7d\u5b9e\u73b0\u6392\u5e8f\u3002\n * \u6ce8\u610f\uff1a\u53ea\u652f\u6301\u5c0f\u4e8e\u53f7\u91cd\u8f7d\u800c\u4e0d\u652f\u6301\u5176\u4ed6\u6bd4\u8f83\u7b26\u53f7\u7684\u91cd\u8f7d\u3002\n */\n// \u6784\u9020\u65b9\u5f0f \uff1a\nstd::priority_queue<int> q1;\nstd::priority_queue<int, vector<int>> q2;\n// C++11 \u524d\uff0c\u8bf7\u4f7f\u7528 vector<int> >\uff0c\u7a7a\u683c\u4e0d\u53ef\u7701\u7565\nstd::priority_queue<int, deque<int>, greater<int>> q3;\n// \u6ce8\u610f\uff1a\u4e0d\u53ef\u8df3\u8fc7\u5bb9\u5668\u53c2\u6570\u76f4\u63a5\u4f20\u5165\u6bd4\u8f83\u7c7b\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"top()")," : \u8bbf\u95ee\u6808\u9876\u5143\u7d20 \u5e38\u6570\u590d\u6742\u5ea6"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"empty()")," : \u68c0\u67e5\u5e95\u5c42\u7684\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a \u5e38\u6570\u590d\u6742\u5ea6"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"size()")," : \u8fd4\u56de\u5e95\u5c42\u5bb9\u5668\u7684\u5143\u7d20\u6570\u91cf \u5e38\u6570\u590d\u6742\u5ea6"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"push()")," : \u63d2\u5165\u5143\u7d20\uff0c\u5e76\u5bf9\u5e95\u5c42\u5bb9\u5668\u6392\u5e8f \u6700\u574f \u5747\u644a "),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"pop()")," : \u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20 \u6700\u574f ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct cmp1\n{\n     bool operator ()(int x, int y)\n    {\n        return x > y;//\u5c0f\u7684\u4f18\u5148\u7ea7\u9ad8\n    }\n};\nstruct cmp2\n{\n    bool operator ()(const int x, const int y)\n    {\n        return tmp[x] > tmp[y]; \n        //tmp[]\u5c0f\u7684\u4f18\u5148\u7ea7\u9ad8\uff0c\u7531\u4e8e\u53ef\u4ee5\u5728\u961f\u5916\u6539\u53d8\u961f\u5185\u7684\u503c\uff0c\n        //\u6240\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u8fbe\u4e0d\u5230\u771f\u6b63\u7684\u4f18\u5148\uff0c\u5efa\u8bae\u7528\u7ed3\u6784\u4f53\u7c7b\u578b\u3002\n    }\n};\nstruct node\n{\n    int x, y;\n    friend bool operator < (node a, node b)\n    {\n        return a.x > b.x;//\u7ed3\u6784\u4f53\u4e2d\uff0cx\u5c0f\u7684\u4f18\u5148\u7ea7\u9ad8\n    }\n};\n \npriority_queue<int>q1;\npriority_queue<int, vector<int>, cmp1>q2;cpp\npriority_queue<int, vector<int>, cmp2>q3;\npriority_queue<node>q4;\n\n")),(0,i.kt)("h3",{id:"string-\u7c7b"},(0,i.kt)("inlineCode",{parentName:"h3"},"string")," \u7c7b"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")," \u7c7b\uff0c\u8bfb\u5230\u7a7a\u683c\u5c31\u505c\u3002\u7406\u8bba\u4e0a\u7b49\u4e8echar\u6570\u7ec4"),(0,i.kt)("p",null,"\u4f18\u70b9\uff1a\u81ea\u52a8\u5904\u7406string\u7684\u5927\u5c0f\uff0ceg\uff1a\u5927\u6570\u7684\u5947\u5076\u6027"),(0,i.kt)("p",null,"\u7528\u6cd5:  + - =   str.size()"),(0,i.kt)("p",null,"string\u7c7bI/O"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"char charr[20];cin.getline( charr, 20);   //// \u8bfb\u5165\u4e00\u884c, \u53d7\u9650\u4e8e\u521d\u59cb\u5316\u65f6\u7684\u7a7a\u95f4\uff0c\u63a5\u53d7\u7a7a\u683cgetline( cin, string );   // \u8bfb\u5165\u4e00\u884c\uff0c\u63a5\u53d7\u7a7a\u683c\n")),(0,i.kt)("h2",{id:"\u8fd0\u7b97\u7b26\u91cd\u8f7d"},"\u8fd0\u7b97\u7b26\u91cd\u8f7d"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/liitdar/article/details/80654324"},"https://blog.csdn.net/liitdar/article/details/80654324")),(0,i.kt)("h2",{id:"\u5b9a\u4e49\u4e00\u4e2abitset"},"\u5b9a\u4e49\u4e00\u4e2abitset"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},'// constructing bitsets\n#include <iostream>       //std::cout\n#include <string>         // std::string\n#include <bitset>         // std::bitset\nint main (){  \n    std::bitset<16> foo;  \n    std::bitset<16> bar (0xfa2);  \n    std::bitset<16> baz (std::string("0101111001"));  \n    std::cout << "foo: " << foo << \'\\n\';  \n    std::cout << "bar: " << bar << \'\\n\';  \n    std::cout << "baz: " << baz << \'\\n\';  \n    return 0;\n}\n')),(0,i.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"foo: 0000000000000000bar: 0000111110100010\n")),(0,i.kt)("p",null,"bitset\u6709\u4e00\u4e2a\u7279\u6027\uff1a\u6574\u6570\u7c7b\u578b\u548c\u5e03\u5c14\u6570\u7ec4\u90fd\u80fd\u8f6c\u5316\u6210bitset\u3002"),(0,i.kt)("p",null,"bitset\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5c31\u9700\u8981\u786e\u5b9a\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e0d\u786e\u5b9a\u957f\u5ea6\u7684bitset\uff0c\u8bf7\u4f7f\u7528\uff08\u5947\u8469\u7684\uff09",(0,i.kt)("inlineCode",{parentName:"p"},"vector<bool>"),"\u3002"),(0,i.kt)("h4",{id:"bitset\u7684\u76f8\u5173\u51fd\u6570"},"bitset\u7684\u76f8\u5173\u51fd\u6570"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u4e00\u4e2a\u53eb\u505afoo\u7684bitset\uff1a\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.size()")," \u8fd4\u56de\u5927\u5c0f\uff08\u4f4d\u6570\uff09\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.count()")," \u8fd4\u56de1\u7684\u4e2a\u6570\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.any()")," \u8fd4\u56de\u662f\u5426\u67091\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.none()")," \u8fd4\u56de\u662f\u5426\u6ca1\u67091\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.set()")," \u5168\u90fd\u53d8\u62101"),(0,i.kt)("h4",{id:"bitset\u7684\u8fd0\u7b97"},"bitset\u7684\u8fd0\u7b97"),(0,i.kt)("p",null,"bitset\u7684\u8fd0\u7b97\u5c31\u50cf\u4e00\u4e2a\u666e\u901a\u7684\u6574\u6570\u4e00\u6837\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e0e(&)\u3001\u6216(|)\u3001\u5f02\u6216(^)\u3001\u5de6\u79fb(",(0,i.kt)("inlineCode",{parentName:"p"},"<<"),")\u3001\u53f3\u79fb(",(0,i.kt)("inlineCode",{parentName:"p"},">>"),")\u7b49\u64cd\u4f5c\u3002"),(0,i.kt)("h2",{id:"\u7b97\u6cd5"},"\u7b97\u6cd5"),(0,i.kt)("h3",{id:"\u8d28\u53d8\u7b97\u6cd5\u548c\u975e\u8d28\u53d8\u7b97\u6cd5"},"\u8d28\u53d8\u7b97\u6cd5\u548c\u975e\u8d28\u53d8\u7b97\u6cd5"),(0,i.kt)("p",null,"\u6240\u8c13\u201c\u8d28\u53d8\u7b97\u6cd5\u201d\u662f\u6307\u4f5c\u7528\u5728\u7531\u8fed\u4ee3\u5668","[first,last]","\u6240\u6807\u793a\u51fa\u6765\u7684\u533a\u95f4\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u5185\u5bb9\uff1a\u6bd4\u5982\u62f7\u8d1d(copy)\u3001\u4e92\u6362(swap)\u3001\u66ff\u6362(replace)\u3001\u586b\u5199(fill)\u3001\u5220\u9664(remove)\u3001\u6392\u5217\u7ec4\u5408(permutation)\u3001\u5206\u5272(partition)\u3002\u968f\u673a\u91cd\u6392(randomshuffling)\u3001\u6392\u5e8f(sort)\u7b49\u7b97\u6cd5\uff0c\u90fd\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u3002"),(0,i.kt)("p",null,"\u975e\u8d28\u53d8\u7b97\u6cd5\u662f\u6307\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u5185\u5bb9\u3002\u6bd4\u5982\u67e5\u627e(find)\uff0c\u5339\u914d(search)\u3001\u8ba1\u6570\uff08count\uff09\u3001\u904d\u5386(for_each)\u3001\u6bd4\u8f83(equal_mismatch)\u3001\u5bfb\u627e\u6781\u503c(max,min)\u7b49\u7b97\u6cd5\u3002"))}u.isMDXComponent=!0}}]);