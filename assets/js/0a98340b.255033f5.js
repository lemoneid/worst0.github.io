(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[2943],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function l(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,l=function(n,e){if(null==n)return{};var t,r,l={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(l[t]=n[t]);return l}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(l[t]=n[t])}return l}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,l=n.mdxType,o=n.originalType,c=n.parentName,p=i(n,["components","mdxType","originalType","parentName"]),u=s(t),d=l,k=u["".concat(c,".").concat(d)]||u[d]||f[d]||o;return t?r.createElement(k,a(a({ref:e},p),{},{components:t})):r.createElement(k,a({ref:e},p))}));function d(n,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof n||l){var o=t.length,a=new Array(o);a[0]=u;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=n,i.mdxType="string"==typeof n?n:l,a[1]=i;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},84462:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return f}});var r=t(22122),l=t(19756),o=(t(67294),t(3905)),a=["components"],i={id:"B6.IO",title:"B6.IO","typora-root-url":"../"},c={unversionedId:"Operating_system/B6.IO",id:"Operating_system/B6.IO",isDocsHomePage:!1,title:"B6.IO",description:"IO",source:"@site/docs/5.Operating_system/B6.IO.md",sourceDirName:"5.Operating_system",slug:"/Operating_system/B6.IO",permalink:"/Operating_system/B6.IO",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/5.Operating_system/B6.IO.md",version:"current",lastUpdatedAt:1624240624,formattedLastUpdatedAt:"6/21/2021",frontMatter:{id:"B6.IO",title:"B6.IO","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"IPC\uff1a\u8fdb\u7a0b\u95f4\u901a\u4fe1",permalink:"/Operating_system/B5.IPC"},next:{title:"B7.mmap",permalink:"/Operating_system/B7.mmap"}},s=[{value:"select-poll-epoll",id:"select-poll-epoll",children:[]},{value:"get_conf\u51fd\u6570\u5b9e\u73b0",id:"get_conf\u51fd\u6570\u5b9e\u73b0",children:[]},{value:"select\u5b9e\u4f8b",id:"select\u5b9e\u4f8b",children:[]},{value:"epoll\u5b9e\u4f8b",id:"epoll\u5b9e\u4f8b",children:[]}],p={toc:s};function f(n){var e=n.components,i=(0,l.Z)(n,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"IO"),(0,o.kt)("p",null,"\u963b\u585eIO:\u8d44\u6e90\u6ca1\u6709\u5230\u8fbe\u5c31\u4f1a\u963b\u585e"),(0,o.kt)("p",null,"BlOCK"),(0,o.kt)("p",null,"fcntl\u6587\u4ef6\u63a7\u5236"),(0,o.kt)("p",null,"access\u83b7\u53d6"),(0,o.kt)("p",null,"\u201c\u672f\u8bed\u4e0d\u5e26\u7f13\u51b2\u6307\u7684\u662f\u6bcf\u4e2aread\u548cwrite\u90fd\u8c03\u7528\u55ef\u5185\u6838\u4e2d\u7684\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\u6240\u6709\u7684\u78c1\u76d8I/O\u90fd\u8981\u7ecf\u8fc7\u5185\u6838\u7684\u5757\u7f13\u51b2\uff08\u4e5f\u79f0\u5185\u6838\u7684\u7f13\u51b2\u533a\u9ad8\u901f\u7f13\u5b58\uff09\uff0c\u552f\u4e00\u4f8b\u5916\u7684\u662f\u5bf9\u539f\u59cb\u78c1\u76d8\u8bbe\u5907\u7684I/O\u3002\u65e2\u7136read\u6216write\u7684\u6570\u636e\u90fd\u8981\u88ab\u5185\u6838\u7f13\u51b2\uff0c\u90a3\u4e48\u672f\u8bed\u201c\u4e0d\u5e26\u7f13\u51b2\u7684I/O\u201c\u6307\u7684\u662f\u5728\u7528\u6237\u7684\u8fdb\u7a0b\u4e2d\u5bf9\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u4f1a\u81ea\u52a8\u7f13\u51b2\uff0c\u6bcf\u6b21read\u6216write\u5c31\u8981\u8fdb\u884c\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528"),(0,o.kt)("p",null,"stat\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"setbuf")),(0,o.kt)("p",null,"block\u5757\u5927\u5c0f\u662f\u6587\u4ef6\u7684\u57fa\u672c\u5355\u4f4d512,1024,2048,4096,\u6574\u6570\u500d\u5757\u5927\u5c0f,\u5176\u4f59\u7f6e0"),(0,o.kt)("p",null,"\u7f13\u51b2IO:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"block buffered \u5757\u7f13\u51b2/\u5168\u7f13\u51b2 //\u6587\u4ef6\u64cd\u4f5c,fflush\u5237\u65b0\u7f13\u51b2,\u5426\u5219\u5757block\u5927\u5c0f\u624d\u5199\u5165\u6587\u4ef6"),(0,o.kt)("li",{parentName:"ul"},"none-buffered \u65e0\u7f13\u51b2 //\u64cd\u4f5c\u9519\u8bef"),(0,o.kt)("li",{parentName:"ul"},"line buffered \u884c\u7f13\u51b2 //printf\u6253\u5370\u5230\u7ec8\u7aef,\u52a0\u56de\u8f66\u8f93\u51fa")),(0,o.kt)("p",null,"\u7f13\u51b2\u673a\u5236:\u7b49\u5230block\u5927\u5c0f\u518d\u5199\u5165\u78c1\u76d8"),(0,o.kt)("p",null,"df -h\u78c1\u76d8\u4fe1\u606f"),(0,o.kt)("p",null,"\u6807\u51c6IO(fread...)\u5f0a\u7aef\u662f\u4e24\u6b21\u62f7\u8d1d:",(0,o.kt)("strong",{parentName:"p"},"\u6570\u636e\u4f1a\u5148\u88ab\u62f7\u8d1d\u5230\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u7136\u540e\u624d\u4f1a\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u7f13\u51b2\u533a\u62f7\u8d1d\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e\u8bfb\u64cd\u4f5c"),"\uff1a\u5f53\u5e94\u7528\u7a0b\u5e8f\u8981\u53bb\u8bfb\u53d6\u67d0\u5757\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u5757\u6570\u636e\u5df2\u7ecf\u5728\u9875\u7f13\u5b58\u4e2d\uff0c\u90a3\u5c31\u8fd4\u56de\u4e4b\u3002\u800c\u4e0d\u9700\u8981\u7ecf\u8fc7\u786c\u76d8\u7684\u8bfb\u53d6\u64cd\u4f5c\u4e86\u3002\u5982\u679c\u8fd9\u5757\u6570\u636e\u4e0d\u5728\u9875\u7f13\u5b58\u4e2d\uff0c\u5c31\u9700\u8981\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u5230\u9875\u7f13\u5b58\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e\u5199\u64cd\u4f5c"),"\uff1a\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5c06\u6570\u636e\u5148\u5199\u5230\u9875\u7f13\u5b58\u4e2d\uff0c\u6570\u636e\u662f\u5426\u4f1a\u88ab\u7acb\u5373\u5199\u5230\u78c1\u76d8\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6240\u91c7\u7528\u7684\u5199\u64cd\u4f5c\u673a\u5236\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u540c\u6b65\u673a\u5236\uff0c\u6570\u636e\u4f1a\u7acb\u5373\u88ab\u5199\u5230\u78c1\u76d8\u4e2d\uff0c\u76f4\u5230\u6570\u636e\u5199\u5b8c\uff0c\u5199\u63a5\u53e3\u624d\u8fd4\u56de\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5ef6\u8fdf\u673a\u5236\uff1a\u5199\u63a5\u53e3\u7acb\u5373\u8fd4\u56de\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5b9a\u671f\u5730\u5c06\u9875\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u5237\u5230\u786c\u76d8\u3002\u6240\u4ee5\u8fd9\u4e2a\u673a\u5236\u4f1a\u5b58\u5728\u4e22\u5931\u6570\u636e\u7684\u98ce\u9669\u3002\u60f3\u8c61\u4e0b\u5199\u63a5\u53e3\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u9875\u7f13\u5b58\u7684\u6570\u636e\u8fd8\u6ca1\u5237\u5230\u786c\u76d8\uff0c\u6b63\u597d\u65ad\u7535\u3002\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8ba4\u4e3a\u6570\u636e\u5df2\u7ecf\u5728\u786c\u76d8\u4e2d\u3002")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"sxjne5m6m4",src:t(85412).Z})),(0,o.kt)("p",null,"\u5185\u6838\u7684\u56de\u5199\u673a\u5236:\u7528\u6237\u76f4\u63a5\u4ece\u5185\u6838\u8bfb,\u4e0d\u4e00\u5b9a\u771f\u5b9e\u5199\u5230\u7269\u7406\u6587\u4ef6\u4e2d,\u5ef6\u8fdf\u5199\u5165,\u9884\u8bfb(\u6fc0\u52b1\u53cd\u9988\u673a\u5236)"),(0,o.kt)("p",null,"![image-20210318192811817]","(/Image/B\uff08\u7b2c 4 \u4e2a\u590d\u4ef6\uff09-photo/image-20210318192811817.png)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u76f4\u63a5I/O"),":\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c\u6570\u636e\u76f4\u63a5\u4ece\u7528\u6237\u6001\u5730\u5740\u7a7a\u95f4\u5199\u5165\u5230\u78c1\u76d8\u4e2d\uff0c\u76f4\u63a5\u8df3\u8fc7\u5185\u6838\u7f13\u51b2\u533a"),(0,o.kt)("p",null,"\u8fdb\u7a0b\u5fc5\u987b\u5728\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u5019\u8bbe\u7f6e\u5bf9\u6587\u4ef6\u7684\u8bbf\u95ee\u6a21\u5f0f\u4e3a ",(0,o.kt)("strong",{parentName:"p"},"O_DIRECT"),","),(0,o.kt)("p",null,"\u200b\t\u5f0a\u7aef\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u63a7\u5236\u597d\u8bfb\u5199\uff0c\u5c06\u4f1a\u5bfc\u81f4\u78c1\u76d8\u8bfb\u5199\u7684\u6548\u7387\u4f4e\u4e0b\u3002\u78c1\u76d8\u7684\u8bfb\u5199\u662f\u901a\u8fc7\u78c1\u5934\u7684\u5207\u6362\u5230\u4e0d\u540c\u7684\u78c1\u9053\u4e0a\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e"),(0,o.kt)("p",null,"\u540c\u6b65IO:"),(0,o.kt)("p",null,"\u5f02\u6b65IO:"),(0,o.kt)("p",null,"\u963b\u585e\u975e\u963b\u585eIO"),(0,o.kt)("h2",{id:"select-poll-epoll"},"select-poll-epoll"),(0,o.kt)("p",null,"select:\u5e95\u5c42\u662f\u6570\u7ec4,\u53ea\u8bb0\u5f55\u6709\u4e8b\u4ef6,\u800c\u4e0d\u77e5\u4e8b\u4ef6\u5c5e\u6027"),(0,o.kt)("p",null,"poll:"),(0,o.kt)("p",null,"epoll:\u7ea2\u9ed1\u6811,\u628a\u6240\u6709\u4e8b\u4ef6\u6ce8\u518c\u5230epoll\u4e2d,epoll_wait,\u8bb0\u5f55\u4e8b\u4ef6\u5c5e\u6027"),(0,o.kt)("h2",{id:"get_conf\u51fd\u6570\u5b9e\u73b0"},"get_conf\u51fd\u6570\u5b9e\u73b0"),(0,o.kt)("p",null,"\u53ef\u76f4\u63a5\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"conf_value_ans"),"\u6765\u83b7\u53d6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'// static extern\n\n#include "head.h"\nchar conf_value_ans[512] = {0};\n\nchar *get_conf(const char *conf, char *key) {\n    FILE *fp = NULL; \n    char *line = NULL, *sub = NULL;\n    ssize_t nread, len;\n    //optarg\u7684\u5b9e\u73b0\uff0cextern\u53d8\u91cf\n    if (conf == NULL || key == NULL) {\n        errno = EINVAL;\n        return NULL;\n    }\n    if ((fp = fopen(conf, "r")) == NULL) {\n        //perror("fopen()");\n        errno = EINVAL;\n        return NULL;\n    }\n\n    while ((nread = getline(&line, &len, fp)) != -1) {\n        if ((sub = strstr(line, key)) == NULL) {\n            continue;\n        }\n        if (line[strlen(key)] == \'=\') {\n            strncpy(conf_value_ans, sub + strlen(key) + 1, nread - strlen(key) - 2);\n            *(conf_value_ans + nread - strlen(key) - 2) = \'\\0\';\n            break;\n        }\n    }\n    free(line);\n    fclose(fp);\n    //if (!strlen(conf_value_ans)) return NULL;\n    if (sub == NULL) return NULL;\n    return conf_value_ans;\n}\n\nint make_non_block(int fd) {\n    int flag; \n    if ((flag = fcntl(fd, F_GETFL)) < 0) {\n        return -1;\n    }\n    //flag |= O_NONBLOCK;\n    fcntl(fd, F_SETFL, flag|O_NONBLOCK);\n    return 0;\n}\n\nint make_block(int fd) {\n    int flag; \n    if ((flag = fcntl(fd, F_GETFL)) < 0) {\n        return -1;\n    }\n    fcntl(fd, F_SETFL, flag&~O_NONBLOCK);\n    return 0;\n}\n\n\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"#ifndef _COMMON_H\n#define _COMMON_H\nchar *get_conf(const char *conf, char *key);\nextern char conf_value_ans[512];\nint make_non_block(int fd);\nint make_block(int fd);\n#endif\n")),(0,o.kt)("h2",{id:"select\u5b9e\u4f8b"},"select\u5b9e\u4f8b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n#include <sys/types.h>\n#include <unistd.h>\n\nint main(void) {\n    fd_set rfds;\n    struct timeval tv;\n    int retval;\n\n    /* Watch stdin (fd 0) to see when it has input. */\n\n    FD_ZERO(&rfds);\n    FD_SET(0, &rfds);\n\n    /* Wait up to five seconds. */\n\n    tv.tv_sec = 5;\n    tv.tv_usec = 0;\n\n    retval = select(1, &rfds, NULL, NULL, &tv);\n    /* Don\'t rely on the value of tv now! */\n\n    if (retval == -1)\n        perror("select()");\n    else if (retval) {\n        char buff[512] = {0};\n        ssize_t nread;\n        if ((nread = read( 0, buff, sizeof(buff))) < 0) {\n            perror("read(");\n            exit(1);\n        }\n\n        printf("Data is available now.\\n");\n        //scanf("%s", buff); \u5e76\u6ca1\u6709\u8bfb\u53d6stdin\n        printf("%s", buff);\n    }\n        /* FD_ISSET(0, &rfds) will be true. */\n    else\n        printf("No data within five seconds.\\n");\n\n    exit(EXIT_SUCCESS);\n}\n\n\n')),(0,o.kt)("h2",{id:"epoll\u5b9e\u4f8b"},"epoll\u5b9e\u4f8b"),(0,o.kt)("p",null,"\u5b9e\u73b0\u628a\u6240\u9700\u65f6\u95f4\u6ce8\u518c\uff0c \u901a\u8fc7"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'#define MAX_EVENTS 10  //\u8bb0\u5f55\u6570\u7ec4\u6700\u5927\u503c\nstruct epoll_event ev, events[MAX_EVENTS];\nint listen_sock, conn_sock, nfds, epollfd;\n\n/* Code to set up listening socket, \'listen_sock\',\n   (socket(), bind(), listen()) omitted */\n\nepollfd = epoll_create1(0);  //\u521b\u5efaepoll\u5b9e\u4f8b\nif (epollfd == -1) {\n    perror("epoll_create1");\n    exit(EXIT_FAILURE);\n}\n\nev.events = EPOLLIN;  // \u8bbe\u7f6e\u5173\u6ce8\u7684\u9009\u9879\nev.data.fd = listen_sock;  //\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u53ef\u5e26\u6765\u65b0\u4e8b\u4ef6\n//\u6ce8\u518c\u4e8b\u4ef6\nif (epoll_ctl(epollfd, EPOLL_CTL_ADD, listen_sock, &ev) == -1) {\n    perror("epoll_ctl: listen_sock");\n    exit(EXIT_FAILURE);\n}\n\nfor (;;) {\n    //\u5df2\u53d1\u751f\u4e8b\u4ef6\u603b\u6570nfds\n    nfds = epoll_wait(epollfd, events, MAX_EVENTS, -1);\n    if (nfds == -1) {\n        perror("epoll_wait");\n        exit(EXIT_FAILURE);\n    }\n\n    for (n = 0; n < nfds; ++n) {\n        if (events[n].data.fd == listen_sock) {  //\u5224\u65ad\u662f\u5426\u6dfb\u52a0\u65b0\u4e8b\u4ef6\n            //conn_sock\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n            conn_sock = accept(listen_sock,\n                               (struct sockaddr *) &addr, &addrlen);\n            if (conn_sock == -1) {\n                perror("accept");\n                exit(EXIT_FAILURE);\n            }\n            //\u8ba9\u4e8b\u4ef6\u975e\u963b\u585e\uff1b\n            setnonblocking(conn_sock);\n            ev.events = EPOLLIN | EPOLLET;  // | \u6c34\u5e73\u8fb9\u7f18\u89e6\u53d1\n            ev.data.fd = conn_sock;\n            if (epoll_ctl(epollfd, EPOLL_CTL_ADD, conn_sock,\n                        &ev) == -1) {\n                perror("epoll_ctl: conn_sock");\n                exit(EXIT_FAILURE);\n            }\n        } else {\n            do_use_fd(events[n].data.fd);\n        }\n    }\n\n')))}f.isMDXComponent=!0},85412:function(n,e,t){"use strict";e.Z=t.p+"assets/images/sxjne5m6m4-96d7dbec72c8fb294acd0429eedc6c09.jpg"}}]);