(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4555],{3905:function(a,n,e){"use strict";e.d(n,{Zo:function(){return o},kt:function(){return k}});var t=e(67294);function s(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function r(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function m(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){s(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function p(a,n){if(null==a)return{};var e,t,s=function(a,n){if(null==a)return{};var e,t,s={},r=Object.keys(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||(s[e]=a[e]);return s}(a,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(s[e]=a[e])}return s}var i=t.createContext({}),l=function(a){var n=t.useContext(i),e=n;return a&&(e="function"==typeof a?a(n):m(m({},n),a)),e},o=function(a){var n=l(a.components);return t.createElement(i.Provider,{value:n},a.children)},c={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},N=t.forwardRef((function(a,n){var e=a.components,s=a.mdxType,r=a.originalType,i=a.parentName,o=p(a,["components","mdxType","originalType","parentName"]),N=l(e),k=s,u=N["".concat(i,".").concat(k)]||N[k]||c[k]||r;return e?t.createElement(u,m(m({ref:n},o),{},{components:e})):t.createElement(u,m({ref:n},o))}));function k(a,n){var e=arguments,s=n&&n.mdxType;if("string"==typeof a||s){var r=e.length,m=new Array(r);m[0]=N;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=a,p.mdxType="string"==typeof a?a:s,m[1]=p;for(var l=2;l<r;l++)m[l]=e[l];return t.createElement.apply(null,m)}return t.createElement.apply(null,e)}N.displayName="MDXCreateElement"},90872:function(a,n,e){"use strict";e.r(n),e.d(n,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return l},default:function(){return c}});var t=e(22122),s=e(19756),r=(e(67294),e(3905)),m=["components"],p={id:"B2.\u8d2a\u5fc3",title:"B2.\u8d2a\u5fc3","typora-root-url":"../"},i={unversionedId:"Algorithm/B2.\u8d2a\u5fc3",id:"Algorithm/B2.\u8d2a\u5fc3",isDocsHomePage:!1,title:"\u8d2a\u5fc3",description:"\u533a\u95f4\u95ee\u9898",source:"@site/docs/2.Algorithm/B2.\u8d2a\u5fc3.md",sourceDirName:"2.Algorithm",slug:"/Algorithm/B2.\u8d2a\u5fc3",permalink:"/Algorithm/B2.\u8d2a\u5fc3",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/2.Algorithm/B2.\u8d2a\u5fc3.md",version:"current",frontMatter:{id:"B2.\u8d2a\u5fc3",title:"B2.\u8d2a\u5fc3","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"\u7f51\u7edc\u6d41",permalink:"/Algorithm/B13.\u7f51\u7edc\u6d41"},next:{title:"\u9012\u63a8",permalink:"/Algorithm/B3.\u9012\u63a8\u5230\u9012\u5f52"}},l=[{value:"\u533a\u95f4\u95ee\u9898",id:"\u533a\u95f4\u95ee\u9898",children:[]},{value:"\u8d2a\u5fc3\u6cd5 (greedy approach)",id:"\u8d2a\u5fc3\u6cd5-greedy-approach",children:[{value:"\u57fa\u7840\u9898",id:"\u57fa\u7840\u9898",children:[]},{value:"\u5206\u914d\u95ee\u9898",id:"\u5206\u914d\u95ee\u9898",children:[]},{value:"\u533a\u95f4\u95ee\u9898",id:"\u533a\u95f4\u95ee\u9898-1",children:[]},{value:"\u5b57\u5178\u5e8f\u6700\u5c0f\u95ee\u9898",id:"\u5b57\u5178\u5e8f\u6700\u5c0f\u95ee\u9898",children:[]},{value:"other",id:"other",children:[]}]},{value:"Prime\u7b97\u6cd5",id:"prime\u7b97\u6cd5",children:[{value:"\u5272(cut) \u548c \u8de8\u8fb9(cross)",id:"\u5272cut-\u548c-\u8de8\u8fb9cross",children:[]}]},{value:"Krusal",id:"krusal",children:[]}],o={toc:l};function c(a){var n=a.components,p=(0,s.Z)(a,m);return(0,r.kt)("wrapper",(0,t.Z)({},o,p,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u533a\u95f4\u95ee\u9898"},"\u533a\u95f4\u95ee\u9898"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20201026205238443",src:e(19521).Z})),(0,r.kt)("p",null,"\u987a\u5e8f\u76f8\u5173\u51b3\u5b9a\u5982\u4f55\u6392\u5e8f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5148r\u5c0f\u4f18\u5148\uff0cl\u5927\u4f18\u5148 -- \u5c3d\u53ef\u80fd\u5411\u540e\u5b89\u6392"),(0,r.kt)("li",{parentName:"ol"},"\u76f8\u53cd")),(0,r.kt)("p",null,"\u7b56\u7565\u76f8\u5173\u51b3\u5b9a\u8d2a\u5fc3\u7b56\u7565"),(0,r.kt)("h2",{id:"\u8d2a\u5fc3\u6cd5-greedy-approach"},"\u8d2a\u5fc3\u6cd5 (greedy approach)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u8d2a\u5fc3\u7b97\u6cd5\u6216\u8d2a\u5fc3\u601d\u60f3\u91c7\u7528\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u4fdd\u8bc1",(0,r.kt)("strong",{parentName:"p"},"\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u7684"),"\uff0c\u4ece\u800c\u4f7f\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u662f",(0,r.kt)("strong",{parentName:"p"},"\u5168\u5c40\u6700\u4f18"),"\u7684\u3002")),(0,r.kt)("p",null,"\u6b65\u6b65\u4e3a\u8425\u4e00\u4e00\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\uff0c\u63a8\u51fa\u6574\u4f53\u6700\u4f18\u3002\u6bcf\u4e00\u6b65\u600e\u4e48\u8d70\uff0c\u53d6\u51b3\u4e8e\u5982\u4f55\u80fd\u591f\u4ea7\u751f\u6700\u5927\u7684\u77ed\u671f\u6536\u76ca\u5e76\u4e14\u4e0d\u8fdd\u53cd\u9898\u8bbe\u7684\u7ea6\u675f\u3002"),(0,r.kt)("p",null,"\u96be\u70b9\u5728\u4e8e\u8bc1\u660e\u771f\u7684\u80fd\u591f\u4ea7\u51fa\u6700\u4f18\u89e3\u3002"),(0,r.kt)("p",null,"\u8d2a\u2f3c\u7b97\u6cd5\u2f00\u822c\u5206\u4e3a\u5982\u4e0b\u56db\u6b65\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u2f32\u4e2a\u2f26\u95ee\u9898"),(0,r.kt)("li",{parentName:"ul"},"\u627e\u51fa\u9002\u5408\u7684\u8d2a\u2f3c\u7b56\u7565"),(0,r.kt)("li",{parentName:"ul"},"\u6c42\u89e3\u6bcf\u2f00\u4e2a\u2f26\u95ee\u9898\u7684\u6700\u4f18\u89e3"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u5c40\u90e8\u6700\u4f18\u89e3\u5806\u53e0\u6210\u5168\u5c40\u6700\u4f18\u89e3")),(0,r.kt)("h3",{id:"\u57fa\u7840\u9898"},"\u57fa\u7840\u9898"),(0,r.kt)("h4",{id:"lc-376\u6446\u52a8\u5e8f\u5217"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/wiggle-subsequence/description/"},"LC-376.\u6446\u52a8\u5e8f\u5217")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u8fde\u7eed\u6570\u5b57\u4e4b\u95f4\u7684\u5dee\u4e25\u683c\u5730\u5728\u6b63\u6570\u548c\u8d1f\u6570\u4e4b\u95f4\u4ea4\u66ff\uff0c\u5219\u6570\u5b57\u5e8f\u5217\u79f0\u4e3a\u6446\u52a8\u5e8f\u5217\u3002\u7b2c\u2f00\u4e2a\u5dee\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u53ef\u80fd\u662f\u6b63\u6570\u6216\u8d1f\u6570\u3002\u5c11\u4e8e\u4e24\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u4e5f\u662f\u6446\u52a8\u5e8f\u5217\u3002\n\u4f8b\u5982\uff0c ","[1,7,4,9,2,5]"," \u662f\u2f00\u4e2a\u6446\u52a8\u5e8f\u5217\uff0c\u56e0\u4e3a\u5dee\u503c (6,-3,5,-7,3) \u662f\u6b63\u8d1f\u4ea4\u66ff\u51fa\u73b0\u7684\u3002\u76f8\u53cd,","[1,4,7,2,5]"," \u548c ","[1,7,4,5,5]"," \u4e0d\u662f\u6446\u52a8\u5e8f\u5217\uff0c\u7b2c\u2f00\u4e2a\u5e8f\u5217\u662f\u56e0\u4e3a\u5b83\u7684\u524d\u4e24\u4e2a\u5dee\u503c\u90fd\u662f\u6b63\u6570\uff0c\u7b2c\u2f06\u4e2a\u5e8f\u5217\u662f\u56e0\u4e3a\u5b83\u7684\u6700\u540e\u2f00\u4e2a\u5dee\u503c\u4e3a\u96f6\u3002\n\u7ed9\u5b9a\u2f00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u8fd4\u56de\u4f5c\u4e3a\u6446\u52a8\u5e8f\u5217\u7684\u6700\u2ed3\u2f26\u5e8f\u5217\u7684\u2ed3\u5ea6\u3002 \u901a\u8fc7\u4ece\u539f\u59cb\u5e8f\u5217\u4e2d\u5220\u9664\u2f00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5143\u7d20\u6765\u83b7\u5f97\u2f26\u5e8f\u5217\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u4fdd\u6301\u5176\u539f\u59cb\u987a\u5e8f\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public:\n    int wiggleMaxLength(vector<int>& nums) {\n        if (nums.size() <= 1) return nums.size();\n        int curDiff = 0; // \u5f53\u524d\u2f00\u5bf9\u5dee\u503c\n        int preDiff = 0; // \u524d\u2f00\u5bf9\u5dee\u503c\n        int result = 1;\n        // \u8bb0\u5f55\u5cf0\u503c\u4e2a\u6570\uff0c\u5e8f\u5217\u9ed8\u8ba4\u5e8f\u5217\u6700\u53f3\u8fb9\u6709\u2f00\u4e2a\u5cf0\u503c\n        for (int i = 0; i < nums.size() - 1; i++) {\n            curDiff = nums[i + 1] - nums[i];\n            // \u51fa\u73b0\u5cf0\u503c\n            if ((curDiff > 0 && preDiff <= 0) || (preDiff >= 0 && curDiff < 0))\n            {\n                result++;\n                preDiff = curDiff;\n            }\n        }\n        return result;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-1005k-\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/maximize-sum-of-array-after-k-negations/description/"},"LC-1005.K \u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u2f00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u6211\u4eec\u53ea\u80fd\u2f64\u4ee5\u4e0b\u2f45\u6cd5\u4fee\u6539\u8be5\u6570\u7ec4\uff1a\u6211\u4eec\u9009\u62e9\u67d0\u4e2a\u7d22\u5f15 i \u5e76\u5c06 A","[i]"," \u66ff\u6362\u4e3a -A","[i]","\uff0c\u7136\u540e\u603b\u5171\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b K \u6b21\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u591a\u6b21\u9009\u62e9\u540c\u2f00\u4e2a\u7d22\u5f15 i\u3002\uff09\u4ee5\u8fd9\u79cd\u2f45\u5f0f\u4fee\u6539\u6570\u7ec4\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u53ef\u80fd\u7684\u6700\u2f24\u548c\u3002\n\u793a\u4f8b 1\uff1a\n\u8f93\u2f0a\uff1aA = ","[4,2,3]",", K = 1\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u9009\u62e9\u7d22\u5f15 (1,) \uff0c\u7136\u540e A \u53d8\u4e3a ","[4,-2,3]","\u3002")),(0,r.kt)("p",null,"\u672c\u9898\u7684\u89e3\u9898\u6b65\u9aa4\u4e3a\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u2f00\u6b65\uff1a\u5c06\u6570\u7ec4\u6309\u7167\u7edd\u5bf9\u503c\u2f24\u2f29\u4ece\u2f24\u5230\u2f29\u6392\u5e8f\uff0c\u6ce8\u610f\u8981\u6309\u7167\u7edd\u5bf9\u503c\u7684\u2f24\u2f29"),(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u2f06\u6b65\uff1a\u4ece\u524d\u5411\u540e\u904d\u5386\uff0c\u9047\u5230\u8d1f\u6570\u5c06\u5176\u53d8\u4e3a\u6b63\u6570\uff0c\u540c\u65f6K--"),(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u4e09\u6b65\uff1a\u5982\u679cK\u8fd8\u2f24\u4e8e0\uff0c\u90a3\u4e48\u53cd\u590d\u8f6c\u53d8\u6570\u503c\u6700\u2f29\u7684\u5143\u7d20\uff0c\u5c06K\u2f64\u5b8c"),(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u56db\u6b65\uff1a\u6c42\u548c")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int largestSumAfterKNegations(vector<int>& nums, int k) {\n        int result = 0;\n        int size = nums.size();\n        sort(nums.begin(), nums.end(), [](const int &a, const int &b) {\n            return abs(a) > abs(b);\n        });\n        for (int i = 0; i < size; i++) {\n            if (nums[i] < 0 && k > 0) {\n                nums[i] *= -1;\n                k--;\n            }\n        }\n        if (k % 2 == 1) nums[size - 1] *= -1;\n        for (int i = 0; i < size; i++) {\n            result += nums[i];\n        }\n        return result;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u5206\u914d\u95ee\u9898"},"\u5206\u914d\u95ee\u9898"),(0,r.kt)("h4",{id:"lc-135-\u5206\u53d1\u7cd6\u679c"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/candy/description/"},"LC-135. \u5206\u53d1\u7cd6\u679c")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u2f7c\u5e08\u60f3\u7ed9\u5b69\u2f26\u4eec\u5206\u53d1\u7cd6\u679c\uff0c\u6709 N \u4e2a\u5b69\u2f26\u7ad9\u6210\u4e86\u2f00\u6761\u76f4\u7ebf\uff0c\u2f7c\u5e08\u4f1a\u6839\u636e\u6bcf\u4e2a\u5b69\u2f26\u7684\u8868\u73b0\uff0c\u9884\u5148\u7ed9\u4ed6\u4eec\u8bc4\u5206\u3002\u4f60\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8981\u6c42\uff0c\u5e2e\u52a9\u2f7c\u5e08\u7ed9\u8fd9\u4e9b\u5b69\u2f26\u5206\u53d1\u7cd6\u679c\uff1a"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5b69\u2f26\u2f84\u5c11\u5206\u914d\u5230 1 \u4e2a\u7cd6\u679c\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u76f8\u90bb\u7684\u5b69\u2f26\u4e2d\uff0c\u8bc4\u5206\u2fbc\u7684\u5b69\u2f26\u5fc5\u987b\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u3002"))),(0,r.kt)("p",null,"\u5b58\u5728\u6bd4\u8f83\u5173\u7cfb\u7684\u8d2a\u5fc3\u7b56\u7565\u4e0d\u4e00\u5b9a\u9700\u8981\u6392\u5e8f\u6216\u662f\u9009\u62e9"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8fd9\u91cc\u7684\u8d2a\u5fc3\u7b56\u7565\u5373\u4e3a\uff0c\u5728\u6bcf\u6b21\u904d\u5386\u4e2d\uff0c\u53ea\u8003\u8651\u5e76\u66f4\u65b0\u76f8\u90bb\u4e00\u4fa7\u7684\u5927\u5c0f\u5173\u7cfb\u3002")),(0,r.kt)("p",null,"\u53ea\u9700\u8981\u7b80\u5355\u7684\u4e24\u6b21\u904d\u5386\u5373\u53ef\uff1a\u628a\u6240\u6709\u5b69\u5b50\u7684\u7cd6\u679c\u6570\u521d\u59cb\u5316\u4e3a 1\uff1b"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u9898\u76ee\u7684\u89c4\u5219\u9650\u5236")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5de6\u8fb9\u89c4\u5219: \u5f53 ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"g"),(0,r.kt)("mi",{parentName:"msub"},"A")),(0,r.kt)("mo",{parentName:"mrow"},"<"),(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"g"),(0,r.kt)("mi",{parentName:"msub"},"B"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"rating_A < rating_B")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.32833099999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"A")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"<"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.32833099999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.05017em"}},"B")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", \u90a3\u4e48 B\u5206\u5230\u7684\u7cd6\u679c\u5c31\u662f\u6bd4A\u591a "),(0,r.kt)("li",{parentName:"ul"},"\u53f3\u8fb9\u89c4\u5219: \u5f53 ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"g"),(0,r.kt)("mi",{parentName:"msub"},"A")),(0,r.kt)("mo",{parentName:"mrow"},">"),(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"g"),(0,r.kt)("mi",{parentName:"msub"},"B"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"rating_A > rating_B")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.32833099999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"A")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},">"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.32833099999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03588em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.05017em"}},"B")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", \u90a3\u4e48 A\u5206\u5230\u7684\u7cd6\u679c\u5c31\u662f\u6bd4B\u591a")),(0,r.kt)("p",null,"\u7b80\u800c\u8a00\u4e4b,\u76f8\u90bb\u5143\u7d20\u5f97\u5206\u9ad8\u7684\u5fc5\u987b\u5f97\u66f4\u591a\u7cd6\u679c,\u5373\u540c\u65f6\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u89c4\u5b9a."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u7b97\u6cd5\u6d41\u7a0b")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ece\u5de6\u5230\u53f3\u904d\u5386 ",(0,r.kt)("inlineCode",{parentName:"p"},"ratings"),",\u6309\u5982\u4e0b\u89c4\u5219\u5206\u53d1\u7cd6\u679c:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u5148\u7ed9\u6240\u6709\u7684\u5b66\u751f1\u9897"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"s"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"))),(0,r.kt)("mo",{parentName:"mrow"},"<"),(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"s"),(0,r.kt)("mi",{parentName:"msub"},"i"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"ratings_{i-1} < ratings_i")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8678509999999999em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"<"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", \u5219\u7b2c",(0,r.kt)("inlineCode",{parentName:"li"},"i"),"\u540d\u540c\u5b66\u7684\u7cd6\u679c\u5c31\u662f\u6bd4",(0,r.kt)("inlineCode",{parentName:"li"},"i-1"),"\u7684\u591a1\u4e2a"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"s"),(0,r.kt)("mrow",{parentName:"msub"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"))),(0,r.kt)("mo",{parentName:"mrow"},">"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mi",{parentName:"mrow"},"r"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"s"),(0,r.kt)("mi",{parentName:"msub"},"i"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"ratings_{i-1} >= ratings_i")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8678509999999999em",verticalAlign:"-0.208331em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.311664em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.208331em"}},(0,r.kt)("span",{parentName:"span"})))))),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},">")),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.36687em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.85396em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),",\u5219\u7b2c",(0,r.kt)("inlineCode",{parentName:"li"},"i"),"\u540d\u540c\u5b66\u7684\u7cd6\u679c\u6570\u91cf\u4e0d\u53d8"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u518d\u6309\u7167\u8fd9\u4e2a\u89c4\u5219\u4ece\u53f3\u8fb9\u5230\u5de6\u8fb9\u904d\u5386,\u5206\u53d1\u7cd6\u679c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6700\u540e\u533a\u4e0a\u9762\u4e24\u6b64\u904d\u5386,\u540c\u4e00\u4e2a\u4f4d\u7f6e\u83b7\u5f97\u6700\u5927\u7cd6\u679c\u6700\u4e3a\u7ed3\u679c."),(0,r.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u540c\u4e00\u4e2a\u4f4d\u7f6e\u8981\u53d6\u6700\u5927\u503c ? \u662f\u4e3a\u4e86\u540c\u65f6\u6ee1\u8db3\u5de6\u53f3\u4e24\u4e2a\u9650\u5236\u6761\u4ef6."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public:\n    int candy(vector<int>& ratings) {\n        vector<int> candyVec(ratings.size(), 1);\n        // \u4ece\u524d\u5411\u540e\n        for (int i = 1; i < ratings.size(); i++) {\n            if (ratings[i] > ratings[i - 1]) candyVec[i] = candyVec[i - 1] + 1;\n        }\n        // \u4ece\u540e\u5411\u524d\n        for (int i = ratings.size() - 2; i >= 0; i--) {\n        if (ratings[i] > ratings[i + 1] ) {\n            candyVec[i] = max(candyVec[i], candyVec[i + 1] + 1);\n        }\n    }\n    // \u7edf\u8ba1\u7ed3\u679c\n    int result = 0;\n    for (int i = 0; i < candyVec.size(); i++) result += candyVec[i];\n    return result;\n}\n")),(0,r.kt)("h4",{id:"lc-406\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/queue-reconstruction-by-height/description/"},"LC-406.\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5047\u8bbe\u6709\u6253\u4e71\u987a\u5e8f\u7684\u4e00\u7fa4\u4eba\u7ad9\u6210\u4e00\u4e2a\u961f\u5217\uff0c\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"people")," \u8868\u793a\u961f\u5217\u4e2d\u4e00\u4e9b\u4eba\u7684\u5c5e\u6027\uff08\u4e0d\u4e00\u5b9a\u6309\u987a\u5e8f\uff09\u3002\u6bcf\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"people[i] = [hi, ki]")," \u8868\u793a\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"i")," \u4e2a\u4eba\u7684\u8eab\u9ad8\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"hi")," \uff0c\u524d\u9762 ",(0,r.kt)("strong",{parentName:"p"},"\u6b63\u597d")," \u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"ki")," \u4e2a\u8eab\u9ad8\u5927\u4e8e\u6216\u7b49\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"hi")," \u7684\u4eba\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u8bf7\u4f60\u91cd\u65b0\u6784\u9020\u5e76\u8fd4\u56de\u8f93\u5165\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"people")," \u6240\u8868\u793a\u7684\u961f\u5217\u3002\u8fd4\u56de\u7684\u961f\u5217\u5e94\u8be5\u683c\u5f0f\u5316\u4e3a\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"queue")," \uff0c\u5176\u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"queue[j] = [hj, kj]")," \u662f\u961f\u5217\u4e2d\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"j")," \u4e2a\u4eba\u7684\u5c5e\u6027\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"queue[0]")," \u662f\u6392\u5728\u961f\u5217\u524d\u9762\u7684\u4eba\uff09\u3002"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\u8f93\u5165\uff1apeople = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n\u8f93\u51fa\uff1a[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n\u89e3\u91ca\uff1a\n\u63d2\u2f0a\u7684\u8fc7\u7a0b\uff1a\n\u63d2\u2f0a[7,0]\uff1a[[7,0]]\n\u63d2\u2f0a[7,1]\uff1a[[7,0],[7,1]]\n\u63d2\u2f0a[6,1]\uff1a[[7,0],[6,1],[7,1]]\n\u63d2\u2f0a[5,0]\uff1a[[5,0],[7,0],[6,1],[7,1]]\n\u63d2\u2f0a[5,2]\uff1a[[5,0],[7,0],[5,2],[6,1],[7,1]]\n\u63d2\u2f0a[4,4]\uff1a[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n"))),(0,r.kt)("p",null,"\u5982\u4f55\u786e\u5b9a\u2f00\u4e2a\u7ef4\u5ea6\uff0c\u7136\u540e\u5728\u6309\u7167\u53e6\u2f00\u4e2a\u7ef4\u5ea6\u91cd\u65b0\u6392\u5217\u3002"),(0,r.kt)("p",null,"\u6309\u7167\u8eab\u2fbc\u6392\u5e8f\u4e4b\u540e\uff0c\u4f18\u5148\u6309\u8eab\u2fbc\u2fbc\u7684people\u7684k\u6765\u63d2\u2f0a\uff0c\u540e\u5e8f\u63d2\u2f0a\u8282\u70b9\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u524d\u2faf\u5df2\u7ecf\u63d2\u2f0a\u7684\u8282\u70b9\uff0c\u6700\u7ec8\u6309\u7167k\u7684\u89c4\u5219\u5b8c\u6210\u4e86\u961f\u5217\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public:\n    // \u8eab\u2fbc\u4ece\u2f24\u5230\u2f29\u6392\uff08\u8eab\u2fbc\u76f8\u540ck\u2f29\u7684\u7ad9\u524d\u2faf\uff09\n    static bool cmp(const vector<int> a, const vector<int> b) {\n        if (a[0] == b[0]) return a[1] < b[1];\n        return a[0] > b[0];\n    }\n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {\n        sort (people.begin(), people.end(), cmp);\n        list<vector<int>> que; // list\u5e95\u5c42\u662f\u94fe\u8868\u5b9e\u73b0\uff0c\u63d2\u2f0a\u6548\u7387\u2f50vector\u2fbc\u7684\u591a\n        for (int i = 0; i < people.size(); i++) {\n            int position = people[i][1]; // \u63d2\u2f0a\u5230\u4e0b\u6807\u4e3aposition\u7684\u4f4d\u7f6e\n            std::list<vector<int>>::iterator it = que.begin();\n            while (position--) { // \u5bfb\u627e\u5728\u63d2\u2f0a\u4f4d\u7f6e\n                                it++;\n                               }\n            que.insert(it, people[i]);\n        }\n        return vector<vector<int>>(que.begin(), que.end());\n    }\n};\n\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn + n^2)\n\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\n")),(0,r.kt)("h4",{id:"lc-738\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/monotone-increasing-digits/description/"},"LC-738.\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"N"),"\uff0c\u627e\u51fa\u5c0f\u4e8e\u6216\u7b49\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"N")," \u7684\u6700\u5927\u7684\u6574\u6570\uff0c\u540c\u65f6\u8fd9\u4e2a\u6574\u6570\u9700\u8981\u6ee1\u8db3\u5176\u5404\u4e2a\u4f4d\u6570\u4e0a\u7684\u6570\u5b57\u662f\u5355\u8c03\u9012\u589e\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\uff08\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u76f8\u90bb\u4f4d\u6570\u4e0a\u7684\u6570\u5b57 ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," \u6ee1\u8db3 ",(0,r.kt)("inlineCode",{parentName:"p"},"x <= y")," \u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6574\u6570\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\uff09"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1:")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\u8f93\u5165: N = 10\n\u8f93\u51fa: 9\n"))),(0,r.kt)("p",null,"\u9047\u5230strNum","[i - 1]"," > strNum","[i]","\u7684\u60c5\u51b5\uff0c\u8ba9strNum","[i - 1]","--\uff0c\u7136\u540estrNum","[i]","\u7ed9\u4e3a9\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e24\u4f4d\n\u53d8\u6210\u6700\u2f24\u5355\u8c03\u9012\u589e\u6574\u6570\u3002"),(0,r.kt)("p",null,"\u786e\u5b9a\u4ece\u540e\u5411\u524d\u904d\u5386\u987a\u5e8f\uff0c\u548c\u7ef4\u62a4\u6807\u8bb0\u4ece\u54ea\u2f00\u4f4d\u5f00\u59cb\u7edf\u2f00\u6539\u62109\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n public:\n  int monotoneIncreasingDigits(int n) {\n    string strNum = to_string(n);\n    int pos = strNum.size();\n    // pos\u2f64\u6765\u6807\u8bb0\u8d4b\u503c9\u4ece\u54ea\u2fa5\u5f00\u59cb\n    // \u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u9ed8\u8ba4\u503c\uff0c\u4e3a\u4e86\u9632\u2f4c\u7b2c\u2f06\u4e2afor\u5faa\u73af\u5728flag\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u60c5\u51b5\u4e0b\u6267\u2f8f\n    for (int i = strNum.size() - 1; i > 0; i--) {\n      if (strNum[i - 1] > strNum[i]) {\n        pos = i;\n        strNum[i - 1]--;\n      }\n    }\n    for (int i = pos; i < strNum.size(); i++) {\n      strNum[i] = '9';\n    }\n    return stoi(strNum);\n  }\n};\n")),(0,r.kt)("h3",{id:"\u533a\u95f4\u95ee\u9898-1"},"\u533a\u95f4\u95ee\u9898"),(0,r.kt)("h4",{id:"lc-435\u65e0\u91cd\u53e0\u533a\u95f4"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/non-overlapping-intervals/description/"},"LC-435.\u65e0\u91cd\u53e0\u533a\u95f4")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u2f00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u627e\u5230\u9700\u8981\u79fb\u9664\u533a\u95f4\u7684\u6700\u2f29\u6570\u91cf\uff0c\u4f7f\u5269\u4f59\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002\n\u6ce8\u610f:\n\u53ef\u4ee5\u8ba4\u4e3a\u533a\u95f4\u7684\u7ec8\u70b9\u603b\u662f\u2f24\u4e8e\u5b83\u7684\u8d77\u70b9\u3002\n\u533a\u95f4 ","[1,2]"," \u548c ","[2,3]"," \u7684\u8fb9\u754c\u76f8\u4e92\u201c\u63a5\u89e6\u201d\uff0c\u4f46\u6ca1\u6709\u76f8\u4e92\u91cd\u53e0\u3002")),(0,r.kt)("p",null,"\u6309\u7167\u53f3\u8fb9\u754c\u6392\u5e8f\uff0c\u4ece\u5de6\u5411\u53f3\u8bb0\u5f55\u2fae\u4ea4\u53c9\u533a\u95f4\u7684\u4e2a\u6570\u3002\u6700\u540e\u2f64\u533a\u95f4\u603b\u6570\u51cf\u53bb\u2fae\u4ea4\u53c9\u533a\u95f4\u7684\u4e2a\u6570\u5c31\u662f\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u4e2a\u6570\u4e86\u3002"),(0,r.kt)("p",null,"\u96be\u70b9\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u96be\u70b9\u2f00\uff1a\u2f00\u770b\u9898\u5c31\u6709\u611f\u89c9\u9700\u8981\u6392\u5e8f\uff0c\u4f46\u7a76\u7adf\u600e\u4e48\u6392\u5e8f\uff0c\u6309\u5de6\u8fb9\u754c\u6392\u8fd8\u662f\u53f3\u8fb9\u754c\u6392\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u96be\u70b9\u2f06\uff1a\u6392\u5b8c\u5e8f\u4e4b\u540e\u5982\u4f55\u904d\u5386\uff0c\u5982\u679c\u6ca1\u6709\u5206\u6790\u597d\u904d\u5386\u987a\u5e8f\uff0c\u90a3\u4e48\u6392\u5e8f\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u96be\u70b9\u4e09\uff1a\u76f4\u63a5\u6c42\u91cd\u590d\u7684\u533a\u95f4\u662f\u590d\u6742\u7684\uff0c\u8f6c\u2f7d\u6c42\u6700\u2f24\u2fae\u91cd\u590d\u533a\u95f4\u4e2a\u6570\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u96be\u70b9\u56db\uff1a\u6c42\u6700\u2f24\u2fae\u91cd\u590d\u533a\u95f4\u4e2a\u6570\u65f6\uff0c\u9700\u8981\u2f00\u4e2a\u5206\u5272\u70b9\u6765\u505a\u6807\u8bb0\u3002")),(0,r.kt)("p",null,"\u6392\u5e8f\u6bd4\u8f83\u7b56\u7565"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5728\u53ef\u9009\u7684\u5de5\u4f5c\u4e2d\uff0c\u6bcf\u6b21\u90fd\u9009\u53d6\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5de5\u4f5c"),(0,r.kt)("li",{parentName:"ol"},"\u5728\u53ef\u9009\u7684\u5de5\u4f5c\u4e2d\uff0c\u6bcf\u6b21\u90fd\u9009\u53d6\u7528\u65f6\u6700\u77ed\u7684\u5de5\u4f5c"),(0,r.kt)("li",{parentName:"ol"},"\u5728\u53ef\u9009\u7684\u5de5\u4f5c\u4e2d\uff0c\u6bcf\u6b21\u90fd\u9009\u53d6\u4e0e\u6700\u5c11\u53ef\u9009\u5de5\u4f5c\u6709\u91cd\u53e0\u7684\u5de5\u4f5c")),(0,r.kt)("p",null,"\u7b97\u6cd51\u662f\u6b63\u786e\u7684\uff0c\u800c\u5176\u4f59\u4e24\u79cd\u90fd\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u53cd\u4f8b\u3002\u6216\u8005\u8bf4\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u6240\u9009\u53d6\u7684\u5de5\u4f5c\u5e76\u975e\u6700\u4f18"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public:\n    // \u6309\u7167\u533a\u95f4\u53f3\u8fb9\u754c\u6392\u5e8f\n    static bool cmp (const vector<int>& a, const vector<int>& b) {\n        return a[1] < b[1];\n    }\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) {\n        if (intervals.size() == 0) return 0;\n        sort(intervals.begin(), intervals.end(), cmp);\n        int count = 1; // \u8bb0\u5f55\u2fae\u4ea4\u53c9\u533a\u95f4\u7684\u4e2a\u6570\n        int end = intervals[0][1]; // \u8bb0\u5f55\u533a\u95f4\u5206\u5272\u70b9\n        for (int i = 1; i < intervals.size(); i++) {\n            if (end <= intervals[i][0]) {\n                end = intervals[i][1];\n                count++;\n            }\n        }\n        return intervals.size() - count;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-452\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/description/"},"LC-452.\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u6709\u8bb8\u591a\u7403\u5f62\u7684\u6c14\u7403\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6c14\u7403\uff0c\u63d0\u4f9b\u7684\u8f93\u5165\u662f\u6c34\u5e73\u65b9\u5411\u4e0a\uff0c\u6c14\u7403\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u3002\u7531\u4e8e\u5b83\u662f\u6c34\u5e73\u7684\uff0c\u6240\u4ee5\u7eb5\u5750\u6807\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u53ea\u8981\u77e5\u9053\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u6a2a\u5750\u6807\u5c31\u8db3\u591f\u4e86\u3002\u5f00\u59cb\u5750\u6807\u603b\u662f\u5c0f\u4e8e\u7ed3\u675f\u5750\u6807\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u4e00\u652f\u5f13\u7bad\u53ef\u4ee5\u6cbf\u7740 x \u8f74\u4ece\u4e0d\u540c\u70b9\u5b8c\u5168\u5782\u76f4\u5730\u5c04\u51fa\u3002\u5728\u5750\u6807 x \u5904\u5c04\u51fa\u4e00\u652f\u7bad\uff0c\u82e5\u6709\u4e00\u4e2a\u6c14\u7403\u7684\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"xstart"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"xend"),"\uff0c \u4e14\u6ee1\u8db3  ",(0,r.kt)("inlineCode",{parentName:"p"},"xstart \u2264 x \u2264 xend"),"\uff0c\u5219\u8be5\u6c14\u7403\u4f1a\u88ab\u5f15\u7206\u3002\u53ef\u4ee5\u5c04\u51fa\u7684\u5f13\u7bad\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002 \u5f13\u7bad\u4e00\u65e6\u88ab\u5c04\u51fa\u4e4b\u540e\uff0c\u53ef\u4ee5\u65e0\u9650\u5730\u524d\u8fdb\u3002\u6211\u4eec\u60f3\u627e\u5230\u4f7f\u5f97\u6240\u6709\u6c14\u7403\u5168\u90e8\u88ab\u5f15\u7206\uff0c\u6240\u9700\u7684\u5f13\u7bad\u7684\u6700\u5c0f\u6570\u91cf\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"points")," \uff0c\u5176\u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"points [i] = [xstart,xend]")," \uff0c\u8fd4\u56de\u5f15\u7206\u6240\u6709\u6c14\u7403\u6240\u5fc5\u987b\u5c04\u51fa\u7684\u6700\u5c0f\u5f13\u7bad\u6570\u3002"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-Cpp"},"\u8f93\u5165\uff1apoints = [[10,16],[2,8],[1,6],[7,12]]\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\u5bf9\u4e8e\u8be5\u6837\u4f8b\uff0cx = 6 \u53ef\u4ee5\u5c04\u7206 [2,8],[1,6] \u4e24\u4e2a\u6c14\u7403\uff0c\u4ee5\u53ca x = 11 \u5c04\u7206\u53e6\u5916\u4e24\u4e2a\u6c14\u7403\n"))),(0,r.kt)("p",null,"\u5c40\u90e8\u6700\u4f18\uff1a\u5f53\u2f53\u7403\u51fa\u73b0\u91cd\u53e0\uff0c\u2f00\u8d77\u5c04\uff0c\u6240\u2f64\u2f38\u7bad\u6700\u5c11\u3002\u5168\u5c40\u6700\u4f18\uff1a\u628a\u6240\u6709\u2f53\u7403\u5c04\u7206\u6240\u2f64\u2f38\u7bad\n\u6700\u5c11\u3002"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4e3a\u4e86\u8ba9\u2f53\u7403\u5c3d\u53ef\u80fd\u7684\u91cd\u53e0\uff0c\u9700\u8981\u5bf9\u6570\u7ec4\u8fdb\u2f8f\u6392\u5e8f\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u2f53\u7403\u91cd\u53e0\u4e86\uff0c\u91cd\u53e0\u2f53\u7403\u4e2d\u53f3\u8fb9\u8fb9\u754c\u7684\u6700\u2f29\u503c \u4e4b\u524d\u7684\u533a\u95f4\u2f00\u5b9a\u9700\u8981\u2f00\u4e2a\u2f38\u7bad\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    private:\n    static bool cmp(const vector<int>& a, const vector<int>& b) {\n        return a[0] < b[0];\n    }\n    public:\n    int findMinArrowShots(vector<vector<int>>& points) {\n        if (points.size() == 0) return 0;\n        sort(points.begin(), points.end(), cmp);\n        int result = 1; // points \u4e0d\u4e3a\u7a7a\u2f84\u5c11\u9700\u8981\u2f00\u2f40\u7bad\n        for (int i = 1; i < points.size(); i++) {\n            if (points[i][0] > points[i - 1][1]) {\n                // \u2f53\u7403i\u548c\u2f53\u7403i-1\u4e0d\u6328\u7740\uff0c\u6ce8\u610f\u8fd9\u2fa5\u4e0d\u662f>=\n                result++; // \u9700\u8981\u2f00\u2f40\u7bad\n            }\n            else {\n                // \u2f53\u7403i\u548c\u2f53\u7403i-1\u6328\u7740\n                points[i][1] = min(points[i - 1][1], points[i][1]); // \u66f4\u65b0\u91cd\u53e0\u2f53\u7403\u6700\u2f29\u53f3\n                \u8fb9\u754c\n            }\n        }\n        return result;\n}};\n")),(0,r.kt)("h4",{id:"lc-763\u5212\u5206\u5b57\u6bcd\u533a\u95f4"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/partition-labels/description/"},"LC-763.\u5212\u5206\u5b57\u6bcd\u533a\u95f4")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5b57\u7b26\u4e32 ",(0,r.kt)("inlineCode",{parentName:"p"},"S")," \u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5\uff0c\u540c\u4e00\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7247\u6bb5\u7684\u957f\u5ea6\u7684\u5217\u8868\u3002"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'\u8f93\u5165\uff1aS = "ababcbacadefegdehijhklij"\n\u8f93\u51fa\uff1a[9,7,8]\n\u89e3\u91ca\uff1a\n\u5212\u5206\u7ed3\u679c\u4e3a "ababcbaca", "defegde", "hijhklij"\u3002\n\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\n\u50cf "ababcbacadefegde", "hijhklij" \u7684\u5212\u5206\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5212\u5206\u7684\u7247\u6bb5\u6570\u8f83\u5c11\u3002\n')),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"S"),"\u7684\u957f\u5ea6\u5728",(0,r.kt)("inlineCode",{parentName:"li"},"[1, 500]"),"\u4e4b\u95f4\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"S"),"\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd ",(0,r.kt)("inlineCode",{parentName:"li"},"'a'")," \u5230 ",(0,r.kt)("inlineCode",{parentName:"li"},"'z'")," \u3002"))),(0,r.kt)("p",null,"\u4e24\u6b65\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7edf\u8ba1\u6bcf\u2f00\u4e2a\u5b57\u7b26\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ol"},"\u4ece\u5934\u904d\u5386\u5b57\u7b26\uff0c\u5e76\u66f4\u65b0\u5b57\u7b26\u7684\u6700\u8fdc\u51fa\u73b0\u4e0b\u6807\uff0c\u5982\u679c\u627e\u5230\u5b57\u7b26\u6700\u8fdc\u51fa\u73b0\u4f4d\u7f6e\u4e0b\u6807\u548c\u5f53\u524d\u4e0b\u6807\u76f8\u7b49\u4e86\uff0c\u5219\u627e\u5230\u4e86\u5206\u5272\u70b9")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public:\n    vector<int> partitionLabels(string S) {\n        int hash[27] = {0}; // i\u4e3a\u5b57\u7b26\uff0chash[i]\u4e3a\u5b57\u7b26\u51fa\u73b0\u7684\u6700\u540e\u4f4d\u7f6e\n        for (int i = 0; i < S.size(); i++) { // \u7edf\u8ba1\u6bcf\u2f00\u4e2a\u5b57\u7b26\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\n             hash[S[i] - 'a'] = i;\n        }\n        vector<int> result;\n        int left = 0;\n        int right = 0;\n        for (int i = 0; i < S.size(); i++) {\n            right = max(right, hash[S[i] - 'a']); // \u627e\u5230\u5b57\u7b26\u51fa\u73b0\u7684\u6700\u8fdc\u8fb9\u754c\n            if (i == right) {\n                result.push_back(right - left + 1);\n                left = i + 1;\n            }\n        }\n        return result;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-56\u5408\u5e76\u533a\u95f4"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/merge-intervals/description/"},"LC-56.\u5408\u5e76\u533a\u95f4")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u51fa\u2f00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u8bf7\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u3002")),(0,r.kt)("p",null,"\u7167\u5de6\u8fb9\u754c\u6392\u5e8f\uff0c\u6392\u5e8f\u4e4b\u540e\u5c40\u90e8\u6700\u4f18\uff1a\u6bcf\u6b21\u5408\u5e76\u90fd\u53d6\u6700\u2f24\u7684\u53f3\u8fb9\u754c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        auto cmp = [](const vector<int> &a, const vector<int> &b) {\n            if (a[0] - b[0]) return a[0] < b[0];\n            return a[1] < b[1];\n        };\n        sort(intervals.begin(), intervals.end(), cmp);\n        vector<vector<int>> ans;\n        for (int i = 0; i < intervals.size(); i++) {\n            int start = intervals[i][0];\n            int end = intervals[i][1];\n            while (i + 1 < intervals.size() && intervals[i + 1][0] <= end) end = max(end, intervals[++i][1]);\n            ans.push_back({start, end});\n        }\n        return ans;\n    }\n};\n")),(0,r.kt)("h4",{id:"lc-55\u8df3\u8dc3\u6e38\u620f"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/jump-game/description/"},"LC-55.\u8df3\u8dc3\u6e38\u620f")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u2f00\u4e2a\u2fae\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u2f00\u4e2a\u4f4d\u7f6e\u3002\n\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u2f24\u2ed3\u5ea6\u3002\n\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u2f00\u4e2a\u4f4d\u7f6e\u3002")),(0,r.kt)("p",null,"\u5176\u5b9e\u8df3\u2f0f\u6b65\u2f46\u6240\u8c13\uff0c\u5173\u952e\u5728\u4e8e\u53ef\u8df3\u7684\u8986\u76d6\u8303\u56f4\uff01"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u8df3\u8dc3\u8986\u76d6\u8303\u56f4\u7a76\u7adf\u53ef\u4e0d\u53ef\u4ee5\u8986\u76d6\u5230\u7ec8\u70b9\uff01")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8d2a\u2f3c\u7b97\u6cd5\u5c40\u90e8\u6700\u4f18\u89e3\uff1a\u6bcf\u6b21\u53d6\u6700\u2f24\u8df3\u8dc3\u6b65\u6570\uff08\u53d6\u6700\u2f24\u8986\u76d6\u8303\u56f4\uff09\uff0c\u6574\u4f53\u6700\u4f18\u89e3\uff1a\u6700\u540e\u5f97\u5230\u6574\u4f53\u6700\u2f24\u8986\u76d6\u8303\u56f4\uff0c\u770b\u662f\u5426\u80fd\u5230\u7ec8\u70b9\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\nbool canJump(vector<int>& nums) {\nint cover = 0;\nif (nums.size() == 1) return true; // \u53ea\u6709\u2f00\u4e2a\u5143\u7d20\uff0c\u5c31\u662f\u80fd\u8fbe\u5230\nfor (int i = 0; i <= cover; i++) { // \u6ce8\u610f\u8fd9\u2fa5\u662f\u2f29\u4e8e\u7b49\u4e8ecover\ncover = max(i + nums[i], cover);\nif (cover >= nums.size() - 1) return true; // \u8bf4\u660e\u53ef\u4ee5\u8986\u76d6\u5230\u7ec8\u70b9\u4e86\n}\nreturn false;\n}\n};\n")),(0,r.kt)("h4",{id:"lc-45\u8df3\u8dc3\u6e38\u620f-ii"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/jump-game-ii/description/"},"LC-45.\u8df3\u8dc3\u6e38\u620f II")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed9\u5b9a\u2f00\u4e2a\u2fae\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u2f00\u4e2a\u4f4d\u7f6e\u3002\n\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u2f24\u2ed3\u5ea6\u3002\n\u4f60\u7684\u2f6c\u6807\u662f\u4f7f\u2f64\u6700\u5c11\u7684\u8df3\u8dc3\u6b21\u6570\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u2f00\u4e2a\u4f4d\u7f6e\u3002")),(0,r.kt)("p",null,"\u8d2a\u2f3c\u7684\u601d\u8def\uff0c\u5c40\u90e8\u6700\u4f18\uff1a\u5f53\u524d\u53ef\u79fb\u52a8\u8ddd\u79bb\u5c3d\u53ef\u80fd\u591a\u2f9b\uff0c\u5982\u679c\u8fd8\u6ca1\u5230\u7ec8\u70b9\uff0c\u6b65\u6570\u518d\u52a0\u2f00\u3002\u6574\u4f53\u6700\u4f18\uff1a\u2f00\u6b65\u5c3d\u53ef\u80fd\u591a\u2f9b\uff0c\u4ece\u2f7d\u8fbe\u5230\u6700\u2f29\u6b65\u6570\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u4ee5\u6700\u2f29\u7684\u6b65\u6570\u589e\u52a0\u6700\u2f24\u7684\u8986\u76d6\u8303\u56f4\uff0c\u76f4\u5230\u8986\u76d6\u8303\u56f4\u8986\u76d6\u4e86\u7ec8\u70b9\uff0c\u8fd9\u4e2a\u8303\u56f4\u5185\u6700\u2f29\u6b65\u6570\u2f00\u5b9a\u53ef\u4ee5\u8df3\u5230\uff0c\u4e0d\u2f64\u7ba1\u5177\u4f53\u662f\u600e\u4e48\u8df3\u7684\uff0c\u4e0d\u7ea0\u7ed3\u4e8e\u2f00\u6b65\u7a76\u7adf\u8df3\u2f00\u4e2a\u5355\u4f4d\u8fd8\u662f\u4e24\u4e2a\u5355\u4f4d\u3002"),"\n",(0,r.kt)("strong",{parentName:"p"},"\u8fd9\u2fa5\u9700\u8981\u7edf\u8ba1\u4e24\u4e2a\u8986\u76d6\u8303\u56f4\uff0c\u5f53\u524d\u8fd9\u2f00\u6b65\u7684\u6700\u2f24\u8986\u76d6\u548c\u4e0b\u2f00\u6b65\u6700\u2f24\u8986\u76d6\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8d2a\u5fc3\u601d\u60f3\uff1a\u6bcf\u6b21\u8df3\u8dc3\u90fd\u662f\u4ee5\u5f53\u524d\u80fd\u8df3\u7684\u8303\u56f4\u5185\u6700\u5927\u7684\u6b65\u4f10")),(0,r.kt)("p",null,"\u2f45\u6cd5\u2f00\uff1a"),(0,r.kt)("p",null,"\u8fd9\u2fa5\u8fd8\u662f\u6709\u4e2a\u7279\u6b8a\u60c5\u51b5\u9700\u8981\u8003\u8651\uff0c\u5f53\u79fb\u52a8\u4e0b\u6807\u8fbe\u5230\u4e86\u5f53\u524d\u8986\u76d6\u7684\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\u65f6"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\u4e0d\u662f\u96c6\u5408\u7ec8\u70b9\uff0c\u6b65\u6570\u5c31\u52a0\u2f00\uff0c\u8fd8\u9700\u8981\u7ee7\u7eed\u2f9b\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\u5c31\u662f\u96c6\u5408\u7ec8\u70b9\uff0c\u6b65\u6570\u4e0d\u2f64\u52a0\u2f00\uff0c\u56e0\u4e3a\u4e0d\u80fd\u518d\u5f80\u540e\u2f9b\u4e86\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u7248\u672c\u2f00\n    int jump(vector<int>& nums) {\n        int end = 0;\n        int maxPos = 0;\n        int steps = 0;\n        for (int i = 0; i < nums.size() - 1; i++) {\n            maxPos = max(maxPos, nums[i] + i);\n            if (i == end) {\n                end = maxPos;\n                steps++;\n            }\n        }\n        return steps;\n    }\n\nclass Solution {\n    public:\n    int jump(vector<int>& nums) {\n        if (nums.size() == 1) return 0;\n        int curDistance = 0; // \u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\n        int ans = 0; // \u8bb0\u5f55\u2f9b\u7684\u6700\u2f24\u6b65\u6570\n        int nextDistance = 0; // \u4e0b\u2f00\u6b65\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\n        for (int i = 0; i < nums.size(); i++) {\n            nextDistance = max(nums[i] + i, nextDistance); // \u66f4\u65b0\u4e0b\u2f00\u6b65\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\n            if (i == curDistance) { // \u9047\u5230\u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\n                if (curDistance != nums.size() - 1) {\n                // \u5982\u679c\u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\u4e0d\u662f\u7ec8\u70b9\n                    ans++; // \u9700\u8981\u2f9b\u4e0b\u2f00\u6b65\n                    curDistance = nextDistance; // \u66f4\u65b0\u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\uff08\u76f8\u5f53\u4e8e\u52a0\u6cb9\u4e86\uff09\n                    if (nextDistance >= nums.size() - 1) break;\n                    // \u4e0b\u2f00\u6b65\u7684\u8986\u76d6\u8303\u56f4\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u7ec8\u70b9\uff0c\u7ed3\u675f\u5faa\u73af\n                } else break;\n                 // \u5f53\u524d\u8986\u76d6\u6700\u8fdc\u8ddd\u79bb\u4e0b\u6807\u662f\u96c6\u5408\u7ec8\u70b9\uff0c\u4e0d\u2f64\u505aans++\u64cd\u4f5c\u4e86\uff0c\u76f4\u63a5\u7ed3\u675f\n                                  }\n        }\n        return ans;\n    }\n};\n")),(0,r.kt)("p",null,"\u2f45\u6cd5\u2f06\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    struct Node {\n        int ind, step;\n    };\n    int jump(vector<int>& nums) {\n        int n = nums.size();\n        if (n <= 1) return 0;\n        vector<bool> check(n, false);\n        queue<Node> que;\n        que.push({0, 0});\n        check[0] = true;\n        while (!que.empty()) {\n            auto cur = que.front();\n            int ind = cur.ind;\n            que.pop();\n            if (cur.ind + nums[cur.ind] >= n - 1) {\n                return cur.step + 1;\n            }\n            for (int i = 1; i <= nums[cur.ind]; i++) {\n                if (check[ind + i]) continue;\n                check[ind + i] = true;\n                que.push({ind + i, cur.step + 1});\n            }\n        }\n        return -1;\n    }\n};\n")),(0,r.kt)("h4",{id:"poj3069sarumans-army"},"POJ3069.Saruman's Army"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u76f4\u7ebf\u4e0a\u6709N\u4e2a\u70b9\u3002\u70b9i\u7684\u4f4d\u7f6e\u662fX\u3002\u4ece\u8fd9N\u4e2a\u70b9\u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\uff0c\u7ed9\u5b83\u4eec\u52a0\u4e0a\u6807\u8bb0\u3002\u5bf9\u6bcf\u4e00\u4e2a\n\u70b9\uff0c\u5176\u8ddd\u79bb\u4e3aR\u4ee5\u5185\u7684\u533a\u57df\u91cc\u5fc5\u987b\u6709\u5e26\u6709\u6807\u8bb0\u7684\u70b9\uff08\u81ea\u5df1\u672c\u8eab\u5e26\u6709\u6807\u8bb0\u7684\u70b9\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u4e0e\u5176\u8ddd\u79bb\u4e3a0\u7684\u5730\u65b9\u6709\u4e00\u4e2a\u5e26\u6709\u6807\u8bb0\u7684\u70b9\uff09\u3002\u5728\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u5e0c\u671b\u80fd\u4e3a\u5c3d\u53ef\u80fd\u5c11\u7684\u70b9\u6700\u52a0\u6807\u8bb0\u3002\u8bf7\u95ee\u81f3\u5c11\u8981\u6709\u591a\u5c11\u70b9\u88ab\u52a0\u4e0a\u6807\u8bb0"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("img",{alt:"image-20210925200723775",src:e(17602).Z}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ece\u6700\u5de6\u8fb9\u5f00\u59cb\u8003\u8651\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\uff0c\u5230\u8ddd\u5176R\u4ee5\u5185\u7684\u533a\u57df\u5185\u5fc5\u987b\u8981\u6709\u5e26\u6709\u6807\u8bb0\u7684\u70b9\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u663e\u7136\u4ece\u6700\u5de6\u8fb9\u7684\u70b9\u5f00\u59cb\uff0c\u8ddd\u79bb\u4e3aR\u4ee5\u5185\u7684\u6700\u8fdc\u7684\u70b9\uff0c\u9996\u5148\u88ab\u6807\u8bb0\u3002\u56e0\u4e3a\u66f4\u5de6\u7684\u533a\u57df\u6ca1\u6709\u8986\u76d6\u7684\u610f\u4e49\uff0c\u6240\u4ee5\u5e94\u8be5\u5c3d\u53ef\u80fd\u8986\u76d6\u66f4\u9760\u53f3\u7684\u70b9\u3002\n",(0,r.kt)("img",{alt:"image-20210925200739033",src:e(82040).Z})),(0,r.kt)("li",{parentName:"ul"},"\u52a0\u4e0a\u4e86\u7b2c\u4e00\u4e2a\u6807\u8bb0\u540e\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u4e5f\u7528\u540c\u6837\u7684\u529e\u6cd5\u5904\u7406\u3002\u5bf9\u4e8e\u6dfb\u52a0\u4e86\u7b26\u53f7\u7684\u70b9\u53f3\u4fa7\u76f8\u8ddd\u8d85\u8fc7R\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u91c7\u7528\u540c\u6837\u7684\u65b9\u6cd5\n",(0,r.kt)("img",{alt:"image-20210925200751407",src:e(20157).Z})),(0,r.kt)("li",{parentName:"ul"},"\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int MAX_N = 1000;\nint arr[MAX_N + 5];\n\nint solve(int n, int r) {\n    for (int i = 0; i < n; i++) {\n        cin >> arr[i];\n    }\n    sort(arr, arr + n);\n    int index = 0, count = 0;\n    while (index < n) {\n        int s = arr[index++];\n        while (index < n && s + r >= arr[index]) index++;\n        int p = arr[index - 1];\n        while (index < n && p + r >= arr[index]) index++;\n        count++;\n    }\n    return count;\n}\n\nint main() {\n    int n, r;\n    while (cin >> r >> n) {\n        if (n == -1 || r == -1) break;\n        cout << solve(n, r) << endl;\n    }\n}\n")),(0,r.kt)("h4",{id:"poj-3253fence-repair"},"POJ 3253.Fence Repair"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u519c\u592b\u7ea6\u7ff0\u4e3a\u4e86\u4fee\u7406\u6805\u680f\uff0c\u8981\u5c06\u4e00\u5757\u5f88\u957f\u7684\u6728\u677f\u5207\u5236\u6210N\u5757\u3002\u51c6\u5907\u5207\u6210\u7684\u6728\u677f\u7684\u957f\u5ea6\u4e3a",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"L"),(0,r.kt)("mn",{parentName:"msub"},"1"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"L_1")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),"\u3001",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"L"),(0,r.kt)("mn",{parentName:"msub"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"L_2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.30110799999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),"\u3001",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow"},"\u22ef")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\cdots")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.31em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"minner"},"\u22ef"))))),"\u3001",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"L"),(0,r.kt)("mi",{parentName:"msub"},"N"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"L_N")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.83333em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.32833099999999993em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),"\uff0c\u672a\u5207\u5272\u524d\u6728\u677f\u7684\u957f\u5ea6\u6070\u597d\u4e3a\u5207\u5272\u540e\u6728\u677f\u957f\u5ea6\u7684\u603b\u548c\u3002\u6bcf\u6b21\u5207\u65ad\u6728\u677f\u65f6\uff0c\u9700\u8981\u7684\u5f00\u9500\u4e3a\u8fd9\u5757\u6728\u677f\u7684\u957f\u5ea6\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u4f8b\u5982\u957f\u5ea6\u4e3a21\u7684\u6728\u677f\u8981\u5207\u6210\u957f\u5ea6\u4e3a5\u30018\u30018\u7684\u4e09\u5757\u6728\u677f\u3002\u957f21\u7684\u6728\u677f\u5207\u6210\u957f\u4e3a13\u548c8\u7684\u677f\u65f6\uff0c\u5f00\u9500\u4e3a21\u3002\u518d\u5c06\u957f\u5ea6\u4e3a13\u7684\u677f\u5207\u6210\u957f\u5ea6\u4e3a5\u548c8\u7684\u677f\u65f6\uff0c\u5f00\u9500\u662f13\u3002\u4e8e\u662f\u5408\u8ba1\u5f00\u9500\u662f34\u3002"),(0,r.kt)("p",{parentName:"blockquote"},"\u8bf7\u6c42\u51fa\u6309\u7167\u76ee\u6807\u8981\u6c42\u5c06\u6728\u677f\u5207\u5272\u5b8c\u6700\u5c0f\u7684\u5f00\u9500\u662f\u591a\u5c11\u3002")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20210925202244562",src:e(79249).Z})),(0,r.kt)("p",null,"\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5c31\u5bf9\u5e94\u4e86\u5207\u5272\u51fa\u7684\u4e00\u5757\u5757\u6728\u677f\u3002\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u5c31\u5bf9\u5e94\u4e86\u4e3a\u4e86\u5f97\u5230\u5bf9\u5e94\u6728\u677f\n\u542c\u9700\u7684\u5207\u5272\u6b21\u6570\uff0c\u5f00\u9500\u7684\u5408\u8ba1\u5c31\u662f\u5404",(0,r.kt)("strong",{parentName:"p"},"\u53f6\u5b50\u8282\u70b9\u7684\u6728\u677f\u7684\u957f\u5ea6\xd7\u8282\u70b9\u7684\u6df1\u5ea6")),(0,r.kt)("p",null,"\u6b64\u65f6\u7684\u6700\u4f73\u5207\u5272\u65b9\u6cd5\u9996\u5148\u5e94\u8be5\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a",(0,r.kt)("strong",{parentName:"p"},"\u6700\u77ed\u7684\u677f\u4e0e\u6b21\u77ed\u7684\u677f\u7684\u8282\u70b9\u5e94\u5f53\u662f\u5144\u5f1f\u8282\u70b9\u5144\u5f1f\u8282\u70b9"),"\uff0c"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6700\u77ed\u7684\u677f\u5e94\u5f53\u662f\u6df1\u5ea6\u6700\u5927\u7684\u53f6\u5b50\u8282\u70b9\u4e4b\u4e00\u3002"),"\u800c\u4e14\u7531\u4e8e\u4e0e\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u540c\u4e00\u6df1\u5ea6\u7684\u5144\u5f1f\u8282\u70b9\u4e00\u5b9a\u5b58\u5728\uff0c\u5e76\u4e14\u7531\u4e8e\u540c\u6837\u662f\u6700\u6df1\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u5e94\u8be5\u5bf9\u5e94\u4e8e\u6b21\u77ed\u7684\u677f\u3002"),(0,r.kt)("p",null,"\u54c8\u592b\u66fc\u6811"),(0,r.kt)("h3",{id:"\u5b57\u5178\u5e8f\u6700\u5c0f\u95ee\u9898"},"\u5b57\u5178\u5e8f\u6700\u5c0f\u95ee\u9898"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Best CowLine\uff08POJ3617\uff09\n\u7ed9\u5b9a\u957f\u5ea6\u4e3aN\u7684\u5b57\u7279\u4e32S\uff0c\u8981\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u5b57\u7b26\u4e32T\u3002\u8d77\u521d\uff0cT\u662f\u4e00\u4e2a\u7a7a\u4e32\uff0c\u968f\u540e\u53cd\u590d\u8fdb\u884c\u4e0b\u5217\u4efb\u610f\u64cd\u4f5c"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"S\u7684\u5934\u90e8\u5220\u96641\u4e2a\u5b57\u7b26\uff0c\u52a0\u5230T\u7684\u5c3e\u90e8"),(0,r.kt)("li",{parentName:"ul"},"S\u7684\u5c3e\u90e8\u5220\u96641\u4e2a\u5b57\u7b26\uff0c\u52a0\u5230T\u7684\u5c3e\u90e8")),(0,r.kt)("p",{parentName:"blockquote"},"\u76ee\u6807\u662f\u8981\u6784\u9020\u5b57\u5178\u5e8f\u5c3d\u53ef\u80fd\u5c0f\u7684\u5b57\u7b26\u4e32T")),(0,r.kt)("p",null,"\u4ece\u5b57\u5178\u5e8f\u7684\u6027\u8d28\u4e0a\u770b\uff0c\u65e0\u8bbaT\u7684\u672b\u5c3e\u6709\u591a\u5927\uff0c\u53ea\u8981\u524d\u9762\u90e8\u5206\u7684\u8f83\u5c0f\u5c31\u53ef\u4ee5\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u65ad\u53d6S\u7684\u5f00\u5934\u548c\u672b\u5c3e\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u5b57\u7b26\u653e\u5230T\u7684\u672b\u5c3e\n\u8fd9\u4e2a\u7b97\u6cd5\u5df2\u7ecf\u63a5\u8fd1\u6b63\u786e\u4e86\uff0c\u53ea\u662f\u9488\u5bf9S\u7684\u5f00\u5934\u548c\u672b\u5c3e\u5b57\u7b26\u76f8\u540c\u7684\u60c5\u5f62\u8fd8\u6ca1\u6709\u5b9a\u4e49\u3002\u5728\u8fd9\u79cd\u60c5\u5f62\u4e0b,\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5c3d\u65e9\u4f7f\u7528\u66f4\u5c0f\u7684\u5b57\u7b26\uff0c\u6240\u4ee5\u5c31\u8981\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\u3002\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e5f\u6709\u53ef\u80fd\u76f8\u540c\uff0c\u56e0\u6b64\u5c31\u6709\u5982\u4e0b\u7b97\u6cd5:"),(0,r.kt)("li",{parentName:"ul"},"\u6309\u7167\u5b57\u5178\u5e8f\u6bd4\u8f83S\u548c\u5c06S\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32S\u2019"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679cS\u8f83\u5c0f\uff0c\u5c31\u4eceS\u7684\u5f00\u5934\u53d6\u51fa\u4e00\u4e2a\u6587\u5b57\uff0c\u8ffd\u52a0\u5230T\u7684\u672b\u5c3e"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679cS\u2019\u8f83\u5c0f\uff0c\u5c31\u4eceS\u7684\u672b\u5c3e\u53d6\u51fa\u4e00\u4e2a\u6587\u5b66\uff0c\u8ffd\u52a0\u5230T\u7684\u672b\u5c3e"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u76f8\u540c\u5219\u53d6\u54ea\u4e2a\u90fd\u53ef\u4ee5")),(0,r.kt)("p",null,"\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u6027\u8d28\uff0c\u5b57\u5178\u5e8f\u6bd4\u8f83\u7c7b\u7684\u95ee\u9898\u7ecf\u5e38\u80fd\u7528\u5f97\u4e0a\u8d2a\u5fc3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int MAX_N = 2000;\nchar s[MAX_N + 5];\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n        cin >> s[i];\n    }\n    int a = 0, b = n - 1, count = 0;\n    while (a <= b) {\n        bool left = false;\n        for (int i = 0; i <= b - a; i++) {\n            if (s[a + i] < s[b - i]) {\n                left = true;\n                count++;\n                break;\n            } else if (s[a + i] > s[b - i]) {\n                count++;\n                left = false;\n                break;\n            }\n        }\n        if (left) putchar(s[a++]);\n        else putchar(s[b--]);\n        if (count % 80 == 0) cout << endl;\n    }\n    cout << endl;\n    return 0;\n}\n\n")),(0,r.kt)("h3",{id:"other"},"other"),(0,r.kt)("h4",{id:"lc-134\u52a0\u6cb9\u7ad9"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/gas-station/description/"},"LC-134.\u52a0\u6cb9\u7ad9")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728\u2f00\u6761\u73af\u8def\u4e0a\u6709 N \u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u6709\u6c7d\u6cb9 gas","[i]"," \u5347\u3002\n\u4f60\u6709\u2f00\u8f86\u6cb9\u7bb1\u5bb9\u91cf\u2f46\u9650\u7684\u7684\u6c7d\u2ecb\uff0c\u4ece\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u5f00\u5f80\u7b2c i+1 \u4e2a\u52a0\u6cb9\u7ad9\u9700\u8981\u6d88\u8017\u6c7d\u6cb9 cost","[i]"," \u5347\u3002\u4f60\u4ece\u5176\u4e2d\u7684\u2f00\u4e2a\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u5f00\u59cb\u65f6\u6cb9\u7bb1\u4e3a\u7a7a\u3002\n\u5982\u679c\u4f60\u53ef\u4ee5\u7ed5\u73af\u8def\u2f8f\u9a76\u2f00\u5468\uff0c\u5219\u8fd4\u56de\u51fa\u53d1\u65f6\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7\uff0c\u5426\u5219\u8fd4\u56de -1\u3002")),(0,r.kt)("p",null,"\u53ea\u8981\u662f ",(0,r.kt)("strong",{parentName:"p"},"\u5f53\u524d ",(0,r.kt)("inlineCode",{parentName:"strong"},"gas[i] >= cost[i]"))," \u5c31\u80fd\u5f00\uff0c\u5426\u5728\u5c31\u6362\u4e0b\u4e00\u4e2a\u7ad9\u4f5c\u4e3a\u8d77\u70b9\u3002"),(0,r.kt)("p",null,"\u4e0b\u56fe\u7684\u9ed1\u8272\u6298\u7ebf\u56fe\u5373\u603b\u6cb9\u91cf\u5269\u4f59\u503c\uff0c\u82e5\u8981\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff1a\u8dd1\u5b8c\u5168\u7a0b\u518d\u56de\u5230\u8d77\u70b9\uff0c\u603b\u6cb9\u91cf\u5269\u4f59\u503c\u7684\u4efb\u610f\u90e8\u5206\u90fd\u9700\u8981\u5728X\u8f74\u4ee5\u4e0a\uff0c\u4e14\u8dd1\u5230\u7ec8\u70b9\u65f6\uff1a\u603b\u5269\u4f59\u6c7d\u6cb9\u91cf >= 0\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u8ba9\u9ed1\u8272\u6298\u7ebf\u56fe\u4efb\u610f\u90e8\u5206\u90fd\u5728 X \u8f74\u4ee5\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u5411\u4e0a\u79fb\u52a8\u9ed1\u8272\u6298\u7ebf\u56fe\uff0c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u5728X\u8f74\u6216X\u8f74\u4ee5\u4e0a\u3002\u6b64\u65f6\uff0c\u5904\u5728X\u8f74\u7684\u70b9\u5373\u4e3a\u51fa\u53d1\u70b9\u3002\u5373\u9ed1\u8272\u6298\u7ebf\u56fe\u7684\u6700\u4f4e\u503c\u7684\u4f4d\u7f6e\uff1aindex = 3\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:e(17959).Z})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"gas  = [1,2,3,4,5]\ncost = [3,4,5,1,2]\n\u67f1\u72b6\u56fe\n\u7eff\u8272\uff1a\u53ef\u6dfb\u52a0\u7684\u6c7d\u6cb9 gas[i]\n\u6a59\u8272\uff1a\u6d88\u8017\u7684\u6c7d\u6cb9 cose[i]\n\n\u6298\u7ebf\u56fe\uff1a\n\u865a\u7ebf\uff08\u84dd\u8272\uff09\uff1a\u5f53\u524d\u52a0\u6cb9\u7ad9\u7684\u53ef\u7528\u503c\n\u5b9e\u7ebf\uff08\u9ed1\u8272\uff09\uff1a\u4ece0\u5f00\u59cb\u7684\u603b\u5269\u4f59\u6c7d\u6cb9\u91cf\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u9996\u5148\u5224\u65ad\u603bgas\u80fd\u4e0d\u80fd\u5927\u4e8e\u7b49\u4e8e\u603bcost\uff0c\u5982\u679c\u603bgas\u4e0d\u591f\uff0c\u4e00\u5207\u90fd\u767d\u642d\u5bf9\u5427\uff08\u603b\uff08gas- cost\uff09\u4e0d\u7528\u5355\u72ec\u53bb\u8ba1\u7b97\uff0c\u548c\u627e\u6700\u4f4e\u70b9\u65f6\u4e00\u8d77\u8ba1\u7b97\u5373\u53ef\uff0c\u53ea\u904d\u5386\u4e00\u6b21\uff09\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u518d\u5c31\u662f\u627e\u603b\uff08gas-cost\uff09\u7684\u6700\u4f4e\u70b9\uff0c\u4e0d\u7ba1\u6b63\u8d1f\uff08\u5f53\u7136\u5982\u679c\u6700\u4f4e\u70b9\u90fd\u662f\u6b63\u7684\u8bdd\u90a3\u80af\u5b9a\u80fd\u8dd1\u5b8c\u4e86\uff09\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u627e\u5230\u6700\u4f4e\u70b9\u540e\uff0c\u5982\u679c\u6709\u89e3\uff0c\u90a3\u4e48\u89e3\u5c31\u662f\u6700\u4f4e\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u603b\uff08gas-cost\uff09\u662f\u5927\u4e8e\u7b49\u4e8e0\u7684\uff0c\u6240\u4ee5\u524d\u9762\u635f\u5931\u7684gas\u6211\u4ece\u6700\u4f4e\u70b9\u4e0b\u4e00\u4e2a\u70b9\u5f00\u59cb\u90fd\u4f1a\u62ff\u56de\u6765\uff01\u522b\u7ba1\u540e\u9762\u7684\u8d8b\u52bf\u662f\u5148\u52a0\u540e\u51cf\u8fd8\u662f\u5148\u51cf\u540e\u52a0\uff0c\u6700\u7ec8\u7ed3\u679c\u6211\u662f\u80fd\u586b\u5e73\u524d\u9762\u7684\u5751\u7684\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n  public:\n  int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n    int n = gas.size();\n\n    int total_tank = 0;\n    int curr_tank = 0;\n    int starting_station = 0;\n\n    for (int i = 0; i < n; ++i) {\n      total_tank += gas[i] - cost[i];\n      curr_tank  += gas[i] - cost[i];\n    \n      if (curr_tank < 0) {\n        starting_station = i + 1;\n        curr_tank = 0;\n      }\n    }\n    \n    return total_tank >= 0 ? starting_station : -1;\n  }\n};\nclass Solution {\npublic:\n    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n        int n = gas.size(), preMin = 0x3f3f3f3f, start = 0, total = 0;\n        for (int i = 0; i < n; i++) {\n           total += gas[i] - cost[i]; \n           if (total < preMin) {\n               preMin = total;\n               start = i + 1;\n           }\n        }\n        return total >= 0 ? (start) % n : -1;\n    }\n};\n")),(0,r.kt)("h4",{id:"\u505a\u8239\u8fc7\u6cb3"},(0,r.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/boats-to-save-people/"},"\u505a\u8239\u8fc7\u6cb3")),(0,r.kt)("p",null,"\u53cc\u6307\u9488\u505a\u6cd5\uff0c\u5de6\u8fb9\u7684\u6307\u9488\u6307\u5411\u5f53\u524d\u6700\u8f7b\u7684\uff0c\u53f3\u8fb9\u6307\u9488\u6307\u5411\u5f53\u524d\u6700\u80d6\u7684\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    public int numRescueBoats(int[] people, int limit) {\n        int res = 0;\n        int right = people.length - 1;\n        int left = 0;\n        Arrays.sort(people);\n        while (left <= right) \n        {\n            if (left == right) \n            {\n                res++;      // \u53ea\u5269\u4e0b\u6700\u540e\u4e00\u4e2a,\u76f4\u63a5\u4e00\u4e2a\u8d70,\u7ed3\u675f\n                break;\n            }\n            \n            if (people[left] + people[right] > limit) \n            {\n                res++;\n                right--;        // \u5148\u8f7d\u6700\u91cd\u7684, \u800c\u4e14\u6700\u5c0f\u7684\u4e5f\u65e0\u6cd5\u4e00\u8d77\u8f7d,\u90a3\u4e48\u5c31\u6700\u91cd\u7684\u5355\u72ec\u8d70\n            }\n            else \n            {\n                res++;\n                right--;        // \u6700\u91cd\u7684\u4e0e\u6700\u8f7b\u7684\u4e00\u8d77\u8d70\n                left++;\n            }\n        }\n        return res;\n    }\n}\n")),(0,r.kt)("h4",{id:"\u5b89\u7f6e\u8def\u706f"},"\u5b89\u7f6e\u8def\u706f"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nowcoder.com/practice/3a3577b9d3294fb7845b96a9cd2e099c?tpId=98&tqId=32826&tPage=1&rp=1&ru=/ta/2019test&qru=/ta/2019test/question-ranking"},"\u9898\u76ee\u63cf\u8ff0"),"  "),(0,r.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\u3002\u6bcf\u9047\u5230\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"."),"\uff0c\u5c31\u662f\u653e\u7f6e\u4e00\u4e2a\u8def\u706f\uff0c\u7136\u540e\u4ece\u8fd9\u5f00\u59cb\u7684\u4e09\u4e2a\u4f4d\u7f6e\u90fd\u4e0d\u7528\u8003\u8651\u3002\u5982\u679c\u9047\u5230\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"'X'"),"\uff0c\u5c31\u662f\u76f4\u63a5\u8df3\u8fc7\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <string>\n#include  <iostream>\n\nint main(void) {  \n  int n;\n  std::cin>>n;       // \u6d4b\u8bd5\u6848\u4f8b\u4e2a\u6570\n  \n  while(n--) {  \n    int count =0;   // \u6bcf\u4e2a\u6d4b\u8bd5\u6848\u4f8b\n    int length; \n    std::string lamps;\n    \n    std::cin>>length;  // \u8def\u706f\u957f\u5ea6\n    std::cin>>lamps;   // \u8def\u706f\n    \n    for(int pos =0; pos < length; ) {  \n      if(lamps[pos] =='.') { \n        pos +=3;\n        ++count;\n      }\n      else {  \n        pos +=1;\n      } \n    } //for\n    \n    // \u6bcf\u6b21\u901a\u8fc7\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\uff0c\u5c31\u662f\u8f93\u51fa\u4e00\u6b21\n    std::cout<<count<<std::endl;\n  }  //while\n \n  return 0; \n}\n")),(0,r.kt)("h4",{id:"hzoj-253-\u5976\u725b\u6652\u592a\u9633"},"HZOJ-253-\u5976\u725b\u6652\u592a\u9633"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 253.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e8c  6/18 19:31:12 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n#define MAX_N 2500\nstruct Range {\n    int l, r;\n} arr[MAX_N + 5], item[MAX_N + 5];\n\nbool cmp(const Range &a, const Range &b) {\n    return a.r < b.r;\n}\n\nint main() {\n    int n, l;\n    cin >> n >> l; \n    for (int i = 0; i < n; i++) {\n        cin >> arr[i].l >> arr[i].r;\n    }\n    for (int i = 0; i < l; i++) {\n        cin >> item[i].l >> item[i].r;\n    }\n    sort(arr, arr + n, cmp);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int flag = 0, ind = -1;\n        for (int j = 0; j < l; j++) {\n            if (item[j].r == 0) continue;\n            if (item[j].l < arr[i].l || item[j].l > arr[i].r) continue;\n            if (ind == -1) {\n                ind = j;\n                flag = 1;\n                continue;\n            }\n            if (item[j].l < item[ind].l) ind = j;\n        }\n        if (flag) item[ind].r -= 1;\n        ans += flag;\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,r.kt)("h4",{id:"hzoj-255-\u5b89\u88c5\u96f7\u8fbe"},"HZOJ-255-\u5b89\u88c5\u96f7\u8fbe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 255.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e8c  6/18 19:57:15 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n#define MAX_N 1000\nstruct Range {\n    double l, r;\n} arr[MAX_N + 5];\n\nbool cmp(const Range &a, const Range &b) {\n    return a.r < b.r;\n}\n\nint main() {\n    int n;\n    double d;\n    cin >> n >> d;\n    for (int i = 0; i < n; i++) {\n        double x, y;\n        cin >> x >> y;\n        if (y > d) {\n            cout << -1 << endl;\n            return 0;\n        }\n        arr[i].l = x - sqrt(d * d - y * y);\n        arr[i].r = x + sqrt(d * d - y * y);\n    }\n    sort(arr, arr + n, cmp);\n    double p = arr[0].r;\n    int cnt = 1;\n    for (int i = 1; i < n; i++) {\n        if (arr[i].l > p) {\n            cnt += 1;\n            p = arr[i].r;\n        }\n    }\n    cout << cnt << endl;\n    return 0;\n}\n")),(0,r.kt)("h4",{id:"hzoj-257-\u6811\u7684\u989c\u8272"},"HZOJ-257-\u6811\u7684\u989c\u8272"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"/*************************************************************************\n   > File Name: 257.cpp\n   > Author: hug\n   > Mail:   hug@haizeix.com\n   > Created Time: \u4e8c  6/18 20:36:44 2019\n ************************************************************************/\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <queue>\nusing namespace std;\n#define MAX_N 1000\n\nstruct Node {\n    int father, head, tail;\n    int val, cnt;\n};\n\nbool operator<(const Node &a, const Node &b) {\n    return a.val * b.cnt < a.cnt * b.val;\n}\n\nstruct UnionSet {\n    int fa[MAX_N + 5];\n    Node arr[MAX_N + 5];\n    int ans[MAX_N + 5];\n    inline void init(int n) {\n        for (int i = 1 ; i <= n; i++) {\n            fa[i] = i;\n            ans[i] = 0;\n            arr[i].father = 0;\n            arr[i].head = arr[i].tail = i;\n            arr[i].cnt = 1;\n        }\n    }\n    int get(int x) {\n        return (fa[x] == x ? x : get(fa[x]));\n    }\n    void merge(int a, int b) {\n        int aa = get(a), bb = get(b);\n        if (aa == bb) return ;\n        fa[bb] = aa;\n        ans[arr[aa].tail] = arr[bb].head;\n        arr[aa].tail = arr[bb].tail;\n        arr[aa].val += arr[bb].val;\n        arr[aa].cnt += arr[bb].cnt;\n        return ;\n    }\n};\n\nUnionSet u;\npriority_queue<Node> que;\n\nint val[MAX_N + 5];\n\nint main() {\n    int n, r;\n    cin >> n >> r;\n    u.init(n);\n    for (int i = 1; i <= n; i++) {\n        cin >> val[i];\n        u.arr[i].val = val[i];\n        que.push(u.arr[i]);\n    }\n    for (int i = 1; i < n; i++) {\n        int a, b;\n        cin >> a >> b;\n        u.arr[b].father = a;\n    }\n    while (!que.empty()) {\n        int ind = que.top().head, fa = u.arr[ind].father;\n        que.pop();\n        if (fa == 0) continue;\n        u.merge(fa, ind);\n        que.push(u.arr[u.get(ind)]);\n    }\n    int p = r, t = 1, ans = 0;\n    while (p) {\n        ans += val[p] * t;\n        p = u.ans[p];\n        t++;        \n    }\n    cout << ans << endl;\n    return 0;\n}\n")),(0,r.kt)("h1",{id:""}),(0,r.kt)("h1",{id:"\u8d2a\u5fc3\u7b97\u6cd5\u4e0e\u6700\u5c0f\u652f\u6491\u6811"},"\u8d2a\u5fc3\u7b97\u6cd5\u4e0e\u6700\u5c0f\u652f\u6491\u6811"),(0,r.kt)("p",null,"\u4e00\u9897\u5e26\u6743\u7f51\u7edc\u901a\u5e38\u4f1a\u6709\u591a\u9897\u652f\u6491\u6811\uff0c\u4f46\u662f\u6570\u91cf\u6709\u9650\uff0c\u56e0\u6b64\u80af\u5b9a\u4f1a\u6709\u4e00\u9897\u6700\u5c0f\u652f\u6491\u6811\uff0c\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u552f\u4e00\u3002"),(0,r.kt)("h2",{id:"prime\u7b97\u6cd5"},"Prime\u7b97\u6cd5"),(0,r.kt)("h3",{id:"\u5272cut-\u548c-\u8de8\u8fb9cross"},"\u5272(cut) \u548c \u8de8\u8fb9(cross)"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u62d3\u6251\u56fe ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"G=(V;E)")),"\uff0c\u9876\u70b9 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"V"))," \u7684\u4efb\u4e00\u975e\u5e73\u51e1\u5b50\u96c6U\u53ca\u5176\u8865\u96c6 ",(0,r.kt)("strong",{parentName:"p"},"V/U"),"\u4e4b\u95f4\u4f1a\u6784\u6210\u4e00\u4e2a\u5272(cut)\uff0c\u8bb0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"(U: V/U)")),"\u3002\u5982\u679c\u6ee1\u8db3 u\u5c5e\u4e8eU\uff0cv\u4e0d\u5c5e\u4e8eU\uff0c\u90a3\u4e48uv\u5c31\u662f\u8be5cut\u7684\u4e00\u6761\u8de8\u8fb9\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Prim"),"\u7b97\u6cd5\u6b63\u786e\u6027\uff1a\u6700\u5c0f\u652f\u6301\u6811\u603b\u662f\u4f1a\u91c7\u7528\u8054\u63a5\u6bcf\u4e00\u5272\u7684\u6700\u77ed\u8de8\u8fb9\u3002\u56e0\u6b64\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u4e0d\u65ad\u5730\u8054\u63a5\u6240\u6709\u6700\u77ed\u8de8\u8fb9\u3002"),(0,r.kt)("h2",{id:"krusal"},"Krusal"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u6700\u5c0f\u652f\u6491\u6811\u63d0\u51fa\u4e86\u53e6\u4e00\u79cd\u89e3\u6cd5\uff0c\u9700\u8981\u4f7f\u7528\u5230 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"union-find")),"\u3002\u601d\u60f3\u662f\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6240\u6709\u8fb9\uff0c\u7b2c\u4e00\u77ed\uff0c\u7b2c\u4e8c\u77ed\u80af\u5b9a\u4f1a\u52a0\u5165\u6700\u5c0f\u652f\u6491\u6811\uff0c\u4f46\u662f\u7b2c\u4e09\u77ed\u7684\u672a\u5fc5\uff0c\u56e0\u6b64\u9700\u8981\u8003\u8651\uff0c\u5982\u679c\u7b2c\u4e09\u77ed\u548c\u5df2\u7ecf\u5f62\u6210\u7684\u6700\u5c0f\u652f\u6491\u6811\u90e8\u5206\u6709\u76f8\u540c\u7684\u4ea4\u70b9\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u52a0\u5165\uff0c\u5426\u5219\u4f1a\u6709\u73af(loop)\u3002\u5224\u65ad\u662f\u5426\u6709\u73af\uff0c\u5c31\u662f\u53ef\u4ee5\u91c7\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"union-find"),"\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e5f\u662f\u4e00\u79cd\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u6bcf\u6b21\u53d6\u6700\u77ed\u7684\uff0c\u4f46\u662f\u4e0d\u80fd\u6709\u73af\uff0c\u6240\u5f97\u7ed3\u679c\u4e5f\u4e0d\u552f\u4e00\u3002"))}c.isMDXComponent=!0},17959:function(a,n,e){"use strict";n.Z=e.p+"assets/images/98ee6782654518e1a33852e99825f1537869a542ee26738cf02d5fb6f0f0a899-\u65e0\u6807\u9898-881988e4cbf639b6f10c1e618e09deb8.png"},19521:function(a,n,e){"use strict";n.Z=e.p+"assets/images/image-20201026205238443-54859ffdff38852d21630365615aa5dc.png"},17602:function(a,n,e){"use strict";n.Z=e.p+"assets/images/image-20210925200723775-db336a2186b5511f1a6db059ff266d00.png"},82040:function(a,n,e){"use strict";n.Z=e.p+"assets/images/image-20210925200739033-ad5a6ee64320a5e6b5b1337057301411.png"},20157:function(a,n,e){"use strict";n.Z=e.p+"assets/images/image-20210925200751407-f5545f70f97fa0729b07309698ce2cb7.png"},79249:function(a,n,e){"use strict";n.Z=e.p+"assets/images/image-20210925202244562-b988446a350d8bc4af7a3f91736002b6.png"}}]);