(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4837],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var d=a.createContext({}),c=function(n){var e=a.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=c(n.components);return a.createElement(d.Provider,{value:e},n.children)},o={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,d=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),s=c(t),m=r,k=s["".concat(d,".").concat(m)]||s[m]||o[m]||l;return t?a.createElement(k,i(i({ref:e},u),{},{components:t})):a.createElement(k,i({ref:e},u))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=s;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=n,p.mdxType="string"==typeof n?n:r,i[1]=p;for(var c=2;c<l;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},3493:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return o}});var a=t(22122),r=t(19756),l=(t(67294),t(3905)),i=["components"],p={id:"A2.Cimprove",title:"A2.Cimprove","typora-root-url":"../"},d={unversionedId:"Programming_Language/A2.Cimprove",id:"Programming_Language/A2.Cimprove",isDocsHomePage:!1,title:"A2.Cimprove",description:"[TOC]",source:"@site/docs/4.Programming_Language/A2.C-improve.md",sourceDirName:"4.Programming_Language",slug:"/Programming_Language/A2.Cimprove",permalink:"/Programming_Language/A2.Cimprove",editUrl:"https://github.com/worst0/wiki_note/edit/main/docs/4.Programming_Language/A2.C-improve.md",version:"current",lastUpdatedAt:1624240624,formattedLastUpdatedAt:"6/21/2021",frontMatter:{id:"A2.Cimprove",title:"A2.Cimprove","typora-root-url":"../"},sidebar:"Document\ud83d\udcbb",previous:{title:"A1.CBasic",permalink:"/Programming_Language/A1.CBasic"},next:{title:"A3.C\u8bed\u8a00\u6280\u5de7",permalink:"/Programming_Language/A3.C\u8bed\u8a00\u6280\u5de7"}},c=[{value:"C-improve",id:"c-improve",children:[]},{value:"\u57fa\u7840\u77e5\u8bc6",id:"\u57fa\u7840\u77e5\u8bc6",children:[{value:"<code>for</code>\u7684\u6267\u884c\u8fc7\u7a0b",id:"for\u7684\u6267\u884c\u8fc7\u7a0b",children:[]},{value:"\u8f93\u5165\u8f93\u51fa\u51fd\u6570",id:"\u8f93\u5165\u8f93\u51fa\u51fd\u6570",children:[]},{value:"\u5b8f\u5b9a\u4e49",id:"\u5b8f\u5b9a\u4e49",children:[]},{value:"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u987a\u5e8f",id:"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u987a\u5e8f",children:[]},{value:"\u4f4d\u8fd0\u7b97\u4ea4\u6362",id:"\u4f4d\u8fd0\u7b97\u4ea4\u6362",children:[]},{value:"\u4f30\u7b97\u4e00\u4e2a\u9898\u7684\u4e0a\u754c",id:"\u4f30\u7b97\u4e00\u4e2a\u9898\u7684\u4e0a\u754c",children:[]},{value:"\u5206\u652f\u9884\u6d4b",id:"\u5206\u652f\u9884\u6d4b",children:[]}]},{value:"\u51fd\u6570",id:"\u51fd\u6570",children:[{value:"\u9012\u5f52\u8ba4\u8bc6",id:"\u9012\u5f52\u8ba4\u8bc6",children:[]},{value:"\u51fd\u6570\u6307\u9488",id:"\u51fd\u6570\u6307\u9488",children:[]},{value:"\u53d8\u53c2\u51fd\u6570",id:"\u53d8\u53c2\u51fd\u6570",children:[]},{value:"name_20-9",id:"name_20-9",children:[]},{value:"my_printf",id:"my_printf",children:[]}]},{value:"\u6570\u7ec4",id:"\u6570\u7ec4",children:[{value:"\u7d20\u6570\u7b5b",id:"\u7d20\u6570\u7b5b",children:[]},{value:"\u4e8c\u5206\u67e5\u627e",id:"\u4e8c\u5206\u67e5\u627e",children:[]},{value:"\u725b\u987f\u8fed\u4ee3",id:"\u725b\u987f\u8fed\u4ee3",children:[]}]},{value:"\u5b8f\u5b9a\u4e49",id:"\u5b8f\u5b9a\u4e49-1",children:[{value:"==<strong>\u4ee3\u7801\u66ff\u6362</strong>==",id:"\u4ee3\u7801\u66ff\u6362",children:[]},{value:"\u5b8f\u7684\u5e94\u7528",id:"\u5b8f\u7684\u5e94\u7528",children:[]},{value:"\u9884\u5b9a\u4e49\u7684\u5b8f",id:"\u9884\u5b9a\u4e49\u7684\u5b8f",children:[]},{value:"\u6761\u4ef6\u5f0f\u7f16\u8bd1",id:"\u6761\u4ef6\u5f0f\u7f16\u8bd1",children:[]},{value:"\u9884\u5904\u7406\u547d\u4ee4",id:"\u9884\u5904\u7406\u547d\u4ee4",children:[]},{value:"MAX",id:"max",children:[]},{value:"LOG",id:"log",children:[]}]},{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",children:[{value:"string",id:"string",children:[]}]},{value:"\u590d\u6742\u7ed3\u6784",id:"\u590d\u6742\u7ed3\u6784",children:[{value:"\u7ed3\u6784\u4f53",id:"\u7ed3\u6784\u4f53",children:[]},{value:"\u5171\u7528\u4f53",id:"\u5171\u7528\u4f53",children:[]}]},{value:"\u6307\u9488",id:"\u6307\u9488",children:[{value:"\u6808\u5b58\u50a8\uff0c\u5927\u5c0f\u7aef",id:"\u6808\u5b58\u50a8\uff0c\u5927\u5c0f\u7aef",children:[]},{value:"\u5730\u5740\u504f\u79fb\u91cf",id:"\u5730\u5740\u504f\u79fb\u91cf",children:[]},{value:"typedef",id:"typedef",children:[]},{value:"main\u51fd\u6570\u53c2\u6570",id:"main\u51fd\u6570\u53c2\u6570",children:[]}]},{value:"\u5de5\u7a0b\u5f00\u53d1",id:"\u5de5\u7a0b\u5f00\u53d1",children:[{value:"\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49",id:"\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49",children:[]},{value:"\u51fd\u6570\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6",id:"\u51fd\u6570\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6",children:[]},{value:"\u9759\u6001\u94fe\u63a5\u5e93",id:"\u9759\u6001\u94fe\u63a5\u5e93",children:[]}]},{value:"haizei_test\u81ea\u5236\u5355\u5143\u6d4b\u8bd5",id:"haizei_test\u81ea\u5236\u5355\u5143\u6d4b\u8bd5",children:[{value:"GNU\u7684\u5c5e\u6027\uff08attribute\uff09",id:"gnu\u7684\u5c5e\u6027\uff08attribute\uff09",children:[]},{value:"1.\u521d\u7248\u6d4b\u8bd5\u6846\u67b6",id:"1\u521d\u7248\u6d4b\u8bd5\u6846\u67b6",children:[]},{value:"2.\u8f93\u51fa\u989c\u8272\u4e0e\u683c\u5f0f\u4fe1\u606f",id:"2\u8f93\u51fa\u989c\u8272\u4e0e\u683c\u5f0f\u4fe1\u606f",children:[]},{value:"3.\u8f93\u51fa\u7edf\u8ba1\u4fe1\u606f",id:"3\u8f93\u51fa\u7edf\u8ba1\u4fe1\u606f",children:[]},{value:"4.\u8f93\u51fa\u9519\u8bef\u4fe1\u606f",id:"4\u8f93\u51fa\u9519\u8bef\u4fe1\u606f",children:[]},{value:"5.\u94fe\u8868\u5916\u9aa8\u9abc",id:"5\u94fe\u8868\u5916\u9aa8\u9abc",children:[]},{value:"makefile\u6587\u4ef6",id:"makefile\u6587\u4ef6",children:[]},{value:"test.h",id:"testh",children:[]},{value:"test.c",id:"testc",children:[]},{value:"linklist.h",id:"linklisth",children:[]}]},{value:"\u6587\u4ef6\u64cd\u4f5c",id:"\u6587\u4ef6\u64cd\u4f5c",children:[]},{value:"\u8ba1\u849c\u8bfe\u5de5\u7a0b",id:"\u8ba1\u849c\u8bfe\u5de5\u7a0b",children:[{value:"\u7b80\u5355\u547d\u4ee4\u7684\u5b9e\u73b0",id:"\u7b80\u5355\u547d\u4ee4\u7684\u5b9e\u73b0",children:[]},{value:"\u81ea\u5236\u7b80\u6613OJ",id:"\u81ea\u5236\u7b80\u6613oj",children:[]}]},{value:"==makefile\u6587\u4ef6==",id:"makefile\u6587\u4ef6-1",children:[]},{value:"==gcc/g++==",id:"gccg",children:[]},{value:"\u968f\u673a\u6570",id:"\u968f\u673a\u6570",children:[]},{value:"\u5de6\u503c\uff0c\u53f3\u503c",id:"\u5de6\u503c\uff0c\u53f3\u503c",children:[]},{value:"\u4e8c\u5206\u6cd5",id:"\u4e8c\u5206\u6cd5",children:[]},{value:"\u6253\u5370\u989c\u8272",id:"\u6253\u5370\u989c\u8272",children:[]},{value:"\u4fee\u9970\u7b26",id:"\u4fee\u9970\u7b26",children:[]}],u={toc:c};function o(n){var e=n.components,p=(0,r.Z)(n,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,p,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"[TOC]"),(0,l.kt)("h2",{id:"c-improve"},"C-improve"),(0,l.kt)("h2",{id:"\u57fa\u7840\u77e5\u8bc6"},"\u57fa\u7840\u77e5\u8bc6"),(0,l.kt)("h3",{id:"for\u7684\u6267\u884c\u8fc7\u7a0b"},(0,l.kt)("inlineCode",{parentName:"h3"},"for"),"\u7684\u6267\u884c\u8fc7\u7a0b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"{\n    \u521d\u59cb\u5316\u8bed\u53e5\n    while ( \u6761\u4ef6 ) {\n        \u8bed\u53e5\n        \u8fed\u4ee3\u8868\u8fbe\u5f0f ;\n    }\n}\n")),(0,l.kt)("h4",{id:"\u65e0\u6761\u4ef6\u8df3\u8f6c"},"\u65e0\u6761\u4ef6\u8df3\u8f6c"),(0,l.kt)("p",null,"\u65e0\u6761\u4ef6\u8df3\u8f6c: break, continue, gotoprintf\u3001scanf\u62d3\u5c55"),(0,l.kt)("p",null,"goto \u4ec5\u5728\u51fd\u6570\u5185\u8df3\u8f6c\uff0c\u5e38\u2f64\u7528\u4e8e\u8df3\u51fa\u5d4c\u5957\u5faa\u73af\u3002\u5982\u679c\u5728\u51fd\u6570\u5916\u8df3\u8f6c\uff0c\u53ef\u4f7f\u2f64\u7528 longjmp\u3002"),(0,l.kt)("p",null,"setjmp \u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u76f8\u5173\u4fe1\u606f (\u5806\u6808\u5e27\u3001\u5bc4\u5b58\u5668\u7b49) \u4fdd\u5b58\u5230 jmp_buf \u7ed3\u6784\u4e2d\uff0c\u5e76\u8fd4\u56de 0\u3002\u5f53\u540e\u7eed\u4ee3\n\u7801\u6267\u2f8f\u884c longjmp \u8df3\u8f6c\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u2f00\u4e00\u4e2a\u72b6\u6001\u7801\u3002\u4ee3\u7801\u6267\u2f8f\u884c\u7eea\u5c06\u8fd4\u56de setjmp \u5904\uff0c\u5e76\u8fd4\u56de longjmp\u6240\u63d0\u4f9b\u7684\u72b6\u6001\u7801\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <setjmp.h>\nvoid test(jmp_buf *env)\n{\n    printf("1....\\n");\n    longjmp(*env, 10);\n}\nint main(int argc, char *argv[])\n{\n    jmp_buf env;\n    int ret = setjmp(env);\n        // \u6267\u2f8f\u884c longjmp \u5c06\u8fd4\u56de\u8be5\u4f4d\u7f6e\uff0cret \u7b49\u4e8e longjmp \u6240\u63d0\u4f9b\u7684\u72b6\u6001\u7801\u3002\n    if (ret == 0) {\n        test(&env);\n    } else {\n        printf("2....(%d)\\n", ret);\n    }\n    return EXIT_SUCCESS;\n}\n//\u8f93\u51fa : 1.... 2....(10)\n')),(0,l.kt)("h3",{id:"\u8f93\u5165\u8f93\u51fa\u51fd\u6570"},"\u8f93\u5165\u8f93\u51fa\u51fd\u6570"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"printf")," \u51fd\u6570 \uff1b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int printf(const char *format, ...);   //\u539f\u578b\uff1a\n")),(0,l.kt)("p",null,"\u200b\t",(0,l.kt)("inlineCode",{parentName:"p"}," format"),"\uff1a\u683c\u5f0f\u63a7\u5236",(0,l.kt)("strong",{parentName:"p"},"\u5b57\u7b26\u4e32"),"\uff1b\n\u200b    \t",(0,l.kt)("inlineCode",{parentName:"p"},"...")," :\u53ef\u53d8\u53c2\u6570\u5217\u8868\uff1b\u8fd4\u56de\u503c\uff1a\u8f93\u51fa\u5b57\u7b26\u7684\u4e2a\u6570\uff1b"),(0,l.kt)("p",null,"\u200b    ",(0,l.kt)("inlineCode",{parentName:"p"},'printf("%2.2d\\n", n);  '),"  %","*",".*d;%g \u66f4\u4eba\u6027\u5316"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"printf()\u51fd\u6570\u91cc\u8981\u8f93\u51fa\u7684\u5404\u53d8\u91cf\u8868\u8fbe\u5f0f\u662f\u4ece\u53f3\u5f80\u5de6\u987a\u5e8f\u6267\u884c\u7684!")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sprintf"),"  : string printf")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'int sprintf(char *string, char *format [,argument,...]);    //\u539f\u578b\n  sprintf(information,"%s. He is %d-year-old",gender,age);  //\u5b9e\u4f8b\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fprintf")," : file printf")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"scanf"),"\u51fd\u6570\uff1b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int scanf(const char *format, ...);   //\u539f\u578b\uff1a\n")),(0,l.kt)("p",null,"\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8bfb\u5165\u7684\u53c2\u6570\u4e2a\u6570; \u5faa\u73af\u8bfb\u5165:",(0,l.kt)("inlineCode",{parentName:"p"},'while(scanf("")! = EOF)'),"\uff0cEOF = -1\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"EOF = end of file"),"   \uff1b"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5b57\u7b26\u5339\u914d\u96c6(\u6b63\u5219\u8868\u8fbe\u5f0f)")),(0,l.kt)("p",null," \t",(0,l.kt)("inlineCode",{parentName:"p"},"%[^\\n]s"),"  \u5339\u914d[]\u5185\u7684\u5185\u5bb9;  "),(0,l.kt)("p",null,"\u200b\t ","[\\^\\n]"," \u5f02\u6216\\n:\u5339\u914d\u9664\u4e86\\n,\u4efb\u610f\u5b57\u7b26\u90fd\u5f53\u505a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53bb\u8bfb\u5165\u5305\u62ec\u7a7a\u683c. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\nint main() {\n    char str[100] = {0};\n    int ret;                                 \n    //\u6570\u636e\u4ee5\u6d41\u7684\u65b9\u5f0f\u8bfb\u5165, \u627ebug \u53ef\u901a\u8fc7\u91cd\u5b9a\u5411  > output\n    while ((ret = scanf("%[^\\n]s", str)) != EOF) {  //\u4f8b\u5982\u8f93\u5165 hello world\\n    \u68c0\u67e5\u5b57\u7b26\u7684\u6307\u9488\u4f1a\u4e00\u76f4\u505c\u5728 \\n, \u7b2c\u4e00\u6b21 scanf\u8fd4\u56de\u503c\u4e3a1,\u4ee5\u540e\u5747\u4e3a0,\u6240\u4ee5\u4f1a\u6301\u7eed\u8f93\u51fa hello world\n        getchar();  //\u5f3a\u5236\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26,\u6b64\u5904\u4e3a\u4e86\u8bfb\u5165\\n,\u7ed3\u675f\n        printf(" has %d digits\\n", printf("%s", str));\n    }\n    return 0;\n}\n')),(0,l.kt)("h3",{id:"\u5b8f\u5b9a\u4e49"},"\u5b8f\u5b9a\u4e49"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"#define swap(a, b) {\\                 //  \\ \u4e3a\u8fde\u63a5\u7b26,\u8fde\u6210\u4e00\u884c , \u5b8f\u5728\u9884\u5904\u7406\u9636\u6bb5\u8fdb\u884c\n    --typeof(a)__temp = a;\\\n    a = b; b = --temp; \\\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sprintf"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"fprintf")," \u6f14\u793a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#define swap(a, b) {\\\n    __typeof(a) __temp = a;\\\n    a = b; b = __temp;\\\n}\nint main() {\n    int n;\n    scanf("%d", &n); //stdin\n    printf("%d\\n", n); //stdout  stderr\n    char str[100] = {0}, buffer[100] = {0}, *p = str, *q = buffer;\n    sprintf(str, "%d.%d.%d.%d", 192, 168, 1, 10); // 192 168 1 10\n    printf("str = %s\\n", str);\n    if (n & 1) {\n        sprintf(q, "(%s)", p);\n        swap(q, p);\n    }\n    if (n & 2) {\n        sprintf(q, "[%s]", p);\n        swap(q, p);\n    }\n    if (n & 4) {\n        sprintf(q, "{%s}", p);\n        swap(q, p);\n    }\n    printf("%s\\n", p);\n    FILE *fout = fopen("output", "w");  // r    a+   \u8bfb\u5199\u8ffd\u52a0\n    fprintf(stdout, "stdout = %s\\n", p);\n    fprintf(stderr, "stderr = %s\\n", p);   //\u5728\u8f93\u51fa\u91cd\u5b9a\u5411\u65f6,stdout\u4f1a\u91cd\u5b9a\u5411,stderr\u4e0d\u4f1a\u91cd\u5b9a\u5411,\u800c\u4f1a\u6253\u5370\u5728\u7ec8\u7aef.\n    return 0;\n}\n')),(0,l.kt)("h3",{id:"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u987a\u5e8f"},"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u987a\u5e8f"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(*p)--"),";",(0,l.kt)("inlineCode",{parentName:"p"},"--*p"),";"),(0,l.kt)("blockquote",null,(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u521d\u7b49\u5355\u76ee\u4e00\u4e8c\u7ea7\uff0c // \u521d\u7b49\u8fd0\u7b97\u7b26",(0,l.kt)("inlineCode",{parentName:"p"},"[]().->"),"\u548c\u5355\u76ee\u8fd0\u7b97\u7b26\u5206\u522b\u662f\u7b2c1\u30012\u4f18\u5148\u7ea7")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u4e58\u9664\u6c42\u4f59\u52a0\u51cf\u79fb\uff0c // \u8fd9\u53e5\u91cc\u9762\u7684\u8fd0\u7b97\u7b26\u5168\u5f52\u4e3a\u7b97\u672f\u8fd0\u7b97\u7b26\uff0c\u79fb\u8868\u793a\u79fb\u4f4d")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5173\u7cfb\u7b49\u4e8e\u4e0d\u7b49\u4e8e\uff0c // \u5173\u7cfb\u8fd0\u7b97\u7b26\uff08<  <=  >  >=\uff09")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u6309\u4f4d\u4e0e\u6765\u5f02\u6216\u6216\uff0c // \u4f4d\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u987a\u5e8f: & -> ^ -> |")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u903b\u8f91\u4e0e\u6216\u6761\u4ef6\u5f31\uff0c // \u903b\u8f91\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u987a\u5e8f: && -> ||\uff0c\u540e\u9762\u8ddf\u7740\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e(\u5f31)\u7684\u6761\u4ef6\u8fd0\u7b97\u7b26")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u8d4b\u503c\u9017\u53f7\u4e00\u70b9\u7834\u3002 // \u8d4b\u503c\uff0c\u9017\u53f7\u6700\u4f4e\uff1a\u9017\u53f7\u8fd0\u7b97\u7684\u7ed3\u5408\u6027\u662f\u4ece\u5de6\u81f3\u53f3\uff0c\u5b8c\u6bd5\u4e4b\u540e\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c"),(0,l.kt)("p",{parentName:"li"},"\u5355\u76ee\uff0c\u6761\u4ef6\uff0c\u8d4b\u503c\uff0c\u53f3\u5230\u5de6")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7b26\u53f7"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ed3\u5408\u5f8b"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u540e\u7f6e\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"[]\u3001func()\u3001.\u3001->\u3001(type){init}"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u2f00\u5143\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"++\u3001--\u3001!\u3001~\u3001+\u3001-\u3001*\u3001&\u3001sizeof"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u53f3\u5230\u5de6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u8f6c\u6362\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"(type name)"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u53f3\u5230\u5de6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u4e58\u9664\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"*\u3001/\u3001%"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u52a0\u51cf\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"+\u3001-"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u79fb\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"<<\u3001>>"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u5173\u7cfb\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"<\u3001<=\u3001>\u3001>="),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u76f8\u7b49\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"==\u3001!="),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"&"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"^"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"|"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u903b\u8f91\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"&&"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u903b\u8f91\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"|","|"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u6761\u4ef6\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"?:"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u53f3\u5230\u5de6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u8d4b\u503c\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},"=\u3001+=\u3001-=\u3001*=\u3001/=\u3001%=\u3001&=\u3001^=\u3001","|","=\u3001<<=\u3001>>="),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u53f3\u5230\u5de6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u9017\u53f7\u8fd0\u7b97\u7b26"),(0,l.kt)("td",{parentName:"tr",align:null},","),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ece\u5de6\u5230\u53f3")))),(0,l.kt)("p",null,"\u5f15\u8d77\u8bef\u89e3\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'(1) "." \u4f18\u5148\u7ea7\u2fbc\u9ad8\u4e8e "*"\u3002\n\u539f\u578b: *p.f\n\u8bef\u5224: (*p).f\n\u5b9e\u9645: *(p.f)\u3002\n(2) "[]" \u2fbc\u9ad8\u4e8e "*"\u3002\n\u539f\u578b: int *ap[]\n\u8bef\u5224: int (*ap)[]\n\u5b9e\u9645: int *(ap[])\n(3) "==" \u548c "!=" \u2fbc\u9ad8\u4e8e\u4f4d\u64cd\u4f5c\u7b26\u3002\n\u539f\u578b: val & mask != 0\n\u8bef\u5224: (val & mask) != 0\n\u5b9e\u9645: val & (mask != 0)\n(4) "==" \u548c "!=" \u2fbc\u9ad8\u4e8e\u8d4b\u503c\u7b26\u3002\n\u539f\u578b: c = getchar() != EOF\n\u8bef\u5224: (c = getchar()) != EOF\n\u5b9e\u9645: c = (getchar() != EOF)\n(5) \u7b97\u672f\u8fd0\u7b97\u7b26\u2fbc\u9ad8\u4e8e\u4f4d\u79fb\u8fd0\u7b97\u7b26\u3002\n\u539f\u578b: msb << 4 + lsb\n\u8bef\u5224: (msb << 4) + lsb\n\u5b9e\u9645: msb << (4 + lsb)\n')),(0,l.kt)("h3",{id:"\u4f4d\u8fd0\u7b97\u4ea4\u6362"},"\u4f4d\u8fd0\u7b97\u4ea4\u6362"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"a ^= b;\nb ^= a;\na ^= b;\n")),(0,l.kt)("h3",{id:"\u4f30\u7b97\u4e00\u4e2a\u9898\u7684\u4e0a\u754c"},"\u4f30\u7b97\u4e00\u4e2a\u9898\u7684\u4e0a\u754c"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200505172052330",src:t(38745).Z})),(0,l.kt)("h3",{id:"\u5206\u652f\u9884\u6d4b"},"\u5206\u652f\u9884\u6d4b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"!!x"),"\uff1a\u5f52\u4e00\u5316"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define likely(x)    __builtin_expect( !!(x), 1) //\u4ee3\u8868x\u7ecf\u5e38\u6210\u7acb\uff0c\u52a0\u8f7d\u6761\u4ef6\u5206\u652f\u5185\u90e8\u7684\u4ee3\u7801\n#define unlikely(x)  __builtin_expect( !!(x), 0) //\u4ee3\u8868x\u4e0d\u7ecf\u5e38\u6210\u7acb\uff0c\u52a0\u8f7d\u6761\u4ef6\u5206\u652f\u5185\u90e8\u7684\u4ee3\u7801\n")),(0,l.kt)("p",null,"cpu --\x3e \u7f13\u5b58 cache --\x3e \u5185\u5b58--\x3e\u5916\u5b58"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e32\u884c\u6267\u884c"),(0,l.kt)("li",{parentName:"ul"},"\u5e76\u884c\u6267\u884c")),(0,l.kt)("p",null,"\u5c3d\u91cf\u5c11\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"if else; switch case"),"(\u987a\u5e8f\u6267\u884c);"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u5206\u652f\u673a\u6784\uff0c\u5206\u652f\u9884\u6d4b\u53ef\u4ee5\u5f15\u5bfcCPU\uff0c\u63d0\u9ad8\u6548\u7387"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200503154422346",src:t(43786).Z})),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200503155006257",src:t(29083).Z})),(0,l.kt)("h2",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,l.kt)("p",null,'\u51fd\u6570\u53ea\u80fd\u88ab\u5b9a\u4e49\u2f00\u4e00\u6b21\uff0c\u4f46\u53ef\u4ee5\u88ab\u591a\u6b21 "\u58f0\u660e" \u548c "\u8c03\u7528"\u3002'),(0,l.kt)("p",null,"gcc \u2f40\u652f\u6301\u5d4c\u5957\u51fd\u6570\u6269\u5c55\u3002"),(0,l.kt)("p",null,'\u5185\u5c42\u51fd\u6570\u53ef\u4ee5 "\u8bfb\u5199" \u5916\u5c42\u51fd\u6570\u7684\u53c2\u6570\u548c\u53d8\u91cf\uff0c\u5916\u5c42\u53d8\u91cf\u5fc5\u987b\u5728\u5185\u5d4c\u51fd\u6570\u4e4b\u524d\u5b9a\u4e49\u3002'),(0,l.kt)("h3",{id:"\u9012\u5f52\u8ba4\u8bc6"},"\u9012\u5f52\u8ba4\u8bc6"),(0,l.kt)("p",null,"\u200b    \u9012\u5f52\u7a0b\u5e8f\uff1a\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\uff0c\u662f\u7f16\u7a0b\u6280\u5de7\uff0c\u800c\u975e\u7b97\u6cd5"),(0,l.kt)("p",null,"\u200b\t\u4f20\u5165\u53c2\u6570\uff0c\u4f20\u51fa\u53c2\u6570"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u4e00\u4e2a\u660e\u786e\u7684\u8bed\u4e49\u4fe1\u606f"),(0,l.kt)("li",{parentName:"ol"},"\u8fb9\u754c\u6761\u4ef6\u5904\u7406"),(0,l.kt)("li",{parentName:"ol"},"\u5904\u7406\u548c\u9012\u5f52\u8fc7\u7a0b"),(0,l.kt)("li",{parentName:"ol"},"\u8fd4\u56de\u7ed3\u679c\u6cd5")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6570\u5b66\u5f52\u7eb3\u6cd5")),(0,l.kt)("h3",{id:"\u51fd\u6570\u6307\u9488"},"\u51fd\u6570\u6307\u9488"),(0,l.kt)("p",null,"\u5e2e\u52a9\u6211\u4eec\u5b9a\u4e49\u5206\u6bb5\u51fd\u6570"),(0,l.kt)("p",null,'\u533a\u5206\u5b9a\u4e49 "\u51fd\u6570\u7c7b\u578b" \u548c "\u51fd\u6570\u6307\u9488 \u7c7b\u578b"\u7684\u533a\u522b\u3002\u51fd\u6570\u540d\u662f\u2f00\u4e00\u4e2a\u6307\u5411\u5f53\u524d\u51fd\u6570\u7684\u6307\u9488\u3002'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef void(func_t)(); // \u51fd\u6570\u7c7b\u578b\ntypedef void(*func_ptr_t)(); // \u51fd\u6570\u6307\u9488\u7c7b\u578b\nvoid test()\n{\n    printf("%s\\n", __func__);\n}\nint main(int argc, char* argv[])\n{\n    func_t* func = test; // \u58f0\u660e\u2f00\u4e00\u4e2a\u6307\u9488\n    func_ptr_t func2 = test; // \u5df2\u7ecf\u662f\u6307\u9488\u7c7b\u578b\n    void (*func3)(); // \u58f0\u660e\u2f00\u4e00\u4e2a\u5305\u542b\u51fd\u6570\u539f\u578b\u7684\u51fd\u6570\u6307\u9488\u53d8\u91cf\n    func3 = test;\n    func();\n    func2();\n    func3();\n    return 0\n}\n')),(0,l.kt)("h3",{id:"\u53d8\u53c2\u51fd\u6570"},"\u53d8\u53c2\u51fd\u6570"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int func(int num,...);"),"  \u7701\u7565\u53f7"),(0,l.kt)("p",null,"va_list arg;  //\u5b9a\u4e49\u4e00\u4e2a\u4ee3\u8868\u53c2\u6570\u5217\u8868\u7684\u53d8\u91cf\uff0c\u83b7\u53d6\u53c2\u6570\u5217\u8868"),(0,l.kt)("p",null,"\u5728\u6807\u51c6\u7684C\u4e2d\uff0cva_start\u63a5\u53d7\u4e00\u4e2a\u989d\u5916\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u3010\u56fa\u5b9a\u53c2\u6570\u3011\u7684\u540d\u79f0"),(0,l.kt)("p",null," va_end(arg);   //\u9500\u6bc1\u53c2\u6570\u5217\u8868\uff0c\u7ed3\u675f\u6574\u4e2a\u83b7\u53d6\u53ef\u53d8\u53c2\u6570\u5217\u8868\u7684\u52a8\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include  <cstdio>\n#include  <inttypes.h>\n#include  <stdarg.h>   //va_list\u7b49\u7684\u51fd\u6570\u5e93\n\nint max_int(int n, ...) {\n    int ans = INT32_MIN, temp;\n    va_list arg;  //\u5b9a\u4e49\u4e00\u4e2a\u4ee3\u8868\u53c2\u6570\u5217\u8868\u7684\u53d8\u91cf\uff0c\u83b7\u53d6\u53c2\u6570\u5217\u8868\n   va_start(arg, n);   //\u521d\u59cb\u5316\u53c2\u6570\u5217\u8868\uff0c\u8bfb\u53d6  n    \u4e2a\u53c2\u6570\n  /*   void va_start( va_list ap, parmN );\nva_start \u5b8f\u4f7f\u51fd\u6570\u80fd\u8bbf\u95ee\u540e\u968f\u5177\u540d\u53c2\u6570 parmN \u7684\u53ef\u53d8\u53c2\u6570\u3002\n\u5e94\u8be5\u5728\u4efb\u4f55\u5bf9 va_arg \u7684\u8c03\u7528\u524d\uff0c\u4ee5\u5408\u6cd5\u7684 va_list \u5bf9\u8c61 ap \u8c03\u7528 va_start \u3002\nap  -   va_list \u7c7b\u578b\u5b9e\u4f8b\nparmN   -   \u9996\u4e2a\u53ef\u53d8\u53c2\u6570\u524d\u7684\u53c2\u6570\u540d\n */\n  while (n--) {\n        temp = va_arg(arg, int);   //va_arg\u662f\u5b8f\uff0c \u83b7\u53d6\u4e0b\u4e00\u4e2a\u53c2\u6570\n        if (temp > ans) ans = temp;\n    }\n    va_end(arg);   //\u9500\u6bc1\u53c2\u6570\u5217\u8868\uff0c\u7ed3\u675f\u6574\u4e2a\u83b7\u53d6\u53ef\u53d8\u53c2\u6570\u5217\u8868\u7684\u52a8\u4f5c\n    return ans;\n}\n\nint main() {\n    printf("%d\\n", max_int(3, 1, 8, 4));\n    printf("%d\\n", max_int(2, 1, 8));\n    printf("%d\\n", max_int(4, 1, 5, 4, 8, 111));\n    return 0;\n}\n\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'\n#define log(frm, args...) {\\\n    printf("[%s : %d] %s ", __func__, __LINE__, #args);\\\n    printf(frm, ##args);\\\n    printf("\\n");\\\n}\n\n')),(0,l.kt)("p",null,"va_arg\u5219\u901a\u8fc7\u6539\u53d8\u6307\u9488\u7684\u65b9\u5f0f\uff08\u6bcf\u6b21\u589e\u52a0sizeof(double)\u5b57\u8282\uff09\u6765\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002"),(0,l.kt)("h3",{id:"name_20-9"},"name_20-9"),(0,l.kt)("p",null,"\u5b66\u4e60",(0,l.kt)("inlineCode",{parentName:"p"},"int main(argc, *argv[])"),"  ",(0,l.kt)("inlineCode",{parentName:"p"},"sprintf"),"  ",(0,l.kt)("inlineCode",{parentName:"p"},"rand()    srand")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <time.h>\n#include <cstdlib>\n#include <string.h>\nusing namespace std;\n#define max_n 16\n\nchar name[max_n][20] = {};\nint mark[max_n] = {0};\nvoid output_name(int n) {\n    if(n > 16) {\n        printf("ERROR\\n");\n        return ;\n    }\n    srand(time(0));\n    int index;\n    for (int i = 0; i < n; ) {\n        index = rand() % max_n;\n        if (mark[index]) continue;\n        printf("%s ", name[index]);\n        ++i;\n        mark[index] = 1;\n    }\n    printf("\\n");\n    return ;\n}\n\nint str_to_int(char str[]) {\n    int n = strlen(str);    //\u53ef\u4e0d\u7528strlen\n    int sum =  0, i = 0;\n    while(n--) {\n        sum *= 10;\n        sum += str[i++] - \'0\';\n    }\n    return sum;\n}\n\nint main(int argc, char *argv[]) {\n    char str[3] = {0};\n    if (argc < 2) {\n        output_name(1);\n    } else {\n        sprintf(str, "%s", argv[1]);\n        output_name((str_to_int(str)));\n    }\n    return 0;\n}\n\n')),(0,l.kt)("h3",{id:"my_printf"},"my_printf"),(0,l.kt)("p",null,"\u5173\u952e\u70b9\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u53d8\u53c2\uff0c\u4ee5\u53ca\u4f7f\u7528va")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6570\u5b57:0\u7684\u5904\u7406(digit),\u6b63\u8d1f,",(0,l.kt)("inlineCode",{parentName:"p"},"INT32_MIN"),"\u7ffb\u8f6c\u7684\u7f3a\u4f4d,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"int"),"\u6574\u578b\uff0c\u5b57\u7b26\u4e32\u7684\u63a5\u6536")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5b8f\u5b9a\u4e49"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdarg.h>\n#include <inttypes.h>\n\nint reverse_num(int num, int *temp) {\n    int digit = 0;\n    do {\n        *temp = *temp * 10 + num % 10;\n        num /= 10;\n        ++digit;\n    } while(num);\n    return digit;\n}\n\nint output_num(int num, int digit) {\n    int cnt = 0;\n    while (digit--) {\n        putchar(num % 10 + \'0\');\n        cnt++;\n        num /= 10;\n    }\n    return cnt;\n}\n\nint my_printf(const char *frm, ...) {\n    int cnt = 0;\n    #define PUTC(a) putchar(a), ++cnt;\n    va_list arg;\n    va_start(arg, frm);\n    for (int i = 0; frm[i]; i++) {\n        switch (frm[i]) {\n            case \'%\': {\n                switch (frm[++i]) {\n                    case \'%\': PUTC(frm[i]); break;\n                    case \'d\': {\n                        int xx = va_arg(arg, int);          //\u4f20\u6570\u636e\u7c7b\u578b\uff0cva_arg(arg, int)\u662f\u5b8f\u5b9a\u4e49\n                        uint32_t x;\n                        if (xx < 0){\n                            x = -xx;\n                            PUTC(\'-\');\n                        } else {\n                            x = xx;\n                        };\n                        int num1 = x / 100000, num2 = x % 100000;\n                        int temp1 = 0, temp2 = 0;\n                        int digit1 = reverse_num(num1, &temp1);\n                        int digit2 = reverse_num(num2, &temp2);\n                        if (num1) digit2 = 5;\n                        else digit1 = 0;\n                        cnt += output_num(temp1, digit1);\n                        cnt += output_num(temp2, digit2);\n                    }\n                    break;\n                    case \'s\':\n                        const char *str;\n                         str = va_arg(arg, const char *);\n                    for (int i = 0; str[i]; ++i) {\n                        PUTC(str[i]);\n                    }\n                }\n            } break;\n        \n            default : PUTC(frm[i]); break;\n        }\n    }\n    va_end(arg);\n    #undef PUTC\n    return cnt;\n}\n\nint main() {\n    char str[100] = "I don\'t want to be opbitimistic beforehand";\n    my_printf("int (-123) =  %d\\n", -123);\n    printf("INT32_MAX  =  %d\\n", INT32_MAX);\n    my_printf("INT32_MAX  =  %d\\n", INT32_MAX);\n    printf("INT32_MIN  =  %d\\n", INT32_MIN);\n    my_printf("INT32_MIN  =  %d\\n", INT32_MIN);\n    my_printf("%s\\n", str);\n    return 0;\n}\n\n')),(0,l.kt)("h2",{id:"\u6570\u7ec4"},"\u6570\u7ec4"),(0,l.kt)("h4",{id:"\u521d\u59cb\u5316\u89c4\u5219"},"\u521d\u59cb\u5316\u89c4\u5219:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u6570\u7ec4\u4e3a\u9759\u6001\u2f63\u751f\u5b58\u5468\u671f\uff0c\u90a3\u4e48\u521d\u59cb\u5316\u5668\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u63d0\u4f9b\u521d\u59cb\u5316\u5668\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u6570\u7ec4\u2ed3\u957f\u5ea6\uff0c\u7531\u521d\u59cb\u5316\u5668\u7684\u6700\u540e\u2f00\u4e00\u4e2a\u5143\u7d20\u51b3\u5b9a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u540c\u65f6\u63d0\u4f9b\u2ed3\u957f\u5ea6\u548c\u521d\u59cb\u5316\u5668\uff0c\u90a3\u4e48\u6ca1\u6709\u63d0\u4f9b\u521d\u59cb\u503c\u7684\u5143\u7d20\u90fd\u88ab\u521d\u59cb\u5316\u4e3a 0 \u6216 NULL\u3002")),(0,l.kt)("h4",{id:"\u6570\u7ec4\u53c2\u6570"},"\u6570\u7ec4\u53c2\u6570"),(0,l.kt)("p",null,"\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\uff0c\u603b\u662f\u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a\u6307\u5411\u6570\u7ec4\u7b2c\u2f00\u5143\u7d20\u7684\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u8bf4\u518d\u4e5f\u65e0\u6cd5\u2f64sizeof \u83b7\u5f97\u6570\u7ec4\u7684\u5b9e\u9645\u2ed3\u5ea6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'void test2(int x[]) { \\\\ int *x\n    printf("%d\\n", sizeof(x));\n}\nint main(int argc, char* argv[]) {\n    int x[] = { 1, 2, 3 };\n    printf("%d\\n", sizeof(x));\n    test(x);\n    test2(x);\n    return EXIT_SUCCESS;\n}\n\u8f93\u51fa:\n12\n4\n')),(0,l.kt)("h3",{id:"\u7d20\u6570\u7b5b"},"\u7d20\u6570\u7b5b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u62d3\u5c55\u6c42\u6bcf\u4e2a\u6570\u7684\u6700\u5927\u6700\u5c0f\u7d20\u56e0\u5b50\nvoid init_prime() {\n    int pos = 0;\n    for (int i = 2; i < SIZE; ++i) {\n        if (prime[i]) continue;\n        prime[++prime[0]] = i;   //prime[0]\u8bb0\u5f55\u4e2a\u6570\uff0c\u4eceprime[1]\u5f00\u59cb\u8bb0\u5f55\u7d20\u6570\n        for (int j = i * i; j < SIZE; j += i) {  //\u4ecei+i\u5f00\u59cb\u6807\u8bb0\uff0c\u89e3\u51b3\u4e00\u4e2a\u6570\u5b57\u88ab\u91cd\u590d\u6807\u8bb0\u7684\u95ee\u9898\n            prime[j] = 1;\n        }\n    }\n}\n")),(0,l.kt)("p",null,"\u6307\u9488\u5360\u75288\u4e2a\u5b57\u8282"),(0,l.kt)("p",null,"\u9ad8\u7ef4\u6570\u7ec4\u4f20\u53c2\uff0c\u53ea\u53ef\u7701\u4e00\u4e2a\u7ef4\u5ea6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"(*b)[][]")," \uff0c\u8054\u60f3\u6570\u7ec4\u7684\u7269\u7406\u5b58\u50a8\uff1b  "),(0,l.kt)("p",null,"\u51fd\u6570\u4e0e\u6570\u7ec4\u5b58\u5728\u4e00\u5b9a\u5173\u7cfb\uff1a\u51fd\u6570\u662f\u538b\u7f29\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u662f\u5c55\u5f00\u7684\u51fd\u6570"),(0,l.kt)("h3",{id:"\u4e8c\u5206\u67e5\u627e"},"\u4e8c\u5206\u67e5\u627e"),(0,l.kt)("p",null,"\u4f53\u4f1a\u6570\u7ec4\u4e0e\u51fd\u6570\u7684\u5173\u7cfb\uff0c\u51fd\u6570\u76f8\u6bd4\u6570\u7ec4\u65e0\u9700\u63d0\u524d\u5360\u7528\u7a7a\u95f4\u3002"),(0,l.kt)("p",null,"\u5c3e\u9012\u5f52\uff1aeg: \u6c42n!\uff0c fac;   \u6613\u7206\u6808\uff1b"),(0,l.kt)("p",null,"\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0cCPU\u6267\u884c\uff0c\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u7a7a\u95f4\u5728\u6808\u533a(8MB ~ 800\u4e07\u5b57\u8282)\uff1b\u51fd\u6570\u5916\u5b9a\u4e49\u5728\u5806\u533a\uff1b"),(0,l.kt)("p",null,"\u5185\u5b58\uff1a\u6808\u533a\uff0c\u5806\u533a "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int num(int n) {\n    return n;\n}\n\nint binary_2(int (*f)(int), int l, int r, int x) {   //\u9012\u5f52\u5199\u6cd5\n    if (l > r) return -1;\n    int mid = (l + r) >> 1;\n    if (f(mid) == x) return mid;\n    if (f(mid) > x) r = mid - 1;\n    else l = mid + 1;\n    return binary_2( f, l, r, x);\n}\n")),(0,l.kt)("h3",{id:"\u725b\u987f\u8fed\u4ee3"},"\u725b\u987f\u8fed\u4ee3"),(0,l.kt)("p",null,"\u6c42\u89e3\u9ad8\u5143\u65b9\u7a0b\u7684\u6839\uff1b\u4f18\u4e8e\u4e8c\u5206\u6cd5\uff1b"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20210313223213465",src:t(68189).Z})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<iostream>\n#include<math.h>\nusing namespace std;\n#define EPSL 1e-6\n\ninline double F(double x, double n) {\n    return x * x - n;\n}\n\ninline double f(double x) {\n    return 2 * x;\n}\n\ndouble NewTon(double (*F)(double, double), double (*f)(double), double n) {\n    double x1 = n / 2.0;\n    while (fabs(F(x1, n)) > EPSL) {\n        x1 -= F(x1, n) / f(x1);\n    }\n    return x1;\n}\n\ndouble my_sqrt(double n) {\n    return NewTon(F, f, n);\n}\n\n\nint main() {\n    double n;\n    while (~scanf("%lf", &n)) {\n        cout << my_sqrt(n) << endl;\n    }\n\n    return 0;\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"float Q_sqrt( float number ) {      //\u96f7\u795e\u4e09\u6c42\u5e73\u65b9\u6839\n    long i;\n    float x2, y;\n    const float threeHalfs = 1.5F;\n\n    x2 = number * 0.5F;\n    y = number;\n    i = * ( long * ) &y;\n    i = 0x5f3759df - (i >> 1);  // \u8fd9\u662f\u4ec0\u4e48\u9b3c\uff1f\n    y = * ( float * ) &i;\n    y = y * ( threeHalfs - ( x2 * y * y ) );\n    return y;\n}\n\n")),(0,l.kt)("h2",{id:"\u5b8f\u5b9a\u4e49-1"},"\u5b8f\u5b9a\u4e49"),(0,l.kt)("h3",{id:"\u4ee3\u7801\u66ff\u6362"},"==",(0,l.kt)("strong",{parentName:"h3"},"\u4ee3\u7801\u66ff\u6362"),"=="),(0,l.kt)("h3",{id:"\u5b8f\u7684\u5e94\u7528"},"\u5b8f\u7684\u5e94\u7528"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"#"),"\u4ee3\u8868\u9884\u5904\u7406\u547d\u4ee4\uff0c\u5305\u62ec\u4ee5",(0,l.kt)("inlineCode",{parentName:"p"},"#"),"\u5f00\u5934\u7684\u5934\u6587\u4ef6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"define")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u7b26\u53f7\u5e38\u91cf"),(0,l.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u4ee3\u7801\u6bb5   ",(0,l.kt)("inlineCode",{parentName:"li"},"\\"),"\uff1a\u8fde\u63a5\u7b26\uff0c")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u5b8f\u662f\u7528\u6765\u4ee3\u7801\u66ff\u6362(\u6bd4\u51fd\u6570\u66f4\u5f3a\u5927)\uff0c\u800c\u975e\u5b9a\u4e49\u8868\u8fbe\u5f0f\uff0c\u505a\u8fd0\u7b97"),(0,l.kt)("blockquote",{parentName:"blockquote"},(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define S(a, b) a * b\nS( 3 + 4, 5 + 6);    // 3 + 4 * 5 + 6\n")))),(0,l.kt)("h3",{id:"\u9884\u5b9a\u4e49\u7684\u5b8f"},"\u9884\u5b9a\u4e49\u7684\u5b8f"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200514182559568",src:t(81512).Z})),(0,l.kt)("h3",{id:"\u6761\u4ef6\u5f0f\u7f16\u8bd1"},"\u6761\u4ef6\u5f0f\u7f16\u8bd1"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200514183134694",src:t(96706).Z})),(0,l.kt)("p",null,"\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"#ifdef"),"\uff0c\u8bb0\u5f97\u7ed3\u675f",(0,l.kt)("inlineCode",{parentName:"p"},"#endif")),(0,l.kt)("h3",{id:"\u9884\u5904\u7406\u547d\u4ee4"},"\u9884\u5904\u7406\u547d\u4ee4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph LR\n    A(c\u6e90\u7801)--\u9884\u7f16\u8bd1   <\u5c55\u5f00\u6240\u6709\u7684\u5b8f>--\x3eB(\u7f16\u8bd1\u6e90\u7801)\n    B --\u7f16\u8bd1--- C(\u5bf9\u8c61\u6587\u4ef6 .o)\n    C--\u94fe\u63a5--\x3e F(\u53ef\u6267\u884c\u6587\u4ef6)\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -E file.cpp")),(0,l.kt)("p",null,"\u8c03\u7528\u51fd\u6570--\x3e\u538b\u6808\uff1b\u6267\u884c\u51fd\u6570--\x3e\u5f39\u6808;"),(0,l.kt)("p",null,"\u7f16\u8bd1:\u4ece\u4e0a\u5230\u4e0b"),(0,l.kt)("p",null,"\u6267\u884c:\u4ecemain\u51fd\u6570\u5f00\u59cb"),(0,l.kt)("h3",{id:"max"},"MAX"),(0,l.kt)("p",null,"\u5b8f\u662f\u4ee3\u7801\u66ff\u6362\uff0c\u6ce8\u610f\u4f18\u5148\u7ea7\u7ed3\u5408\uff0c\u91cd\u590d\u8ba1\u7b97\uff1b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"#a"),"\u7684\u4f5c\u7528\uff1b",(0,l.kt)("inlineCode",{parentName:"p"},"g++ -E")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#define MAX(a, b) ({\\\n    __typeof(a) __a = (a);\\\n    __typeof(b) __b = (b);\\\n    __a > __b ? __a : __b;\\\n})\n\n#define P(a) {\\\n    printf("%s = %d\\n", #a, a);\\\u3000\u3000\u3000\u3000//#a\uff0c\u5c06\uff41\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8f93\u51fa\n}\n\nint main() {\n    int a = 7;\n    P(MAX(2, 3));\n    P(5 + MAX(2, 3));\n    P(MAX(2, MAX(3, 4)));\n    P(MAX(2, 3 > 4 ? 3 : 4));\n    P(MAX(a++, 6));\n    P(a);\n    return 0;\n}\n')),(0,l.kt)("h3",{id:"log"},"LOG"),(0,l.kt)("p",null,"\u6ce8\u610f\u3000",(0,l.kt)("inlineCode",{parentName:"p"},"#args"),"\u3000\u5c06\u53c2\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f, \u548c\u3000",(0,l.kt)("inlineCode",{parentName:"p"},"##args")," \u8fde\u63a5\u7b26,\u8fde\u63a5\u5728\u4e00\u8d77,\u7684\u7528\u6cd5"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -DDEBUG file.cpp"),"\u7684\u7528\u6cd5\uff1b\u6761\u4ef6\u7f16\u8bd1\u7684\u7528\u6cd5"),(0,l.kt)("p",null,"\u53ef\u7528\u6765\u627eBUG"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n//#define DEBUG\n#ifdef DEBUG\n#define log(frm, args...) {\\\n    printf("[%s : %d] %s ", __func__, __LINE__, #args);\\\n    printf(frm, ##args);\\\n    printf("\\n");\\\n}\n#else\n#define log(frm, args...)\n#endif\n\n#define contact(a, b) a##b\n\nint main() {\n    int a = 3, abc, def;\n    int abcdef = 0;\n    log("%d", abcdef);\n    log("%d", a);\n    log("hello world");\n    contact(abc, def) = 123;\n    log("%d", abcdef);  //\u4e3a\u4ec0\u4e48abcdef\u4e3a\uff13\uff0c##a\u8fde\u63a5\u7684\u4f5c\u7528\uff0c\u4ee3\u7801\u66ff\u6362\n    return 0;\n}\n[main : 25] abcdef 0\n[main : 26] a 3\n[main : 27]  hello world\n[main : 29] abcdef 123\n')),(0,l.kt)("h2",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,"==\u51fd\u6570\u4e2d\uff1a\u5b57\u7b26\u4e32\u6307\u9488\u53d8\u91cf\uff0c 1. static\u9759\u6001\u53d8\u91cf\uff1b 2.strdup=="),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"strstr"),"\uff1a\u67e5\u627e\u5b50\u4e32"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"stdup"),": \u5355\u72ec\u5206\u914d\u7a7a\u95f4"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"atoi"),":\u5b57\u7b26\u4e32\u8f6c\u6574\u578b"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20200516141626848",src:t(85103).Z})),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(32231).Z})),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"memset(str1,c,n);")," c\u53ea\u53ef\u8bbe\u7f6e\u4e3a0\u6216-1\uff1b\u6309\u5b57\u8282\u8bbe\u7f6e,\u6bcf\u4e00\u4f4d\u4e3a0\u62161\u624d\u6709\u610f\u4e49"),(0,l.kt)("h3",{id:"string"},"string"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <string.h>\n#include <inttypes.h>\nusing namespace std;\n\nint main() {\n    char str[10] = {0};\n    int n;\n    while (~scanf("%d", &n)) {\n        sprintf(str, "%x", n);\n        printf("%s has %lu digits\\n", str, strlen(str));\n    }\n    return 0;\n}\n')),(0,l.kt)("h2",{id:"\u590d\u6742\u7ed3\u6784"},"\u590d\u6742\u7ed3\u6784"),(0,l.kt)("h3",{id:"\u7ed3\u6784\u4f53"},"\u7ed3\u6784\u4f53"),(0,l.kt)("p",null,"\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5206\u914d\uff1a\u5185\u5b58\u5bf9\u9f50\uff1b\u53d6\u6700\u5927\u7c7b\u578b\u6240\u5360\u7a7a\u95f4\uff1b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"#pragma pack(n)")," \u5b8f\uff0cn\u5c31\u662f\u4f60\u8981\u6307\u5b9a\u7684\u201c\u5bf9\u9f50\u7cfb\u6570\u201d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct node1 {\n    char a; int b; int c;\n};          //8\u5b57\u8282\nstruct node2 {\n    char a; int c; char b;\n};          //16\u5b57\u8282\n")),(0,l.kt)("p",null,"\u5b9a\u4e49\u7ed3\u6784\uff1a\u5c06\u540c\u4e00\u7c7b\u578b\u653e\u4e00\u8d77"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#pragma\u662f\u4e00\u6761\u9884\u5904\u7406\u7684\u6307\u4ee4\uff08preprocessor directive\uff09\n\u7b80\u5355\u5730\u8bf4\uff0c#pragma\u662f\u7528\u6765\u5411\u7f16\u8bd1\u5668\u4f20\u8fbe\u8bed\u8a00\u6807\u51c6\u4ee5\u5916\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n    #pargma once\n\u6548\u679c\u7b49\u540c\u4e8e\n#ifndef THIS_HEADER\n#define THIS_HEADER\n\n#endif\n")),(0,l.kt)("h3",{id:"\u5171\u7528\u4f53"},"\u5171\u7528\u4f53"),(0,l.kt)("p",null,"\u5185\u5b58\u516c\u7528\uff1a\u9009\u53d6\u4e00\u4e2a\u6700\u5927\u7684\u5b57\u6bb5;\u5171\u7528\u4e00\u5757\u5185\u5b58"),(0,l.kt)("p",null,"\u5730\u5740\u6309\u5b57\u8282\u6392\u5e8f\uff0c"),(0,l.kt)("p",null,"eg\uff1a\u5b9e\u73b0IP\u5730\u5740\u5316\u6574\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nunion IP {\n    struct {\n     unsigned char a1;   \n     unsigned char a2;   \n     unsigned char a3;   \n     unsigned char a4;   \n    } ip;\n    unsigned int num;\n};\n\nint is_little() {\n    static int num = 1;\n    return ((char *)&num)[0];\n}\n\nint main() {\n    cout << is_little() << endl;\n    union IP p;\n    char str[100];\n    int arr[4];\n    while (~scanf("%s", str)) {\n        sscanf(str,"%d.%d.%d.%d", arr, arr + 1, arr + 2, arr + 3);\n        p.ip.a1 = arr[3];\n        p.ip.a2 = arr[2];\n        p.ip.a3 = arr[1];\n        p.ip.a4 = arr[0];\n        printf("%p\\n", &p.ip.a1);\n        printf("%p\\n", &p.ip.a2);\n        printf("%p\\n", &p.ip.a3);\n        printf("%p\\n", &p.ip.a4);\n        printf("%p\\n", &p.num);\n        cout << p.num << endl;\n    }\n    return 0;\n}\n\n')),(0,l.kt)("p",null,"\u5927\u7aef\u5c0f\u7aef\u673a\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5927\u7aef\uff08\u5b58\u50a8\uff09\u6a21\u5f0f"),"\uff1a\u662f\u6307\u4e00\u4e2a\u6570\u636e\u7684\u4f4e\u4f4d\u5b57\u8282\u5e8f\u7684\u5185\u5bb9\u653e\u5728\u9ad8\u5730\u5740\u5904\uff0c\u9ad8\u4f4d\u5b57\u8282\u5e8f\u5b58\u7684\u5185\u5bb9\u653e\u5728\u4f4e\u5730\u5740\u5904\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5c0f\u7aef\uff08\u5b58\u50a8\uff09\u6a21\u5f0f"),"\uff1a\u662f\u6307\u4e00\u4e2a\u6570\u636e\u7684\u4f4e\u4f4d\u5b57\u8282\u5e8f\u5185\u5bb9\u5b58\u653e\u5728\u4f4e\u5730\u5740\u5904\uff0c\u9ad8\u4f4d\u5b57\u8282\u5e8f\u7684\u5185\u5bb9\u5b58\u653e\u5728\u9ad8\u5730\u5740\u5904\u3002\uff08\u53ef\u4ee5\u603b\u7ed3\u4e3a\u201c\u5c0f\u5c0f\u5c0f\u201d\u5373\u4f4e\u4f4d\u3001\u4f4e\u5730\u5740\u3001\u5c0f\u7aef\uff09")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<cstdio>\nint main() {\n    int a = 321;\n    printf("%d\\n", ((char *)&a)[0]);\n    printf("%d\\n", ((char *)&a)[1]);\n    printf("%d\\n", ((char *)&a)[2]);\n    return 0;\n}\n//\n\u8f93\u51fa\n65\n1\n0\n\u4f4e\u4f4d\u4f4e\u5b58\uff0c\u524d8bite\u5b58\u4f4e\u5730\u5740\n')),(0,l.kt)("p",null,"\u4e3b\u673a\u5b57\u8282\u5e8f\uff1a"),(0,l.kt)("h2",{id:"\u6307\u9488"},"\u6307\u9488"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6307\u9488\u53d8\u91cf\u4e5f\u662f\u53d8\u91cf\uff0c\u53d8\u91cf\u5c31\u6709\u5730\u5740"),(0,l.kt)("p",{parentName:"blockquote"},"\u6309\u5b57\u8282\u7f16\u5740")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"64\u4f4dOS(x64)\uff1a\u6307\u9488\u5360\u7a7a\u95f48B;"),(0,l.kt)("p",{parentName:"blockquote"},"32\u4f4dOS(x86)\uff1a\u6307\u9488\u5360\u7a7a\u95f44B;")),(0,l.kt)("p",null,"\u5e38\u91cf\u6307\u9488:",(0,l.kt)("inlineCode",{parentName:"p"},"const char *str")," \u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u66f4\u6539\uff1b"),(0,l.kt)("p",null,"\u6307\u9488\u5e38\u91cf:",(0,l.kt)("inlineCode",{parentName:"p"}," char * const str")," \u6307\u9488\u6240\u4ee3\u8868\u7684\u5730\u5740\u4e0d\u53ef\u66f4\u6539\uff1b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},".")," \u6210\u5458\u9009\u62e9(\u5bf9\u8c61):\u76f4\u63a5\u5f15\u7528"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"->"),"\u6210\u5458\u9009\u62e9(\u6307\u9488):\u95f4\u63a5\u5f15\u7528"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int *a, c;"),"\u4e2d",(0,l.kt)("inlineCode",{parentName:"p"},"*"),"\u548c\u53d8\u91cf\u8d70"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'//char *\uff0c\u4e0eint *\u533a\u522b(\u504f\u79fb1\u4e2a\u6570\u636e\u7c7b\u578b)\uff0c\u7ed3\u6784\u4f53\uff0c\u6307\u9488;\nusing namespace std;\ntypedef struct Data {\n    int x, y;\n} Data;\n\nint main() {\n    int  *p1;\n    char *p2;\n    printf("%p %p\\n", p1, p1 + 1);\n    printf("%p %p\\n", p2, p2 + 1);\n    Data a[2] = { {0,1}, {2,3} };\n    Data *p = a;\n    printf("%d\\n", (*(a + 1)).x);\n    printf("%d\\n", (*(p + 1)).x);\n    printf("%d\\n", (p + 1)->x);\n    printf("%d\\n", (a + 1)->x);\n    printf("%d\\n", p[1].x);\n}\n0x55b20ca2d9cd 0x55b20ca2d9d1\n0x7f7c4e9119a0 0x7f7c4e9119a1\n2\n2\n2\n2\n2Ss\n')),(0,l.kt)("h3",{id:"\u6808\u5b58\u50a8\uff0c\u5927\u5c0f\u7aef"},"\u6808\u5b58\u50a8\uff0c\u5927\u5c0f\u7aef"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"num1 \u5c0f\u7aef\u673a\uff0c16\u8fdb\u5236\u4e0b"),(0,l.kt)("th",{parentName:"tr",align:null},"63"),(0,l.kt)("th",{parentName:"tr",align:null},"62"),(0,l.kt)("th",{parentName:"tr",align:null},"61"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u5341\u8fdb\u5236"),(0,l.kt)("td",{parentName:"tr",align:null},"99"),(0,l.kt)("td",{parentName:"tr",align:null},"98"),(0,l.kt)("td",{parentName:"tr",align:null},"97"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ACSII"),(0,l.kt)("td",{parentName:"tr",align:null},"c"),(0,l.kt)("td",{parentName:"tr",align:null},"b"),(0,l.kt)("td",{parentName:"tr",align:null},"a"),(0,l.kt)("td",{parentName:"tr",align:null},"\\0")))),(0,l.kt)("p",null,"\u6808\u5b58\u50a8\u4ece\u9ad8\u5730\u5740\u5230\u4f4e\u5730\u5740\uff0c\u5148\u8fdb\u540e\u51fa"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u6808\u4f4e\u5730\u5740"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"\u6808\u9ad8\u5730\u5740"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u5b58\u50a8"),(0,l.kt)("td",{parentName:"tr",align:null},"num2"),(0,l.kt)("td",{parentName:"tr",align:null},"num1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"dcba"),(0,l.kt)("td",{parentName:"tr",align:null},"cba\\0")))),(0,l.kt)("h3",{id:"\u5730\u5740\u504f\u79fb\u91cf"},"\u5730\u5740\u504f\u79fb\u91cf"),(0,l.kt)("p",null,"\u5229\u2f64",(0,l.kt)("inlineCode",{parentName:"p"},"stddef.h")," \u4e2d\u7684 offsetof \u5b8f\u53ef\u4ee5\u83b7\u53d6\u7ed3\u6784\u6210\u5458\u7684\u504f\u79fb\u91cf\u3002\u8f93\u51fa\u7ed3\u679c\u6709\u5b57\u8282\u5bf9\u2eec\u9f50\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"#define offset(T, a) ((long)(&(((T *)(NULL))->a)))"),"\uff0c\u5b9a\u4e49T*\u7c7b\u578bNULL\u6307\u9488\uff0c\u95f4\u63a5\u5f15\u7528a\uff0c\u53d6\u5176\u5730\u5740\uff0c\u5f3a\u8f6clong"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<iostream>\nusing namespace std;\n#define pchar char *\ntypedef char * ppchar;\n\n//#define offset(T, a) ((long)(&(((T *)(NULL))->a)))\n#define offset(T, a) ({\\\n    T temp;\\\n    (char *)(&temp.a) - (char *) (char *)(&temp);\\\n})\n\nstruct Data {\n    int a;\n    double b;\n    char c;\n};\n\nint main() {\n    int num1 = 0x616263;\n    int num2 = 0x61626364;\n    printf("%s\\n", (char *)(&num2));\n    cout << endl;\n    //printf("%s\\n", (char *)(&num1));\n    printf("%ld\\n",offset(struct Data, a));\n    printf("%ld\\n",offset(struct Data, b));\n    printf("%ld\\n",offset(struct Data, c));\n    pchar p, q;     //\u5b8f\uff0c\u4ee3\u7801\u66ff\u6362\n    ppchar a, b;\n    printf("p = %lu, q = %lu\\n",sizeof(p), sizeof(q));\n    printf("p = %lu, q = %lu\\n",sizeof(a), sizeof(b));\n    return 0;\n}\n\ndcbacba\n\n0\n8\n16\np = 8, q = 1   //\u5b8f\u53ea\u662f\u4ee3\u7801\u66ff\u6362\np = 8, q = 8\n\n')),(0,l.kt)("h3",{id:"typedef"},"typedef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u5185\u5efa\u7c7b\u578b\ntypedef long long lint;\ntypedef char * pchar;\n//\u7ed3\u6784\u4f53\u7c7b\u578b\ntypedef struct _node {\n    int x, y;\n} Node, *PNode;\n//\u51fd\u6570\u6307\u9488\nint (*func)(int , int );   //func\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u53d8\u91cf\ntypedef int (*func)(int , int );    //func\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\n")),(0,l.kt)("h3",{id:"main\u51fd\u6570\u53c2\u6570"},"main\u51fd\u6570\u53c2\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int main();\nint main(int argc, char *argv[]);   //argc \u53c2\u6570\u4e2a\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u672c\u8eab\uff1bargv\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u6570\u7684\u5185\u5bb9\nint main(int argc, char *argv[], char **env);   //env\u53c2\u6570\uff0c\u73af\u5883\u53d8\u91cf\u7684\u5185\u5bb9\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'void output(int argc, char *argv[], char **env) {\n    cout << argc << endl;\n    for (int i = 0; i < argc; ++i) {\n        printf("%s\\n",argv[i]);\n    }\n    for (int i = 0; env[i]; ++i) {\n        //printf("env[%d] = %s\\n", i, env[i]);\n        if (strncmp(env[i], "USERNAME=", 9) == 0) {\n            if (strncmp(env[i] + 9, "worst", 5) == 0) {\n                cout << "Welcome to beat the code" << endl;\n                continue;\n            }\n            cout << "Please go away" << endl;\n        }\n    }\n    return ;\n}\n\nint main(int argc, char *argv[], char **env) {\n    output(argc, argv, env);\n    return 0;\n}\n\n\n1\n./a.out\nWelcome to beat the code\n')),(0,l.kt)("h2",{id:"\u5de5\u7a0b\u5f00\u53d1"},"\u5de5\u7a0b\u5f00\u53d1"),(0,l.kt)("h3",{id:"\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49"},"\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49"),(0,l.kt)("p",null,"\u7f16\u8bd1:\u68c0\u6d4b\u8bed\u6cd5"),(0,l.kt)("p",null,"\u51fd\u6570\u672a\u58f0\u660e\u62a5\u9519\u5728: \u7f16\u8bd1\u9636\u6bb5"),(0,l.kt)("p",null,"\u51fd\u6570\u672a\u5b9a\u4e49\u62a5\u9519\u5728:\u751f\u6210\u5bf9\u8c61\u6587\u4ef6\u94fe\u63a5\u7684\u65f6\u5019"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"/tmp/ccgj9a4z.o\uff1a\u5728\u51fd\u6570\u2018main\u2019\u4e2d\uff1a\ntest.cpp:(.text+0xa)\uff1a\u5bf9\u2018funcA(int)\u2019\u672a\u5b9a\u4e49\u7684\u5f15\u7528\ncollect2: error: ld returned 1 exit status\n")),(0,l.kt)("p",null,"\u94fe\u63a5:\u5c06\u5bf9\u8c61\u6587\u4ef6\u8fdb\u884c\u94fe\u63a5,\u634f\u5408"),(0,l.kt)("p",null,"\u6761\u4ef6\u5f0f\u7f16\u8bd1\u80fd\u4fdd\u8bc1\u4e00\u6b21\u6e90\u6587\u4ef6\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4e0d\u51fa\u73b0\u91cd\u590d\u5305\u542b\u7684\u529f\u80fd,\u4e0d\u51fa\u73b0\u91cd\u590d\u5b9a\u4e49\u7684\u9519\u8bef"),(0,l.kt)("p",null,"\u4e0d\u89e3\u51b3\u5728\u5bf9\u5bf9\u8c61\u6587\u4ef6\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u91cd\u590d\u5b9a\u4e49\u95ee\u9898"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef _HEADER_H\n#define _HEADER_H\n#endif\n")),(0,l.kt)("h3",{id:"\u51fd\u6570\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6"},"\u51fd\u6570\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6"),(0,l.kt)("p",null,"\u51fd\u6570\u5b9a\u4e49\u653e\u5728\u5934\u6587\u4ef6(.h),\u4e00\u822c\u8c03\u7528\u51fd\u6570\u7684\u58f0\u660e\u653e\u5728\u6e90\u6587\u4ef6(.cc),\u4e3b\u51fd\u6570\u6e90\u6587\u4ef6(.cpp);"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'worst@worst 1.define % cat header1.h                                                               [0] //\u5934\u6587\u4ef6,\u51fd\u6570\u5b9a\u4e49\n#ifndef _HEADER1_H\n#define _HEADER1_H\nvoid funcA(int);\nvoid funcB(int);\n#endif\n\nworst@worst 1.define % cat header1.cc                                                              [0]   //\u6e90\u6587\u4ef6,\u51fd\u6570\u58f0\u660e\n#include <stdio.h>\n#include "header1.h"\nvoid funcB(int n) {\n    if (n == 0) return ;\n    printf("funcB : %d\\n", n);\n    funcA(n - 1);\n    return ;\n}\nvoid funcA(int n) {\n    if (n == 0) return ;\n    printf("funcA : %d\\n", n);\n    funcB(n - 1);\n    return ;\n}\n\n\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"C++\u5b9e\u73b0                                 \u6e90\u4ee3\u7801\u7684\u6269\u5c55\u540d\nUNIX                                       C\u3001cc\u3001cxx\u3001c\nGNU C++                               C\u3001cc\u3001cxx\u3001cpp\u3001c++\nBorland C++                        Cpp\nMicrosoft Visual C++        cpp\u3001cxx\u3001cc\n")),(0,l.kt)("p",null,"#\u662f\u5b8f,\u5b8f\u5c31\u662f\u4ee3\u7801\u66ff\u6362"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>   // <>\u4ece\u7cfb\u7edf\u5e93\u7684\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6,\u5934\u6587\u4ef6.h\n#include "header1.h"   //""\u4ece\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6,\u5934\u6587\u4ef6.h\n#include "header2.h"\n')),(0,l.kt)("p",null,"\u5c06",(0,l.kt)("inlineCode",{parentName:"p"},'""'),"\u6362\u6210",(0,l.kt)("inlineCode",{parentName:"p"},"<>")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <stdio.h>   // <>\u4ece\u7cfb\u7edf\u5e93\u7684\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6\n#include <header1.h>\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -c -I\u76ee\u5f55 file.c"),"\u5c06\u67d0\u4e00\u76ee\u5f55\u6dfb\u52a0\u5230\u7cfb\u7edf\u67e5\u627e\u76ee\u5f55\u4e2d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"worst@worst 1.define % g++ -c -I./ test.cpp                                                        [0]\nworst@worst 1.define % g++ -c -I./ header1.cc                                                      [0]\nworst@worst 1.define % g++ -c -I./ header2.cc                                                      [0]\nworst@worst 1.define % g++ test.o header1.o header2.o                    \n")),(0,l.kt)("h3",{id:"\u9759\u6001\u94fe\u63a5\u5e93"},"\u9759\u6001\u94fe\u63a5\u5e93"),(0,l.kt)("p",null,"\u6a21\u5757tree\u7684\u6a21\u578b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"module      ## \u6a21\u5757\n    \xa0\xa0 \u251c\u2500\u2500 include      ##\u5b58\u653e\u5934\u6587\u4ef6,\u51fd\u6570\u58f0\u660e\n    \xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 header1.h\n    \xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 header2.h\n    \xa0\xa0 \u251c\u2500\u2500 lib              ##\u5b58\u653e\u9759\u6001\u94fe\u63a5\u5e93\n    \xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 libweier.a\n    \xa0\xa0 \u2514\u2500\u2500 src              ##\u5b58\u653e\u6e90\u6587\u4ef6,\u51fd\u6570\u5b9a\u4e49\n    \xa0\xa0     \u251c\u2500\u2500 header1.cc\n    \xa0\xa0     \u2514\u2500\u2500 header2.cc\n\n")),(0,l.kt)("p",null,"\u521b\u5efa\u9759\u6001\u5e93\u53ca\u4f7f\u7528"),(0,l.kt)("p",null,"\u7531.o\u6587\u4ef6\u751f\u6210.a\u7684\u9759\u6001\u5e93\u6587\u4ef6\uff0c\u9759\u6001\u5e93\u7684\u540d\u5b57\u95ee",(0,l.kt)("inlineCode",{parentName:"p"},"libweier.a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"ar rc libweier.a header1.o header2.o\n")),(0,l.kt)("p",null,"\u4f7f\u7528\u9759\u6001\u5e93\u8fdb\u884c\u9759\u6001\u94fe\u63a5\uff0c\u5c06\u5bf9\u8c61\u6587\u4ef6\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6",(0,l.kt)("inlineCode",{parentName:"p"},"test")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"g++ test.o -o test -L./module/lib -lweier \n")),(0,l.kt)("p",null,"-L \u662f\u6307\u5b9a\u52a0\u8f7d\u5e93\u6587\u4ef6\u7684\u8def\u5f84"),(0,l.kt)("p",null,"-l \u6307\u5b9a\u52a0\u8f7d\u7684\u5e93\u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"}," 5217  mkdir module\n 5218  mv header* module\n 5221  mkdir include\n 5223  mv header*.h include\n 5226  mkdir src\n 5227  mv *.cc src\n 5232  mkdir lib\n 5233  g++ -c -I./include ./src/header1.cc\n 5234  g++ -c -I./include ./src/header2.cc\n 5236  ar rc libweier.a header1.o header2.o\n 5238  mv libweier.a lib\n 5246  g++ -c -I./module/include test.cpp\n 5248  g++ -L./module/lib test.o -lweier\n 5251  ./a.out\n\n")),(0,l.kt)("p",null,"\u6f14\u793a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"worst@worst 1.define % mkdir module                                                                [0]\nworst@worst 1.define % mv header* module                                                           [0]\nworst@worst 1.define % cd module                                                                   [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 24K\n-rw-rw-r-- 1 worst worst  259 6\u6708   9 10:24 header1.cc\n-rw-rw-r-- 1 worst worst  360 6\u6708   9 10:24 header1.h\n-rw-rw-r-- 1 worst worst 1.8K 6\u6708   9 10:25 header1.o\n-rw-rw-r-- 1 worst worst  147 6\u6708   9 10:25 header2.cc\n-rw-rw-r-- 1 worst worst  368 6\u6708   9 10:24 header2.h\n-rw-rw-r-- 1 worst worst 1.7K 6\u6708   9 10:25 header2.o\nworst@worst module % mkdir include                                                                 [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 28K\n-rw-rw-r-- 1 worst worst  259 6\u6708   9 10:24 header1.cc\n-rw-rw-r-- 1 worst worst  360 6\u6708   9 10:24 header1.h\n-rw-rw-r-- 1 worst worst 1.8K 6\u6708   9 10:25 header1.o\n-rw-rw-r-- 1 worst worst  147 6\u6708   9 10:25 header2.cc\n-rw-rw-r-- 1 worst worst  368 6\u6708   9 10:24 header2.h\n-rw-rw-r-- 1 worst worst 1.7K 6\u6708   9 10:25 header2.o\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:37 include\nworst@worst module % mv header*.h include                                                          [0]\nworst@worst module % rm *.o                                                                        [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 12K\n-rw-rw-r-- 1 worst worst  259 6\u6708   9 10:24 header1.cc\n-rw-rw-r-- 1 worst worst  147 6\u6708   9 10:25 header2.cc\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:37 include\nworst@worst module % mkdir src                                                                     [0]\nworst@worst module % mv *.cc src                                                                   [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 8.0K\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:37 include\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:38 src\nworst@worst module % cd src                                                                        [0]\nworst@worst src % ls                                                                               [0]\nheader1.cc  header2.cc\nworst@worst src % cd ..                                                                            [0]\nworst@worst module % mkdir lib                                                                     [0]\nworst@worst module % g++ -c -I./include ./src/header1.cc                                           [0]\nworst@worst module % g++ -c -I./include ./src/header2.cc                                           [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 20K\n-rw-rw-r-- 1 worst worst 1.8K 6\u6708   9 10:44 header1.o\n-rw-rw-r-- 1 worst worst 1.7K 6\u6708   9 10:44 header2.o\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:37 include\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:39 lib\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:38 src\nworst@worst module % ar rc libweier.a header1.o header2.o                                          [0]\nworst@worst module % ll                                                                            [0]\n\u603b\u7528\u91cf 24K\n-rw-rw-r-- 1 worst worst 1.8K 6\u6708   9 10:44 header1.o\n-rw-rw-r-- 1 worst worst 1.7K 6\u6708   9 10:44 header2.o\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:37 include\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:39 lib\n-rw-rw-r-- 1 worst worst 3.7K 6\u6708   9 10:47 libweier.a\ndrwxrwxr-x 2 worst worst 4.0K 6\u6708   9 10:38 src\nworst@worst module % mv libweier.a lib                                                             [0]\nworst@worst module % cd lib                                                                        [0]\nworst@worst lib % ls                                                                               [0]\nlibweier.a\nworst@worst lib % cd ..                                                                            [0]\nworst@worst module % cd ..                                                                         [0]\nworst@worst 1.define % ls                                                                          [0]\na.out  func.cc  module  test.cpp  test.o\nworst@worst 1.define % rm test.o                                                                   [0]\nworst@worst 1.define % rm a.out                                                                    [0]\nworst@worst 1.define % ll                                                                          [0]\n\u603b\u7528\u91cf 12K\n-rw-rw-r-- 1 worst worst  318 6\u6708   8 19:32 func.cc\ndrwxrwxr-x 5 worst worst 4.0K 6\u6708   9 10:48 module\n-rw-rw-r-- 1 worst worst  446 6\u6708   9 10:24 test.cpp\nworst@worst 1.define % g++ -c -I./module/include test.cpp                                          [0]\nworst@worst 1.define % g++ -c test.cpp                                                             [0]\ntest.cpp:10:10: fatal error: header1.h: \u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\n #include <header1.h>\n          ^~~~~~~~~~~\ncompilation terminated.\nworst@worst 1.define % g++ -L./module/lib test.o -lweier                                           [1]\nworst@worst 1.define % ls                                                                          [0]\na.out  func.cc  module  test.cpp  test.o\nworst@worst 1.define % ./                                                                          [0]\nworst@worst 1.define % ./a.out                                                                     [0]\nfuncA : 5\nfuncB : 4\nfuncA : 3\nfuncB : 2\nfuncA : 1\nfuncC; 6 + 7 = 13 \nfuncA : 6\nfuncB : 5\nfuncA : 4\nfuncB : 3\nfuncA : 2\nfuncB : 1\nworst@worst 1.define % cd module                                                                   [0]\nworst@worst module % ls                                                                            [0]\nheader1.o  header2.o  include  lib  src\nworst@worst module % rm *.o                                                                        [0]\nworst@worst module % cd lib                                                                        [0]\nworst@worst lib % ls                                                                               [0]\nlibweier.a\nworst@worst lib % vim libweier.a                                                                   [0]\nworst@worst lib % cd ..                                                                            [0]\nworst@worst module %                                                                               [0]\n\n")),(0,l.kt)("h2",{id:"haizei_test\u81ea\u5236\u5355\u5143\u6d4b\u8bd5"},"haizei_test\u81ea\u5236\u5355\u5143\u6d4b\u8bd5"),(0,l.kt)("h3",{id:"gnu\u7684\u5c5e\u6027\uff08attribute\uff09"},"GNU\u7684\u5c5e\u6027\uff08attribute\uff09"),(0,l.kt)("p",null,"\u5c5e\u6027\u7684\u771f\u6b63\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u80fd\u591f\u8ba9\u7f16\u8bd1\u5668\u4f9b\u5e94\u5546\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u8bed\u8a00\u6269\u5c55\uff0c\u540c\u65f6\u4e0d\u4f1a\u5e72\u6270\u8bed\u8a00\u6216\u7b49\u5f85\u7279\u6027\u7684\u6807\u51c6\u5316\u3002\n\u6240\u6709\u7684\u7f16\u8bd1\u5668\u90fd\u5728\u5c1d\u8bd5\u652f\u6301\u5b83\uff0c\u4ee5\u7528\u4e8e\u4fee\u9970\u7c7b\u578b\u3001\u53d8\u91cf\u548c\u51fd\u6570\u7b49\n",(0,l.kt)("inlineCode",{parentName:"p"},"__attribute__((attribute-name))"),"\u8fd9\u6837\u7684\u5199\u6cd5\uff0c\u6bcf\u4e00\u4e2a\u7f16\u8bd1\u5668\u53ef\u80fd\u8fd8\u90fd\u6709\u53d8\u79cd"),(0,l.kt)("h3",{id:"1\u521d\u7248\u6d4b\u8bd5\u6846\u67b6"},"1.\u521d\u7248\u6d4b\u8bd5\u6846\u67b6"),(0,l.kt)("p",null,"cmake\u6839\u636e\u672c\u673a\u73af\u5883\u751f\u6210\u76f8\u5e94\u7684makefile\u6587\u4ef6"),(0,l.kt)("p",null,"\u9700\u6c42\u4f18\u5148\uff0c\u5148\u8bbe\u8ba1\u600e\u4e48\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"add(3, 5) == 8 ? True\nadd(22, 1) != 71 ? True\nadd(12, 1) < 71 ? True\nadd(4, 1) > 5 ? False\nadd(56, 1) <= 57.4 ? True\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"__attribute__((constructor))"),"\u53ef\u4ee5\u4fee\u9970\u51fd\u6570,\u4f7f\u4fee\u9970\u7684\u51fd\u6570\u5148\u4e8e\u4e3b\u51fd\u6570\u6267\u884c"),(0,l.kt)("p",null,"\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027   \u5bf9\u4e8e\u7a0b\u5e8f\u7684\u67d0\u4e9b\u91cf\u5148\u4e8e\u4e3b\u51fd\u6570\u6267\u884c"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"RUN _ ALLTESTS "),":\u83b7\u5f97\u7a0b\u5e8f\u4e2d\u6240\u6709\u518c\u8bd5\u7528\u4f8b\u7684\u51fd\u6570\u4fe1\u606f,\u901a\u8fc7\u6ce8\u518c\u51fd\u6570",(0,l.kt)("inlineCode",{parentName:"p"},"add_function()"),":\u5c06\u6d4b\u8bd5\u7528\u4f8b\u51fd\u6570\u8bb0\u5f55\u4e0b\u6765"),(0,l.kt)("p",null,"\u5b8f\u53ef\u4ee5\u5c06\u539f\u672c\u770b\u4f3c\u4e0d\u5408\u7406\u7684\u4ee3\u7801,\u53d8\u5f97\u5408\u7406\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"EXPECT_EQ"),",",(0,l.kt)("inlineCode",{parentName:"p"},"TEST"),"\u5747\u4e3a\u5b8f"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"TEST"),"\u5b8f\u8981\u5b9e\u73b0\u51fd\u6570\u7684\u5b9a\u4e49,(\u51fd\u6570\u540d\u79f0\u901a\u8fc7\u4e24\u4e2a\u53c2\u6570\u62fc\u63a5,\u9632\u6b62\u91cd\u5b9a\u4e49)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#define TEST(a, b)\\\nvoid a##_test_##b();\\\n__attribute__((constructor))\\\nvoid add_##a##_test_##b() {\\\n    add_function(a##_test_##b, #a "_test_" #b);\\\n}\\\nvoid a##_test_##b()\\\n')),(0,l.kt)("p",null,"\u6ce8\u518c\u51fd\u6570(\u7528\u6765\u5b58\u50a8\u6d4b\u8bd5\u7528\u4f8b\u51fd\u6570\u7684\u5730\u5740)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int function_cnt = 0;\nstruct Function function_arr[100];\n/* \u5934\u6587\u4ef6\u58f0\u660eFunction\ntypedef void (*TestFuncT)();\nstruct Function {\n    TestFuncT func;\n    const char *str;\n};\n*/\nvoid add_function(TestFuncT func, const char *str) {\n    function_arr[function_cnt].func = func;\n    function_arr[function_cnt].str = strdup(str);\n    function_cnt++;\n    return ;\n}\n")),(0,l.kt)("h3",{id:"2\u8f93\u51fa\u989c\u8272\u4e0e\u683c\u5f0f\u4fe1\u606f"},"2.\u8f93\u51fa\u989c\u8272\u4e0e\u683c\u5f0f\u4fe1\u606f"),(0,l.kt)("p",null,"\u901a\u8fc7\u5b8f\u4ee5\u53ca",(0,l.kt)("inlineCode",{parentName:"p"},"printf"),"\u6253\u5370\u7684\u989c\u8272\u7684\u8bed\u6cd5(\u89c1\u96f6\u788e\u77e5\u8bc6\u70b9)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#define COLOR(a, b) "\\033[" #b "m" a "\\033[0m"\n#define COLOR_HL(a, b) "\\033[" #b ";1m" a "\\033[0m"\n\n#define GREEN(a) COLOR(a, 32)\n#define GREEN_HL(a) COLOR_HL(a, 32)\n')),(0,l.kt)("h3",{id:"3\u8f93\u51fa\u7edf\u8ba1\u4fe1\u606f"},"3.\u8f93\u51fa\u7edf\u8ba1\u4fe1\u606f"),(0,l.kt)("p",null,"\u51fd\u6570\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49\u5206\u653e\u5934\u6587\u4ef6,\u6e90\u6587\u4ef6"),(0,l.kt)("p",null,"\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49:",(0,l.kt)("inlineCode",{parentName:"p"},".c"),"\u6587\u4ef6\u4e2d\u5b9a\u4e49",(0,l.kt)("inlineCode",{parentName:"p"},"int a = 5;"),"\uff0c\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"a.h"),"\u91cc\u5199",(0,l.kt)("inlineCode",{parentName:"p"},"extern int a;"),"\uff0c"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"extern int a;"),"\u8bf4\u660e\u4e86a\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u5728\u7a0b\u5e8f\u7684\u5176\u4ed6\u5730\u65b9\u5206\u914d\u7684\uff0c\u5728\u6587\u4ef6\u4e2d\u5176\u4ed6\u4f4d\u7f6e\u6216\u8005\u5176\u4ed6\u6587\u4ef6\u4e2d\u5bfb\u627ea\u8fd9\u4e2a\u53d8\u91cf\u3002"),(0,l.kt)("p",null,"==.h\u5934\u6587\u4ef6\u4e2d\u4e0d\u5e94\u8be5\u5b9a\u4e49\u53d8\u91cf(\u91cd\u590d\u5b9a\u4e49)=="),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"//test.c \u6e90\u6587\u4ef6\u4e2d\nstruct FunctionInfo test_info;\n//test.h \u5934\u6587\u4ef6\nstruct FunctionInfo {\n    int total, success;\n};\nextern struct FunctionInfo test_info;\n")),(0,l.kt)("h3",{id:"4\u8f93\u51fa\u9519\u8bef\u4fe1\u606f"},"4.\u8f93\u51fa\u9519\u8bef\u4fe1\u606f"),(0,l.kt)("p",null,"\u5728==C11== \u6807\u51c6\u4e2d\uff0c_Generic \u5173\u952e\u5b57\u4f7f\u5176\u652f\u6301\u8f7b\u91cf\u7ea7\u7684\u6cdb\u578b\u7f16\u7a0b\u8bbe\u8ba1\u3002"),(0,l.kt)("p",null,"Linux\u4e2d\u4e25\u683c\u533a\u5206C\u8bed\u8a00\u548ccpp\u8bed\u8a00,\u6240\u4ee5\u540e\u7f00\u8981\u4e3a.c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#define TYPE_STR(a) _Generic((a), \\\n    int : "%d", \\\n    double : "%lf", \\\n    float : "%f", \\\n    long long : "%lld",\\\n    char : "%c", \\\n    const char * : "%s",\\\n    default : "others"\\\n)\n\n#define P(a, color) {\\\n    char frm[1000];\\\n    sprintf(frm, color("%s"), TYPE_STR(a));\\\n    printf(frm, a);\\\n}\nprintf(YELLOW_HL("\\n\\t%s:%d: Failure\\n"), __FILE__, __LINE__);\\\n            printf(YELLOW_HL("\\t\\texpect : " #a " " #comp " " #b "\\n\\t\\t" "actual : "));\\\n            P(_a, YELLOW_HL);\\\n            printf(YELLOW_HL(" vs "));\\\n            P(_b, YELLOW_HL);\\\n            printf("\\n\\n");\\\n')),(0,l.kt)("h3",{id:"5\u94fe\u8868\u5916\u9aa8\u9abc"},"5.\u94fe\u8868\u5916\u9aa8\u9abc"),(0,l.kt)("p",null,"\u901a\u8fc7LinkNode\u5c06\u6bcf\u4e2aFuntion\u7ed3\u6784(\u5b58\u6709func,str,p\u4e0b\u4e00\u8282\u70b9\u7684\u5730\u5740)\u8fde\u63a5\u8d77\u6765"),(0,l.kt)("p",null,"\u901a\u8fc7\u7ed3\u6784\u4f53\u4e2d\u7684\u5730\u5740\u504f\u79fb\u91cf\u6c42\u5f97\u8282\u70b9\u9996\u5730\u5740"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"//func_head\u662f\u4e2a\u865a\u62df\u5934\u8282\u70b9    \n//p\u6307\u5411\u4e3a\u9996\u4e2a\u5e26\u6709\u5b58\u6709\u4fe1\u606f\u7684\u8282\u70b9\nfor (struct LinkNode *p = func_head.pointer.next; p != NULL; p = p->next) {\n        struct Function *func = Head(p, struct Function, pointer);\n    }\n")),(0,l.kt)("p",null,"\u89e3\u91ca:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"\u4e3a\u6c42\u5f53\u524dfunc\u7684\u5730\u5740"),(0,l.kt)("th",{parentName:"tr",align:null},"func"),(0,l.kt)("th",{parentName:"tr",align:null},"offset(T,pointer)\u5c31\u53ef\u6c42\u51fafunc\u4e0estr\u603b\u5171\u5360\u7528\u7a7a\u95f4,\u5373\u5730\u5740\u504f\u79fb\u91cf"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"^"),(0,l.kt)("td",{parentName:"tr",align:null},"func"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"|"),(0,l.kt)("td",{parentName:"tr",align:null},"str"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"\u5df2\u77e5\u5f53\u524dpointer\u5730\u5740"),(0,l.kt)("td",{parentName:"tr",align:null},"pointer"),(0,l.kt)("td",{parentName:"tr",align:null},"p\u5c31\u662f\u5f53\u524d\u7ed3\u6784\u4f53\u6210\u5458pointer\u7684\u5730\u5740")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"\u6240\u4ee5p\u51cf\u53bbsizeof(str+func)\u5c31\u662f\u5f53\u524d\u7ed3\u6784\u4f53\u7684\u5730\u5740")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"//linklist.h\n\n#define offset(T, name) (long long)(&((T *)(0))->name)\n//offset() T\u7ed3\u6784\u4f53name\u5b57\u6bb5\u7684\u5730\u5740\u504f\u79fb\u91cf\n#define Head(p, T, name) ((T *)(((char *)p) - offset(T, name)))\n//p:\u8282\u70b9\u7684pointer\u5730\u5740,T:\u5f53\u524d\u7ed3\u6784\u4f53\u7c7b\u578b,name:\u7ed3\u6784\u4f53\u7684\u6210\u5458\u540dname;\n//\u6c42\u5f97\u8282\u70b9\u7684\u9996\u5730\u5740\nstruct LinkNode {\n    struct LinkNode *next;  \n};\n\n")),(0,l.kt)("h3",{id:"makefile\u6587\u4ef6"},"makefile\u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"CC = gcc\nCFLAGS = -g -Wall\nMAINOBJS = main.o haizei/test.o\n\n.PHONY: clean\n\nall: $(MAINOBJS)\n    $(CC) $(CFLAGS) $(MAINOBJS) -o ./bin/main\n\nhaizei/test.o: haizei/test.c haizei/test.h\n    $(CC) $(CFLAGS) -I./ -c -o haizei/test.o haizei/test.c\nmain.o: main.c  \n    $(CC) $(CFLAGS) -I./ -c -o main.o main.c\nclean:\n    rm -f $(MAINOBJS) bin/main\n")),(0,l.kt)("h3",{id:"testh"},"test.h"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#ifndef _TEST_H\n#define _TEST_H\n\n#include <haizei/linklist.h>\n#define Name(a, b) a##_test_##b\n#define Str(a, b)  #a "_test_" #b\n\n#define TEST(a, b)\\\nvoid a##_test_##b();\\\n__attribute__((constructor))\\\nvoid add_##a##__test__##b() {\\\n    add_function(Name(a,b), Str(a, b));\\\n}\\\nvoid a##_test_##b()\\\n\n#define COLOR(a, b) "\\033[" #b "m" a "\\033[0m"\n#define COLOR_HL(a, b) "\\033[" #b ";1m" a "\\033[0m"\n\n#define GREEN(a) COLOR(a, 32)\n#define RED(a) COLOR(a, 31)\n#define BLUE(a) COLOR(a, 34)\n#define YELLOW(a) COLOR(a, 33)\n\n#define GREEN_HL(a) COLOR_HL(a, 32)\n#define RED_HL(a) COLOR_HL(a, 31)\n#define BLUE_HL(a) COLOR_HL(a, 34)\n#define YELLOW_HL(a) COLOR_HL(a, 33)\n#define TYPE_STR(a) _Generic((a), \\\n    int : "%d", \\\n    double : "%lf", \\\n    float : "%f", \\\n    long long : "%lld",\\\n    char : "%c", \\#ifndef _LINKLIST_H\n#define _LINKLIST_H\n\n#define offset(T, name) (long long)(&((T *)(0))->name)\n\n#define Head(p, T, name) ((T *)(((char *)p) - offset(T, name)))\n\n//offset() T\u7ed3\u6784\u4f53name\u5b57\u6bb5\u7684\u5730\u5740\u504f\u79fb\u91cf\n//\n//\n//Head() \u8282\u70b9\u7684next\u5730\u5740,\u5f53\u524d\u7ed3\u6784\u4f53\u7c7b\u578b,\u4e0b\u4e00\u8282\u70b9\u7684name\u5b57\u6bb5;\n\nstruct LinkNode {\n    struct LinkNode *next;\n};\n\n#endif\n\n    const char * : "%s",\\\n    default : "others"\\\n)\n\n#define P(a, color) {\\\n    char frm[1000];\\\n    sprintf(frm, color("%s"), TYPE_STR(a));\\\n    printf(frm, a);\\\n}\n\n#define EXPECT(a, b, comp) {\\\n        __typeof(a) _a = (a);\\  \n        __typeof(b) _b = (b);\\\n        test_info.total += 1;\\\n        if (_a comp _b) test_info.success += 1;\\\n        else {\\\n            printf(YELLOW_HL("\\n\\t%s:%d: Failure\\n"), __FILE__, __LINE__);\\\n            printf(YELLOW_HL("\\t\\texpect : " #a " " #comp " " #b "\\n\\t\\t" "actual : "));\\\n            P(_a, YELLOW_HL);\\\n            printf(YELLOW_HL(" vs "));\\\n            P(_b, YELLOW_HL);\\\n            printf("\\n\\n");\\\n        }\\\n        printf(GREEN("[-----------] ") #a " " #comp " " #b);\\\n        printf(" %s\\n", (_a comp _b ? GREEN_HL("True") : RED_HL("False")));\\\n}\n\n#define EXPECT_EQ(a, b) EXPECT(a, b, ==)\n#define EXPECT_NE(a, b) EXPECT(a, b, !=)\n#define EXPECT_LT(a, b) EXPECT(a, b, <)\n#define EXPECT_GT(a, b) EXPECT(a, b, >)\n#define EXPECT_LE(a, b) EXPECT(a, b, <=)\n#define EXPECT_GE(a, b) EXPECT(a, b, >=)\n\ntypedef void (*TestFuncT)();\nstruct Function {\n    TestFuncT func;\n    const char *str;\n    struct LinkNode pointer;\n};\nstruct FunctionInfo {\n    int total, success;\n};\nextern struct FunctionInfo test_info;\n\nint RUN_ALL_TESTS();\nvoid add_function(TestFuncT, const char *);\n#endif\n')),(0,l.kt)("h3",{id:"testc"},"test.c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <haizei/test.h>\n#include <haizei/linklist.h>\nstruct Function func_head, *func_tail = &func_head;\n\nint function_cnt = 0;\nstruct FunctionInfo test_info;\n\nint RUN_ALL_TESTS() {\n    for (struct LinkNode *p = func_head.pointer.next; p != NULL; p = p->next) {\n        struct Function *func = Head(p, struct Function, pointer);\n        test_info.total = test_info.success = 0;\n        printf(GREEN_HL("[====RUN====]") YELLOW_HL(" %s\\n"), func->str);\n        func->func();\n        double rate = 100.0 * test_info.success / test_info.total;\n        printf(GREEN("[  "));\n        if (fabs(rate - 100) < 1e-6) {\n            printf(BLUE_HL("%6.2lf%%"), rate);\n        } else {\n            printf(RED_HL("%6.2lf%%"), rate);\n        }\n        printf(GREEN("  ]") \n            " total : %d success : %d\\n", \n            test_info.total, \n            test_info.success \n            );\n    }\n    return 0;\n}\n\nvoid add_function(TestFuncT func, const char *str) {\n    struct Function *temp = (struct Function *)calloc(1, sizeof(struct Function)); \n    temp->func = func;\n    temp->str = strdup(str);\n    func_tail->pointer.next = &(temp->pointer);\n    func_tail = temp;\n    return ;\n}\n\n')),(0,l.kt)("h3",{id:"linklisth"},"linklist.h"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef _LINKLIST_H\n#define _LINKLIST_H\n\n#define offset(T, name) (long long)(&((T *)(0))->name)\n\n#define Head(p, T, name) ((T *)(((char *)p) - offset(T, name)))\n\n//offset() T\u7ed3\u6784\u4f53name\u5b57\u6bb5\u7684\u5730\u5740\u504f\u79fb\u91cf\n//\n//\n//Head() \u8282\u70b9\u7684next\u5730\u5740,\u5f53\u524d\u7ed3\u6784\u4f53\u7c7b\u578b,\u4e0b\u4e00\u8282\u70b9\u7684name\u5b57\u6bb5;\n\nstruct LinkNode {\n    struct LinkNode *next;\n};\n\n#endif\n\n")),(0,l.kt)("h2",{id:"\u6587\u4ef6\u64cd\u4f5c"},"\u6587\u4ef6\u64cd\u4f5c"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u58f0\u660e\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\u3002 "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'//\u5173\u8054fp\u548c\u6587\u4ef6\nFILE *fp;\nfp = fopen(\u6587\u4ef6\u8def\u5f84, \u8bbf\u95ee\u6a21\u5f0f); \n // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u5e94\u4e86\u6211\u4eec\u5e0c\u671b\u8bbf\u95ee\u7684\u6587\u4ef6\u8def\u5f84\u3002\n// \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8bbf\u95ee\u6a21\u5f0f\uff0c\u53ea\u8bfb\u6a21\u5f0f\u7684"r"\uff0c\u53ea\u5199\u6a21\u5f0f\u7684"w"\uff0c\u6587\u4ef6\u672b\u5c3e\u8ffd\u52a0\u7684"a"\n\n//\u65ad\u5f00fp\u548c\u6587\u4ef6\nflose(fp);\n')),(0,l.kt)("p",null,"\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"fgetc(fp)"),"\u83b7\u5f97\u5f53\u524d\u6307\u9488\u4e4b\u540e\u4f4d\u7f6e\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u6bcf\u83b7\u5f97\u4e00\u4e2a\u5b57\u7b26\uff0c\u6307\u9488\u4f1a\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\uff08\u5982\u679c\u5230\u8fbe\u6587\u4ef6\u5c3e\u90e8\u5219\u4f1a\u8fd4\u56de",(0,l.kt)("inlineCode",{parentName:"p"},"EOF"),"\uff09\u3002 "),(0,l.kt)("p",null,"\u6211\u4eec\u8fd9\u65f6\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"fputc('c', fp)"),";\u7684\u65b9\u5f0f\u5c06\u5b57\u7b26",(0,l.kt)("inlineCode",{parentName:"p"},"'c'"),"\u5199\u5165\u5230",(0,l.kt)("inlineCode",{parentName:"p"},"fp"),"\u5173\u8054\u7684\u6587\u4ef6\u5185\u4e86\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"}," void filecopy(FILE *in_fp, FILE *out_fp) {\n     char ch; \n     while ((ch = fgetc(in_fp)) != EOF) {\n         fputc(ch, out_fp); \n     } \n } \n\n")),(0,l.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u4f1a\u901a\u8fc7\u4e00\u4e2a\u53ef\u8bfb\u6a21\u5f0f\u7684\u6587\u4ef6\u6307\u9488\u9010\u5b57\u7b26\u5730\u8bfb\u53d6\uff0c\u5e76\u4e14\u901a\u8fc7\u4e00\u4e2a\u53ef\u5199\u6a21\u5f0f\u7684\u6587\u4ef6\u6307\u9488\u9010\u5b57\u7b26\u5730\u5c06\u6240\u6709\u5b57\u7b26\u5199\u51fa\uff0c\u4ece\u800c\u8d77\u5230\u590d\u5236\u6587\u4ef6\u5185\u5bb9\u7684\u4f5c\u7528\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"stdin"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"stdout "),"\u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"stderr "),"\u5206\u522b\u7528\u4e8e\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u3001\u6807\u51c6\u9519\u8bef\u7684\u6587\u4ef6\u6307\u9488\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'// fgets():\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\nchar *fgets(char *str, int n, FILE *fp)\n// fputs():\u5199\u5165\u5b57\u7b26\u4e32\u5230\u6587\u4ef6\u4e2d\u53bb\n    \n    while(fgets(buffer,SIZE,fp1)!=NULL)\n        printf("%s\\n",buffer);\n    while(fgets(buffer,SIZE,fp2)!=NULL)\n        fputs(buffer,fp1);\n    \n   int fprintf(FILE *fp,char *format,arg_list)\n')),(0,l.kt)("h2",{id:"\u8ba1\u849c\u8bfe\u5de5\u7a0b"},"\u8ba1\u849c\u8bfe\u5de5\u7a0b"),(0,l.kt)("h3",{id:"\u7b80\u5355\u547d\u4ee4\u7684\u5b9e\u73b0"},"\u7b80\u5355\u547d\u4ee4\u7684\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <string.h>\n#include "roman.h"\n\ntypedef struct {\n    int roman_flag;\n    FILE *fin;\n    FILE *fout;\n} System_args;\n\nint init(int, char *[], System_args *);\nvoid read_and_output(System_args *);\nvoid close_all(System_args *);\n\nint main(int argc, char *argv[])\n{\n    System_args main_args;\n    if (init(argc, argv, &main_args) == 0) {\n        return 0;\n    }\n    read_and_output(&main_args);\n    close_all(&main_args);\n    return 0;\n}\n \nint init(int argc, char *argv[], System_args *args) {\n    if (argc < 2) {\n        return 0;\n    }\n    args->roman_flag = (strcmp(argv[1], "-r") == 0 ? 1 : 0);\n    args->fin = stdin;\n    args->fout = stdout;\n    if (argc >= 3) {\n        args->fin = fopen(argv[2], "r");\n        if (argc >= 4) {\n            args->fout = fopen(argv[3], "w");\n        }\n    }\n    return 1;\n}\n \nvoid close_all(System_args *args) {\n    if (args->fin != stdin) {\n        fclose(args->fin);\n        args->fin = NULL;\n    }\n    if (args->fout != stdout) {\n        fclose(args->fout);\n        args->fout = NULL;\n    }\n    return ;\n}\n\nvoid read_and_output(System_args *args) {\n    if (args->fin == NULL || args->fout == NULL) return ;\n    int line_index = 1;\n    int output_line_index = 1;\n    char dst[25];\n    char c;\n    while (fscanf(args->fin, "%c", &c) != EOF) {\n        if (output_line_index == 1) {\n            if (args->roman_flag) {\n                fprintf(args->fout, "%s\\t", to_roman_numeral(dst, line_index));\n            } else {\n                fprintf(args->fout, "%d\\t", line_index);\n            }\n            output_line_index = 0;\n        }\n        fprintf(args->fout, "%c", c);\n        if (c == \'\\n\') {\n            output_line_index = 1;\n            ++line_index;\n        }\n    }\n    return ;\n}\n')),(0,l.kt)("h3",{id:"\u81ea\u5236\u7b80\u6613oj"},"\u81ea\u5236\u7b80\u6613OJ"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include "run.h"\n\nint main()\n{\n    const char *name_program = "./program";\n    const char *name_in = "./in.txt";\n    const char *name_out = "./out.txt";\n    const char *name_right = "./right.txt";\n    run(name_program, name_in, name_out);\n    FILE *fpright = fopen(name_right, "r");\n    FILE *fpout = fopen(name_out, "r");\n    // Input your code here.\n    char c1, c2;\n    int ret1, ret2;\n    int right_flag = 1;\n    while (right_flag) {\n        ret1 = fscanf(fpright, "%c", &c1);\n        ret2 = fscanf(fpout, "%c", &c2);\n        if (ret1 == EOF || ret2 == EOF) break;\n        if (c1 != c2) {\n            right_flag = 0;\n        }\n    }\n\n    if (right_flag == 1) {\n        if (ret1 != EOF || ret2 != EOF) {\n            if ((ret1 != EOF && c1 == \'\\n\') ||\n                (ret2 != EOF && c2 == \'\\n\')) {\n                ret1 = fscanf((ret1 != EOF ? fpright : fpout), "%c", &c1);\n                right_flag = (ret1 == EOF ? 1 : 0);\n            } else {\n                right_flag = 0;\n            }\n        }\n    }\n    printf("%s", right_flag ? "Accept" : "Wrong Answer");\n    fclose(fpout);\n    fclose(fpright);\n    return 0;\n}\n')),(0,l.kt)("h2",{id:"makefile\u6587\u4ef6-1"},"==makefile\u6587\u4ef6=="),(0,l.kt)("p",null,"\u5728Makefile\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u53d8\u91cf\u548c\u6ce8\u91ca\u3002 "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-makefile"},"# \u4e95\u53f7\u5f00\u5934\u7684\u884c\u662f\u4e00\u4e2a\u6ce8\u91ca \n# \u8bbe\u7f6e C \u8bed\u8a00\u7684\u7f16\u8bd1\u5668 \nCC = gcc  \n# -g \u589e\u52a0\u8c03\u8bd5\u4fe1\u606f\n# -Wall \u6253\u5f00\u5927\u90e8\u5206\u8b66\u544a\u4fe1\u606f \nCFLAGS = -g -Wall  \n# \u6574\u7406\u4e00\u4e0b main \u4f9d\u8d56\u54ea\u4e9b\u76ee\u6807\u6587\u4ef6    OBJS:\u5bf9\u8c61\u96c6\nMAINOBJS = main.o array.o\n\n.PHONY: clean  \n\nmain: $(MAINOBJS)\n    $(CC) $(CFLAGS) -o main $(MAINOBJS) \narray.o: array.c array.h\n    $(CC) $(CFLAGS) -c -o array.o array.c  \nmain.o: main.c array.h \n    $(CC) $(CFLAGS) -c -o main.o main.c  \nclean: rm -f $(MAINOBJS) main \n\n\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CC"),"\u53d8\u91cf\u5b9a\u4e49\u4e86\u7f16\u8bd1\u5668\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"CFLAGS"),"\u53d8\u91cf\u6807\u8bb0\u4e86\u7f16\u8bd1\u53c2\u6570\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"MAINOBJS"),"\u53d8\u91cf\u8bb0\u5f55\u4e86main\u4f9d\u8d56\u7684\u76ee\u6807\u6587\u4ef6\u3002\u5b9a\u4e49\u7684\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"$(\u53d8\u91cf\u540d)"),"\u8fdb\u884c\u4f7f\u7528\u3002"),(0,l.kt)("h2",{id:"gccg"},"==gcc/g++=="),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcc file.c -lm"),"\t\t\t\u94fe\u63a5\u51fd\u6570\u5e93"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcc file.c -std=c99"),"   \t\tC\u8bed\u8a00\u7248\u672c"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcc file.c -o program")," \t\u751f\u6210program\u7a0b\u5e8f"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cp file.exe /usr/bin"),"  \u4efb\u4f55\u5730\u65b9\u53ef\u6267\u884c"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -E file.cpp")," \u663e\u793a\u9884\u5904\u7406\u9636\u6bb5\u4ee3\u7801"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -c file.cpp")," \u751f\u6210\u5bf9\u8c61\u6587\u4ef6"),(0,l.kt)("p",null,"g++ -S\u751f\u6210\u4e00\u4e2a .s\u6587\u4ef6"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"g++ -c -I\u76ee\u5f55 file.c"),"\u5c06\u67d0\u4e00\u76ee\u5f55\u6dfb\u52a0\u5230\u7cfb\u7edf\u67e5\u627e\u76ee\u5f55\u4e2d"),(0,l.kt)("p",null,"Linux\u4e0bgcc\u7f16\u8bd1c\u6587\u4ef6\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u5206\u4e3a\u56db\u4e2a\u6b65\u9aa4\uff1a \u5206\u522b\u662f \u9884\u7f16\u8bd1\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u3001\u94fe\u63a5\n1\u3001\u9884\u7f16\u8bd1( \u751f\u6210 hello.i \u6587\u4ef6)"),(0,l.kt)("p",null,"\u9884\u7f16\u8bd1\u5668cpp \u628a\u6e90\u4ee3\u7801\u6587\u4ef6\u548c\u76f8\u5173\u7684\u5934\u6587\u4ef6\uff08\u5982stdio.h\uff09\u9884\u7f16\u8bd1\u6210\u4e00\u4e2a .i \u6587\u4ef6"),(0,l.kt)("p",null,"\u9884\u7f16\u8bd1\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -E hello.c -o hello.i \u6216\u8005 gcc  hello.c > hello.i\n")),(0,l.kt)("p",null,"\u9884\u7f16\u8bd1\u7684\u5904\u7406\u89c4\u5219\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\u5c06\u6240\u6709\u7684 \u201c#define\u201d \u5220\u9664\uff0c\u5e76\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49\n\u5904\u7406\u6240\u6709\u7684\u6761\u4ef6\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u6bd4\u5982\uff1a" #if #ifdef #elif #else #endif "\n\u5904\u7406\u6240\u6709\u7684 \u201c#include\u201d \u9884\u7f16\u8bd1\u6307\u4ee4\n\u5220\u9664\u6240\u6709\u7684\u6ce8\u91ca \u201c//\u201d \u3001 \u201c/* */\u201d\n\u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6\uff0c\u4ee5\u4fbf\u7f16\u8bd1\u65f6\u4ea7\u751f\u7684\u884c\u53f7\u4fe1\u606f\u4ee5\u53ca\u7528\u4e8e\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u80fd\u591f\u663e\u793a\u884c\u53f7\n\u4fdd\u7559\u6240\u6709\u7684 \u201c#pragma\u201d \u7f16\u8bd1\u5668\u6307\u4ee4\n')),(0,l.kt)("p",null,"2\u3001\u7f16\u8bd1(\u751f\u6210\u6c47\u7f16\u4ee3\u7801 hello.s)"),(0,l.kt)("p",null,"\u7f16\u8bd1\u8fc7\u7a0b\u662f\u7f16\u8bd1\u5668gcc\u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sehll"}," gcc -S hello.i -o hello.s \u6216\u8005  gcc -S hello.c -o hello.s\n")),(0,l.kt)("p",null,"\u90fd\u53ef\u4ee5\u5f97\u5230\u6c47\u7f16\u8f93\u51fa\u6587\u4ef6 hello.s\n3\u3001\u6c47\u7f16(\u751f\u6210hello.o\u6587\u4ef6)"),(0,l.kt)("p",null,"\u6c47\u7f16\u662f \u6c47\u7f16\u5668as \u628a\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ gcc -c hello.s -o hello.o \u6216\u8005 $ gcc -S hello.c -o hello.o\n")),(0,l.kt)("p",null,"4\u3001\u94fe\u63a5\uff08\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\uff09"),(0,l.kt)("p",null,"\u94fe\u63a5\u5668 ld\uff1a\u8d1f\u8d23\u5c06\u7a0b\u5e8f\u7684\u76ee\u6807\u6587\u4ef6\u4e0e\u6240\u9700\u7684\u6240\u6709\u9644\u52a0\u7684\u76ee\u6807\u6587\u4ef6\u8fde\u63a5\u8d77\u6765\uff0c\u9644\u52a0\u7684\u76ee\u6807\u6587\u4ef6\u5305\u62ec\u9759\u6001\u8fde\u63a5\u5e93\u548c\u52a8\u6001\u8fde\u63a5\u5e93"),(0,l.kt)("p",null,"\u94fe\u63a5\u662f\u94fe\u63a5\u5668ld\u628a\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\u548c\u76f8\u5e94\u7684\u5e93\u4e00\u8d77\u94fe\u63a5\u6210\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ gcc hello.o -o hello\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"$ gcc hello.c"),"\u547d\u4ee4\uff0c\u9ed8\u8ba4\u4f1a\u4ea7\u751f\u4e00\u4e2aa.out \u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\n",(0,l.kt)("inlineCode",{parentName:"p"},"$gcc\u2212o test hello.c"),"\u547d\u4ee4\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2atest\u7684\u53ef\u6267\u884c\u6587\u4ef6"),(0,l.kt)("p",null,"\u6ce8\uff1a\u4e0a\u8ff0\u6b65\u9aa4\u53ef\u4ee5\u653e\u5728\u4e00\u8d77\u6267\u884c"),(0,l.kt)("p",null,"$ gcc hello.c -o hello \u751f\u6210hello\u53ef\u6267\u884c\u6587\u4ef6"),(0,l.kt)("h1",{id:"\u96f6\u788e\u77e5\u8bc6\u70b9"},"\u96f6\u788e\u77e5\u8bc6\u70b9"),(0,l.kt)("p",null,"&& ||  a++ ++a \u8981\u70b9"),(0,l.kt)("h2",{id:"\u968f\u673a\u6570"},"\u968f\u673a\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <time.h>\n#include <stdlib.h>\nsrand(time(0));     //\u968f\u673a\u79cd\u5b50\uff0ctime(0):\u7a0b\u5e8f\u5f53\u524d\u65f6\u95f4\uff0c\u6309\u79d2\u3002\nint val = rand() % 100;   //\u4f2a\u968f\u673a\u6570,\u53ea\u89e3\u51b3\u6bcf\u6b21\u4e0d\u4e00\u6837\n")),(0,l.kt)("h2",{id:"\u5de6\u503c\uff0c\u53f3\u503c"},"\u5de6\u503c\uff0c\u53f3\u503c"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"}," \u540e\u9762\u80fd\u5426\u8bbf\u95ee\u5230\uff0c\u80fd\u5373\u4e3a\u5de6\u503c\uff0c\u5426\u5373\u4e3a\u53f3\u503c")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b = (++c)++;"),"   "),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b = ++c++"),"  \u7b49\u540c ",(0,l.kt)("inlineCode",{parentName:"p"},"b  = ++(c++)"),"  --\u300berror"),(0,l.kt)("h2",{id:"\u4e8c\u5206\u6cd5"},"\u4e8c\u5206\u6cd5"),(0,l.kt)("p",null,"\u5355\u8c03\u51fd\u6570"),(0,l.kt)("p",null,"\u89e3\u51b3",(0,l.kt)("inlineCode",{parentName:"p"},"1,1,1,1,1,1,0,0,0,0"),"\u627e\u6700\u540e\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"1")),(0,l.kt)("p",null,"\u8981\u70b9\uff1a\u4e0a\u53d6\u6574"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'int binary_search(int *arr, int n) {\n    int head = -1, tail = n - 1, mid;   //head = -1;\u865a\u62df\u5934;\u5f71\u54cd\u7b2c\u4e00\u6b21mid,\u4f46\u4e0d\u5f71\u54cd\u6574\u4f53\n    while (head < tail) {\n        cout << "head: " << head << " tail" << tail << endl;\n        mid = (head + tail + 1) >> 1;\u3000\u3000//\u4e0a\u53d6\u6574\uff0c\u89e3\u51b3\u51fa\u73b0\u7684\u6b7b\u5faa\u73af\n        if (arr[mid] == 1) head = mid;\n        else tail = mid - 1;\n    }\n    cout << head << endl;;\n    return head;\n}\n')),(0,l.kt)("p",null,"\u89e3\u51b3",(0,l.kt)("inlineCode",{parentName:"p"},"0,0,0,0,1,1,1,1,1,1"),"\u627e\u7b2c\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"\uff11")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'int binary_search(int *arr, int n) {\n    int head = 0, tail = n, mid;   // tail = n\uff1b\u865a\u62df\u5c3e\n    while (head < tail) {\n        cout << "head: " << head << " tail: " << tail << endl;\n        mid = (head + tail) >> 1;\n        if (arr[mid] == 1) tail = mid;\n        else head = mid + 1;\n    }\n    return head != n ? tail : -1;\n}\n\n')),(0,l.kt)("h2",{id:"\u6253\u5370\u989c\u8272"},"\u6253\u5370\u989c\u8272"),(0,l.kt)("p",null,"\u7528\u6cd5:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'printf("\\033[47;31mThis is a color test.\\033[0m");\n')),(0,l.kt)("p",null,"47\u662f\u5b57\u80cc\u666f\u989c\u8272, 31\u662f\u5b57\u4f53\u7684\u989c\u8272, This is a color test.\u662f\u5b57\u7b26\u4e32. ",(0,l.kt)("inlineCode",{parentName:"p"},"\\033[0m"),"\u662f\u63a7\u5236\u7801;"),(0,l.kt)("p",null,"\u90e8\u5206\u989c\u8272\u4ee3\u7801:\n\u5b57\u80cc\u666f\u989c\u8272: 40--49                \u5b57\u989c\u8272: 30--39\n40: \u9ed1                           30: \u9ed1\n41: \u7ea2                           31: \u7ea2\n42: \u7eff                           32: \u7eff\n43: \u9ec4                           33: \u9ec4\n44: \u84dd                           34: \u84dd\n45: \u7d2b                           35: \u7d2b\n46:\u6df1\u7eff                       36: \u6df1\u7eff\n47:\u767d\u8272                       37:\u767d\u8272"),(0,l.kt)("p",null,"  \\033[0m   \u5173\u95ed\u6240\u6709\u5c5e\u6027   \u8fd9\u4e2a\u5173\u95ed\u7684\u5c5e\u6027\u662f\u6307\u7684\u4e4b\u524d\u901a\u8fc7ANSI\u63a7\u5236\u7801\u83b7\u5f97\u7684\u5c5e\u6027\n\\033[1m   \u8bbe\u7f6e\u9ad8\u4eae\u5ea6  \uff08\u5149\u6807\u8fc7\u51fa\u5747\u53d8\u4e3a\u80cc\u666f\u8272\uff09\n\\03[4m   \u4e0b\u5212\u7ebf",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[5m   \u95ea\u70c1",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[7m   \u53cd\u663e",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[8m   \u6d88\u9690",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[30m   --   \\033[37m   \u8bbe\u7f6e\u524d\u666f\u8272",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[40m   --   \\033[47m   \u8bbe\u7f6e\u80cc\u666f\u8272",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[nA   \u5149\u6807\u4e0a\u79fbn\u884c",(0,l.kt)("br",{parentName:"p"}),"\n","\\03[nB   \u5149\u6807\u4e0b\u79fbn\u884c",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[nC   \u5149\u6807\u53f3\u79fbn\u884c",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[nD   \u5149\u6807\u5de6\u79fbn\u884c",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[y;xH\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[2J   \u6e05\u5c4f",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[K   \u6e05\u9664\u4ece\u5149\u6807\u5230\u884c\u5c3e\u7684\u5185\u5bb9",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[s   \u4fdd\u5b58\u5149\u6807\u4f4d\u7f6e",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[u   \u6062\u590d\u5149\u6807\u4f4d\u7f6e",(0,l.kt)("br",{parentName:"p"}),"\n","\\033[?25l   \u9690\u85cf\u5149\u6807",(0,l.kt)("br",{parentName:"p"}),"\n","\\33[?25h   \u663e\u793a\u5149\u6807"),(0,l.kt)("h2",{id:"\u4fee\u9970\u7b26"},"\u4fee\u9970\u7b26"),(0,l.kt)("p",null,"C99 \u4fee\u9970\u7b26:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'extern: \u9ed8\u8ba4\u4fee\u9970\u7b26\uff0c\u7528\u4e8e\u51fd\u6570\u8868\u793a "\u5177\u6709\u5916\u90e8\u94fe\u63a5\u7684\u6807\u8bc6\u7b26"\uff0c\u8fd9\u7c7b\u51fd\u6570\u53ef\u2f64\u4e8e\u4efb\u4f55\u7a0b\u5e8f\u2f42\u4ef6\u3002\u2f64\u7528\u4e8e\u53d8\u91cf\u58f0\u660e\u8868\u2f70\u793a\u8be5\u53d8\u91cf\u5728\u5176\u4ed6\u5355\u5143\u4e2d\u5b9a\u4e49\u3002'),(0,l.kt)("li",{parentName:"ul"},"static: \u4f7f\u7528\u8be5\u4fee\u9970\u7b26\u7684\u51fd\u6570\u4ec5\u5728\u5176\u6240\u5728\u7f16\u8bd1\u5355\u5143 (\u6e90\u7801\u2f42\u6587\u4ef6) \u4e2d\u53ef\u7528\u3002\u8fd8\u53ef\u4ee5\u8868\u793a\u51fd\u6570\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u3002"),(0,l.kt)("li",{parentName:"ul"},"inline: \u4fee\u9970\u7b26 inline \u5efa\u8bae\u7f16\u8bd1\u5668\u5c06\u51fd\u6570\u4ee3\u7801\u5185\u8054\u5230\u8c03\u2f64\u7528\u5904\uff0c\u4f46\u7f16\u8bd1\u5668\u53ef\u2f83\u4e3b\u51b3\u5b9a\u662f\u5426\u5b8c\u6210\u3002\u901a\u5e38\u5305\u542b\u5faa\u73af\u6216\u9012\u5f52\u51fd\u6570\u4e0d\u80fd\u88ab\u5b9a\u4e49\u4e3a inline \u51fd\u6570\u3002")),(0,l.kt)("p",null,"GNU inline \u76f8\u5173\u8bf4\u660e:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"static inline: \u5185\u94fe\u63a5\u51fd\u6570\uff0c\u5728\u5f53\u524d\u7f16\u8bd1\u5355\u5143\u5185\u5185\u8054\u3002\u4e0d\u8fc7 -O0 \u65f6\u4f9d\u7136\u662f call\u3002"),(0,l.kt)("li",{parentName:"ul"},"inline: \u5916\u8fde\u63a5\u51fd\u6570\uff0c\u5f53\u524d\u5355\u5143\u5185\u8054\uff0c\u5916\u90e8\u5355\u5143\u4e3a\u666e\u901a\u5916\u8fde\u63a5\u51fd\u6570 (\u5934\u2f42\u6587\u4ef6\u4e2d\u4e0d\u80fd\u6dfb\u52a0 inline \u5173\u952e\u5b57)\u3002\n\u9644\uff1ainline \u5173\u952e\u5b57\u53ea\u80fd\u2f64\u7528\u5728\u51fd\u6570\u5b9a\u4e49\u5904\u3002")),(0,l.kt)("p",null,"extern int a;"),(0,l.kt)("p",null,"\u663e\u5f0f\u7684\u8bf4\u660e\u4e86a\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u5728\u7a0b\u5e8f\u7684\u5176\u4ed6\u5730\u65b9\u5206\u914d\u7684\uff0c\u5728\u6587\u4ef6\u4e2d\u5176\u4ed6\u4f4d\u7f6e\u6216\u8005\u5176\u4ed6\u6587\u4ef6\u4e2d\u5bfb\u627ea\u8fd9\u4e2a\u53d8\u91cf\u3002"),(0,l.kt)("p",null,"\u7528\u6cd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e00\u4e2ac\u6587\u4ef6\u9700\u8981\u8c03\u7528\u53e6\u4e00\u4e2ac\u6587\u4ef6\u91cc\u7684\u53d8\u91cf\u6216\u8005\u51fd\u6570\uff0c\u800c\u4e0d\u80fd\u4ece.h\u6587\u4ef6\u4e2d\u8c03\u7528\u53d8\u91cf\u3002"),(0,l.kt)("p",{parentName:"li"},"a.c\u6587\u4ef6\u4e2d\u5b9a\u4e49",(0,l.kt)("inlineCode",{parentName:"p"},"int a = 5"),"\u548c\u4e00\u4e2a\u51fd\u6570\uff0c\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"a.h"),"\u91cc\u5199",(0,l.kt)("inlineCode",{parentName:"p"},"extern int a"),";\uff0c\u5982\u679c\u8981\u5728\u5176\u4ed6\u6587\u4ef6\u91cc\u8c03\u7528a\u8fd9\u4e2a\u53d8\u91cf\u548c\u51fd\u6570\uff0c\u76f4\u63a5",(0,l.kt)("inlineCode",{parentName:"p"},"#include<a.h>"),"\u5373\u53ef")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"extern int a = 5"),"\u4e0e",(0,l.kt)("inlineCode",{parentName:"p"},"int a = 5"),"\u610f\u4e49\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u5b9a\u4e49\u3002\u800c",(0,l.kt)("inlineCode",{parentName:"p"},"extern int a;"),"\u662f\u58f0\u660e\u3002\u4f46\u4f1a\u4ea7\u751f\u4e00\u6761\u8b66\u544a\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u51fd\u6570\u800c\u8a00\uff0c\u548c\u5f15\u7528\u53d8\u91cf\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u9700\u8981\u8c03\u7528\u5176\u4ed6.c\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\uff0c\u5728\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u58f0\u660e\u524d\u52a0extern\u5373\u53ef\uff0c\u4e0d\u52a0extern\u800c\u76f4\u63a5\u58f0\u660e\u51fd\u6570\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a\u58f0\u660e\u5168\u5c40\u51fd\u6570\u9ed8\u8ba4\u524d\u9762\u5e26\u6709extern\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5982\u679c\u4e0d\u60f3\u8ba9\u5176\u4ed6.c\u6587\u4ef6\u5f15\u7528\u672c\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\uff0c\u52a0\u4e0astatic\u5373\u53ef")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'extern\u548cinclude\u7684\u533a\u522b\ninclude\u76f8\u5f53\u4e8e\u628ainclude .h\u6587\u4ef6\u76f4\u63a5\u5e26\u5165\u5230\u672c\u6e90\u6587\u4ef6\u91cc\uff0c\u6bd4\u5982\u5728b.c\u6587\u4ef6\u91ccinclude "a.h"\uff0c\u5c31\u76f8\u5f53\u4e8e\u628aa.h\u6587\u4ef6\u91cc\u6240\u6709\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u51fd\u6570\u5168\u90e8\u62f7\u8d1d\u4e86\u4e00\u4efd\u653e\u5165\u4e86b.c\u91cc\uff0c\u4e00\u4e2a\u9879\u76ee\u91cc\uff0c\u4e00\u4e2a.h\u6587\u4ef6\u53ef\u80fd\u4f1a\u88ab\u591a\u4e2a.c\u6e90\u6587\u4ef6\u5305\u542b\uff0c\u8fd9\u6837\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u91cd\u590d\u5b9a\u4e49\u7684\u9519\u8bef\u3002\u800c\u4e14\u5c3d\u91cf\u4e0d\u8981\u5728.h\u91cc\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u597d\u7684\u4e60\u60ef\u3002'))))}o.isMDXComponent=!0},43786:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200503154422346-1624113642057-3e7596263afd9b513177cbbdbcb62ca1.png"},29083:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200503155006257-1624113651226-8f17e2b4a0c520548298b200377f3dc7.png"},38745:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200505172052330-1624113625840-65208c1df47f7e897ceddacc556042f4.png"},81512:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200514182559568-1624113690480-31653acd738f1c0ba2bb0da9f2fd5298.png"},96706:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200514183134694-1624113683308-01d27120bedc01ac34934f084dcb4f16.png"},85103:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200516141626848-1624158252361-6e13fd603ab6d82fbabf2c7a070b8133.png"},32231:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20200516150818793-1624113700030-5e874f63f23ef6f7c0ba4ac5c5d177d7.png"},68189:function(n,e,t){"use strict";e.Z=t.p+"assets/images/image-20210313223213465-1624113671141-b05a72bd4e9bad699c4f7a9c8280e419.png"}}]);